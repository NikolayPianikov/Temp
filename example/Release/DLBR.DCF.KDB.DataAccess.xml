<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DLBR.DCF.KDB.DataAccess</name>
    </assembly>
    <members>
        <member name="T:DLBR.DCF.KDB.DataAccess.Exceptions.BatchCommitInseminatorTimeRecordException">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IVetSampleHealthAnimalRepository">
            <summary>
            Interface to repository responsible for handling VetSampleHealthAnimalEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IVetSampleHealthAnimalRepository.GetAnimalHealthEntityById(System.Int64)">
            <summary>
            Gets a single <see href="VetSampleHealthAnimalEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.VetSampleHealthAnimalEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IVetSampleHealthAnimalRepository.FindAnimalHealthEntitiesByAnimalNumber(System.Int64,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all VetSampleHealthAnimalEntity in the database that matches the specified parameters.
            </summary>
            <param name="animalNumber"> AnimalNumber to use when finding entities.</param>
            <param name="vetSampleCode">VetSample type code. 7= ParaTB, 10=mycoplasma. If null, all AnimalHealths matching the other criteria´s are returned.</param>
            <param name="fromDate">Start date of period that AnimalHealths lies within.</param>
            <param name="toDate">End date of period that AnimalHealths lies within.</param>
            <param name="requestedCount">If set only specified number of AnimalHealths is returned in decending order.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.VetSampleHealthAnimalEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IVetSampleHealthAnimalRepository.FindAnimalHealthEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
             <summary>
             Finds all VetSampleHealthAnimalEntity in the database that matches the specified parameters.
             </summary>
            <param name="herdNumber">HerdNumber to use when finding entities.</param>
            <param name="animalType"></param>
            <param name="vetSampleCode">VetSample type code. 7= ParaTB, 10=mycoplasma. If null, all AnimalHealths matching the other criteria´s are returned.</param>
            <param name="fromDate">Start date of period that AnimalHealths lies within.</param>
            <param name="toDate">End date of period that AnimalHealths lies within.</param>
            <param name="requestedCount">If set only specified number of AnimalHealths is returned in decending order.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.VetSampleHealthAnimalEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IVetSampleHealthRepository">
            <summary>
            Interface to repository responsible for handling VetSampleHealthEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IVetSampleHealthRepository.FindHerdHealthEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
             <summary>
             Finds all VetSampleHealthEntity in the database that matches the specified parameters.
             </summary>
            <param name="herdNumber">HerdNumber to use when finding entities.</param>
             <param name="animalType">Type of animal to use when finding entities.</param>
             <param name="pcrSampleCode">PCR sample code. 13 or 14. If null, all HerdHealths matching the other criteria´s are returned.</param>
             <param name="fromDate">Start date of period that HerdHealths lies within.</param>
             <param name="toDate">End date of period that HerdHealths lies within.</param>
             <param name="requestedCount">If set only specified number of HerdHealths is returned in decending order.</param>
             <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.VetSampleHealthEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AnimalWeightEntityRepository.AnimalWeightExpectedEntityFactory">
            <summary>
            Factory responsible for creating instances of the AnimalWeightEntity business entity.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AnimalWeightEntityRepository.AnimalWeightEntityFactory">
            <summary>
            Factory responsible for creating instances of the AnimalWeightEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalWeightEntityRepository.AnimalWeightEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalWeightEntityRepository.AnimalWeightExpectedEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_COWMARKET.HND_COWMARKET">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_COWMARKET.HND_COWMARKET
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_COWMARKET.HND_COWMARKET.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_COWMARKET.HND_COWMARKET.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_COWMARKET.HND_COWMARKET.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_COWMARKET.HND_COWMARKET.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_COWMARKET.HND_COWMARKET.Parameters.pid">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_COWMARKET.HND_COWMARKET.Parameters.pckrdyrnr">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_COWMARKET.HND_COWMARKET.Parameters.pdatotil">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_COWMARKET.HND_COWMARKET.Parameters.phndtype">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_COWMARKET.HND_COWMARKET.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Interfaces.ICowmarketHealthInformationRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.ICowmarketHealthInformationRepository.GetCowmarketHealthDataByAnimalNumber(System.Int64)">
            <summary>
            
            </summary>
            <param name="animalNumber"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Interfaces.ICowmarketBaseInformationRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.ICowmarketBaseInformationRepository.GetCowmarketBaseDataByAnimalNumber(System.Int64)">
            <summary>
            
            </summary>
            <param name="animalNumber"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Interfaces.ICowmarketTransferRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.ICowmarketTransferRepository.FindAnimalTransferOnAnimalForSale(System.Nullable{System.Int64},System.DateTime,System.DateTime)">
            <summary>
            
            </summary>
            <param name="chrNumber"></param>
            <param name="dateFrom"></param>
            <param name="dateTo"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.ICowmarketTransferRepository.FindAnimalTransferOnAnimalForSaleByCvr(System.Nullable{System.Int64},System.DateTime,System.DateTime)">
            <summary>
            
            </summary>
            <param name="cvrNumber"></param>
            <param name="dateFrom"></param>
            <param name="dateTo"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Interfaces.IBenchmarkCriteriaEntityRepository">
            <summary>
            Interface to repository responsible for handling benchmark criteria
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.IBenchmarkCriteriaEntityRepository.FindCriteria">
            <summary>
            Method to retrive alle benchmark criteria
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IHerdInfoVFLEntityRepository">
            <summary>
            Interface to repository responsible for handling HerdInfoEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IHerdInfoVFLEntityRepository.FindHerdInfoVFLEntity(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Finds all HerdInfoVFLEntity in the database that matches the specified parameters/&gt;
            </summary>
            <param name="Cprno">Nullable Cpn no to get herds from the database.</param>
            <param name="Cvrno">Nullable Cvr no to get herds from the database.</param>
            <returns>
            A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdInfoVFLEntity"/>
            </returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IInseminatorDeliveredSemenEntityRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorDeliveredSemenEntityRepository.GetDeliveredSemenEntityById(System.Int64)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorDeliveredSemenEntityRepository.FindDeliveredSemenEntitiesByInsNumber(System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            
            </summary>
            <param name="insNumber"></param>
            <param name="fromDate"></param>
            <param name="toDate"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorDeliveredSemenEntityRepository.RegisterDeliveredSemenEntity(System.Int64,System.DateTime,System.Int32)">
            <summary>
            
            </summary>
            <param name="insNumber"></param>
            <param name="regDate"></param>
            <param name="DeliveredSemen"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorDeliveredSemenEntityRepository.UpdateDeliveredSemenEntity(DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.InseminatorDeliveredSemenEntity)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorDeliveredSemenEntityRepository.DeleteDeliveredSemenEntity(DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.InseminatorDeliveredSemenEntity)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IDiagnosisTreatmentEntityRepository">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IDiagnosisTreatmentEntityRepository.FindDiagnosisTreatmentByDiagnosisId(System.Decimal)">
            <summary>
            </summary>
             <param name="diagnosisCode"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IDiagnosisTreatmentEntityRepository.GetDiagnosisTreatmentById(System.Decimal)">
            <summary>
            </summary>
             <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IInseminatorHomeTimeEntityRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorHomeTimeEntityRepository.GetHomeTimeEntityById(System.Int64)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorHomeTimeEntityRepository.FindHomeTimeEntitiesByInsNumber(System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            
            </summary>
            <param name="insNumber"></param>
            <param name="fromDate"></param>
            <param name="toDate"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorHomeTimeEntityRepository.RegisterHomeTimeEntity(System.Int64,System.DateTime,System.Decimal)">
            <summary>
            
            </summary>
            <param name="insNumber"></param>
            <param name="regDate"></param>
            <param name="homeTime"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorHomeTimeEntityRepository.UpdateHomeTimeEntity(DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.InseminatorHomeTimeRegistrationEntity)">
            <summary>
            
            </summary>
            <param name="registrationEntity"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorHomeTimeEntityRepository.DeleteHomeTimeEntity(DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.InseminatorHomeTimeRegistrationEntity)">
            <summary>
            
            </summary>
            <param name="registrationEntity"></param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.ILactationRecordEntityRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ILactationRecordEntityRepository.FindLactationValuesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity)">
            <summary>
            
            </summary>
            <param name="herdNumber"></param>
            <param name="animalType"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ILactationRecordEntityRepository.FindLactationValuesByAnimalNumber(System.Int64)">
            <summary>
            
            </summary>
            <param name="animalNumber"></param>
            <returns></returns> 
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.ISubscriberInvoiceVFLEntityRepository">
            <summary>
            Interface to repository responsible for handling SubscriberInvoiceVFLEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ISubscriberInvoiceVFLEntityRepository.FindSubscriberInvoiceListVFLEntity(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Finds all SubscriberInvoiceVFLEntity in the database that matches the specified <paramref name="Cprno"/> and <paramref name="Cvrno"/>
            </summary>
            <param name="Cprno">Nullable cprno to get subscriber invoice list from the database.</param>
            <param name="Cvrno">Nullable cvrno to get subscriber invoice list from the database.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.SubscriberInvoiceVFLEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.ITreatmentLineEntityRepository">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ITreatmentLineEntityRepository.FindTreatmentLinesByTreatmentId(System.Decimal)">
            <summary>
            </summary>
             <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ITreatmentLineEntityRepository.GetTreatmentLineById(System.Decimal)">
            <summary>
            </summary>
             <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ITreatmentLineEntityRepository.UpdateTreatmentLine(System.Decimal,System.Decimal,System.String,System.Boolean,System.DateTime)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="dosage"></param>
            <param name="drugUnitDescription"></param>
            <param name="completed"></param>
            <param name="readDate"></param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ITreatmentLineEntityRepository.DeleteTreatmentLine(System.Decimal,System.DateTime)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="readDate"></param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.ITreatmentEntityRepository">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ITreatmentEntityRepository.FindTreatmentsByHerdNumber(System.Int64,System.Int64)">
            <summary>
            </summary>
             <param name="herdNumber"></param>
             <param name="animalTypeCode"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ITreatmentEntityRepository.GetTreatmentById(System.Decimal)">
            <summary>
            </summary>
             <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ITreatmentEntityRepository.RegisterTreatment(System.Decimal,System.Decimal,System.Decimal,System.DateTime,System.Decimal,System.Nullable{System.Decimal},System.Boolean,System.Boolean,System.String[])">
            <summary>
            </summary>
            <param name="herdNumber"></param>
            <param name="animalTypeCode"></param>
            <param name="animalNumber"></param>
            <param name="treatmentDate"></param>
            <param name="herdDiagnosisCode"></param>
            <param name="weight"></param>
            <param name="completed"></param>
            <param name="autoComplete"></param>
            <param name="warningFlags"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ITreatmentEntityRepository.UpdateTreatment(System.Decimal,System.Decimal,System.Decimal,System.DateTime,System.Decimal,System.Nullable{System.Decimal},System.Boolean,System.Boolean,System.DateTime,System.String[])">
            <summary>
            </summary>
            <param name="id"></param>
            <param name="herdNumber"></param>
            <param name="animalTypeCode"></param>
            <param name="treatmentDate"></param>
            <param name="herdDiagnosisCode"></param>
            <param name="weight"></param>
            <param name="completed"></param>
            <param name="autoComplete"></param>
            <param name="readDate"></param>
            <param name="warningFlags"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ITreatmentEntityRepository.DeleteTreatment(System.Decimal,System.Decimal,System.Decimal,System.DateTime,System.String[])">
            <summary>
            </summary>
            <param name="id"></param>
            <param name="herdNumber"> </param>
            <param name="animalTypeCode"> </param>
            <param name="readDate"></param>
            <param name="warningFlags"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IDiagnosisEntityRepository">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IDiagnosisEntityRepository.FindDiagnosisByHerdNumber(System.Int64,System.Int64)">
            <summary>
            </summary>
             <param name="herdNumber"></param>
             <param name="animalTypeCode"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IDiagnosisEntityRepository.GetDiagnosisById(System.Decimal)">
            <summary>
            </summary>
             <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IBasicInformationFeedingPrincipRepository">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IBasicInformationFeedingPrincipRepository.GetFeedingPrincipList">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IBasicInformationValidationRepository">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IBasicInformationValidationRepository.GetValidationInformations">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IBasicMetadataUnitEntityRepository">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IBasicMetadataUnitEntityRepository.GetBasicMetadata">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IModuleEntityRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IModuleEntityRepository.GetModules">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IKPOAnimalTransferRepository">
            <summary>
            Interface to repository responsible for handling KPOAnimalTransferEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IKPOAnimalTransferRepository.FindAnimalTransfersByManagementUnitId(System.Int64,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all KPOAnimalTransfers in the database that matches the specified <paramref name="managementUnitId"/>
            </summary>
            <param name="managementUnitId"></param>
            <param name="fromDate"></param>
            <param name="toDate"></param>
            <param name="reqCount"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IBasicInformationEntityRepository">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IBasicInformationEntityRepository.GetBasicInformations(System.Int64,System.Int64,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            </summary>
            <param name="managementUnitId"></param>
            <param name="moduleId"></param>
            <param name="fromDate"></param>
            <param name="toDate"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IBasicInformationEntityRepository.GetAllBasicInformations(System.Int64,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            </summary>
            <param name="managementUnitId"></param>
            <param name="fromDate"></param>
            <param name="toDate"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IBasicInformationEntityRepository.InsertBasicInformations(System.Int64,System.Collections.Generic.List{DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.BasicInformationEntity})">
            <summary>
            
            </summary>
            <param name="managementUnitId"></param>
            <param name="basicInformationEntities"></param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IBasicInformationEntityRepository.UpdateBasicInformations(System.Int64,System.Collections.Generic.List{DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.BasicInformationEntity})">
            <summary>
            
            </summary>
            <param name="managementUnitId"></param>
            <param name="basicInformationEntities"></param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IBasicInformationEntityRepository.DeleteBasicInformations(System.Int64,System.Collections.Generic.List{DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.BasicInformationEntity})">
            <summary>
            
            </summary>
            <param name="managementUnitId"></param>
            <param name="basicInformationEntities"></param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IAnimalNumberInfoEntityRepository">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IAnimalNumberInfoEntityRepository.FindAnimalNumbersByOwner(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Int32)">
            <summary>
             Method for retreiving animal number info for animals owned by a specified owner on a given CHR number and animaltype.
             
             Either CVR number or CPR number or both should be provided.
            </summary>
            <param name="chrNumber">The CHR number of the property</param>
            <param name="cvrNumber">Owner CVR number</param>
            <param name="cprNumber">Owner CPR number</param>
            <param name="animalTypeCode">The type of animals in question</param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IOrganicEntityRepository">
            <summary>
            Interface for FindOrganicState
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IOrganicEntityRepository.FindOrganicState(System.Int64,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            FindOrganicState
            </summary>
            <param name="managementUnitId"></param>
            <param name="fromDate"></param>
            <param name="toDate"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IPensionEntityRepository">
            <summary>
            Interface to HeifersInPension
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IPensionEntityRepository.FindHerdsWithHeifersInPension(System.Int64,System.DateTime,System.DateTime,System.Nullable{System.Int32})">
            <summary>
            FindHeifersInPension
            </summary>
            <param name="managementUnitId"></param>
            <param name="fromDate"></param>
            <param name="toDate"></param>
            <param name="requestedCount"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.ISemenDistrictInventoryEntityRepository">
            <summary>
            Interface to repository responsible for handling SemenInventoryEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ISemenDistrictInventoryEntityRepository.FindSemenStocksByDistrictList(System.Collections.Generic.List{System.Int64},System.Boolean)">
            <summary>
            Find SemenStock collection from a district list
            </summary>
            <param name="districtList"></param>
            <param name="onlyStocksWithPositivePortions"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IAppendixPDFEntityRepository">
            <summary>
            Interface to repository responsible for handling AppendixPDFEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAppendixPDFEntityRepository.GetAppendixPDFEntityById(System.Int64)">
            <summary>
            Gets a single <see href="AppendixPDFEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.AppendixPDFEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.ICprInfoEntityRepository">
            <summary>
            Interface to repository responsible for handling CprInfoEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICprInfoEntityRepository.GetCprInfoEntityByCprNumber(System.Int64)">
            <summary>
            gets a single <see href="CprInfoEntity"/> from the database, using the specified <paramref name="cprNumber"/>.
            </summary>
            <param name="cprNumber">Cpr number of the entity to get from the database.</param>
            <returns>a <see cref="T:DLBR.DCF.KDB.BusinessEntities.CprInfoEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICprInfoEntityRepository.FindCprInfoEntitiesByCprNumbers(System.Collections.Generic.List{System.Int64})">
            <summary>
            Finds all CprInfoEntity in the database that matches the Cpr numbers in the specified list <paramref name="cprNumbers"/>
            </summary>
            <param name="cprNumbers">A list of Cpr numbers to use when finding entities.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.CprInfoEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICprInfoEntityRepository.FindUpdatedCprInfoEntitiesByDate(System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Finds all CprInfoEntity in the database that are updated since the specified <paramref name="lastUpdateDate"/>
            </summary>
            <param name="lastUpdateDate">The date to use when finding entities.</param>
            <param name="dateTo"></param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.CprInfoEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICprInfoEntityRepository.UpdateCprInfoEntity(DLBR.DCF.KDB.BusinessEntities.CprInfoEntity)">
            <summary>
            Updates the specified <paramref name="entity"/> in the database.
            Observe that this operation is only legal test environment
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.CprInfoEntity"/> to update.</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IAgriBusinessEntityRepository">
            <summary>
            Interface to repository responsible for handling AgriBusinessEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAgriBusinessEntityRepository.GetAgriBusinessEntityById(System.Int64)">
            <summary>
            Gets a single <see cref="T:DLBR.DCF.KDB.BusinessEntities.AgriBusinessEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">The id of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AgriBusinessEntity"/>.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.AgriBusinessEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAgriBusinessEntityRepository.FindManagementUnitEntitiesByAgriBusinessId(System.Int64,System.Collections.Generic.List{System.Int32})">
            <summary>
            Finds all <see href="ManagementUnitEntity"/> from the database, releated to the AgriBusinessEntity specified by <paramref name="agriBusinessEntityId"/>.
            </summary>
            <param name="agriBusinessEntityId">Id of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AgriBusinessEntity"/> the ManagementUnits are related to.</param>
            <param name="managementUnitIds"></param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.ManagementUnitEntity"/> business entities.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAgriBusinessEntityRepository.FindUserAgriBusinessEntities(System.Int32)">
            <summary>
            Finds all AgriBusinessEntity in the database that the user i authorized to see. 
            Returns a max number of them specified by <paramref name="requestedCount"/>
            </summary>
            <param name="requestedCount">Max number of entities wanted from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.AgriBusinessEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAgriBusinessEntityRepository.FindAgriBusinessEntitiesByCVRNumber(System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Int32)">
            <summary>
            Finds all AgriBusinessEntities in the database that matches at least one of the specified parameters. 
            Returns a max number of them specified by <paramref name="requestedCount"/>
            </summary>
            <param name="cvrNumber">The Central Business Register number.</param>
            <param name="name">The name of the AgriBusiness or a part of the name.</param>
            <param name="herdNumber">Number of a herd that belogns to the AgriBusinessEntity </param>
            <param name="requestedCount">Max number of entities wanted from the database.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AgriBusinessEntity"/> business entities.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAgriBusinessEntityRepository.FindHerdsByCVRCPRNumbers(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Finds all AgriBusinessEntities in the database that matches at least one of the specified parameters. 
            </summary>
            <param name="cvrNumber">The Central Business Register number.</param>
            <param name="cprNumber">The CPR number of the owner.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AgriBusinessEntity"/> business entities.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IAnimalEventLogEntityRepository">
            <summary>
            Interface to repository responsible for handling AnimalEventLogEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalEventLogEntityRepository.FindAnimalEventLogItemsByAnimalNumber(System.Int64,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Method FindAnimalEventLogByAnimalNumber
            </summary>
            <param name="animalNumber">The number of the animal to find event log items for</param>
            <param name="fromDate">Optional lower date bound</param>
            <param name="toDate">Optional upper date bound</param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IAnimalGroupTransferEntityRepository">
            <summary>
            Interface to repository responsible for handling AnimalGroupTransferEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalGroupTransferEntityRepository.GetAnimalGroupTransferEntityById(System.Int64)">
            <summary>
            Gets a single <see href="AnimalGroupTransferEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalGroupTransferEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalGroupTransferEntityRepository.FindAnimalGroupTransferEntitiesByHerdNumber(System.Int64,System.Int64,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all AnimalGroupTransferEntity in the database that matches the specified parameters.
            </summary>
            <param name="herdNumber">Unique number for a herd to use when finding entities.</param>
            <param name="animalType">Unique number for type of animals to find.</param>
            <param name="direction">Direction of animal transfer.</param>
            <param name="from">Query beginning date.</param>
            <param name="to">Query ending date.</param>
            <param name="requestedCount">How many records to return.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalGroupTransferEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalGroupTransferEntityRepository.RegisterAnimalGroupTransferEntity(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.DateTime,System.Nullable{System.Int32},System.Int32,System.Nullable{System.Int64},DLBR.DCF.KDB.BusinessEntities.Classifications.NationalityEntity,System.String,DLBR.DCF.KDB.BusinessEntities.Classifications.NationalityEntity,System.Nullable{System.Int32})">
            <summary>
            Register an animal group transfer in the database.
            </summary>
            <param name="herdNumber">Unique number for a herd</param>
            <param name="date">When this transfer takes place</param>
            <param name="animalType">Unique number for type of animals</param>
            <param name="direction">Direction of animal transfer.</param>
            <param name="numberOfAnimals">How many animals in this transfer</param>
            <param name="herdNumberToFrom">The number the animals are going to or comming from, depending on the direction variable</param>
            <param name="nationality">Nationality of the animals</param>
            <param name="vehicleRegistrationNumber">License plate</param>
            <param name="vehicleNationality">Nationality of the vehicle</param>
            <param name="carrierLicenceNumber">The license number for the carrier</param>
            <returns>The id of the newly inserted <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalGroupTransferEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalGroupTransferEntityRepository.UpdateAnimalGroupTransferEntity(DLBR.DCF.KDB.BusinessEntities.AnimalGroupTransferEntity)">
            <summary>
            Updates the specified AnimalGroupTransferEntity identified by <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">Id of the entity to delete from the database.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalGroupTransferEntityRepository.DeleteAnimalGroupTransferEntity(DLBR.DCF.KDB.BusinessEntities.AnimalGroupTransferEntity)">
            <summary>
            Deletes the specified AnimalGroupTransferEntity identified by <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">Entity to delete from the database.</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.ICvrInfoEntityRepository">
            <summary>
            Interface to repository responsible for handling CvrInfoEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICvrInfoEntityRepository.GetCvrInfoEntityByCvrNumber(System.Int64)">
            <summary>
            gets a single <see href="CvrInfoEntity"/> from the database, using the specified <paramref name="cvrNumber"/>.
            </summary>
            <param name="cvrNumber">Cvr number of the entity to get from the database.</param>
            <returns>a <see cref="T:DLBR.DCF.KDB.BusinessEntities.CvrInfoEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICvrInfoEntityRepository.FindCvrInfoEntitiesByCvrNumbers(System.Collections.Generic.List{System.Int64})">
            <summary>
            Finds all CvrInfoEntity in the database that matches the Cvr numbers in the specified list <paramref name="cvrNumbers"/>
            </summary>
            <param name="cvrNumbers">A list of Cvr numbers to use when finding entities.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.CvrInfoEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICvrInfoEntityRepository.FindUpdatedCvrInfoEntitiesByDate(System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Finds all CvrInfoEntity in the database that are updated since the specified <paramref name="lastUpdateDate"/>
            </summary>
            <param name="lastUpdateDate">The date to use when finding entities.</param>
            <param name="dateTo">To date</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.CvrInfoEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICvrInfoEntityRepository.UpdateCvrInfoEntity(DLBR.DCF.KDB.BusinessEntities.CvrInfoEntity)">
            <summary>
            Updates the specified <paramref name="entity"/> in the database.
            Observe that this operation is only legal test environment
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.CvrInfoEntity"/> to update.</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IDMSLogRepository">
            <summary>
            Interface to repository responsible for handling DMSActivities
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IDMSLogRepository.LogDMSActivity(System.Int64)">
            <summary>
            Logs a DMS Activity for the given management unit id
            </summary>
            <param name="managementunitid"> The management unit id to log</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository">
            <summary>
            Interface to repository responsible for handling EarmarkOrderEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.FindEarmarkOrderEntitiesByCHRNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Finds all EarmarkOrderEntities in the database that matches the specified parameters.
            </summary>
            <param name="chrNumber"> CHR number to use when finding entities.</param>
            <param name="animalType">Type of animal to use when finding entities.</param>
            <param name="fromDate">Start date of period that EarmarkOrder lies within.</param>
            <param name="toDate">End date of period that EarmarkOrder lies within.</param>
            <param name="isSeriesOrder">Whether to return EarmarkOrder containing an EarmarkSeriesEntity</param>
            <param name="isReplacementOrder">Whether to return EarmarkOrder containing an EarmarkReplacementEntity</param>
            <param name="isArticleOrder">Whether to return EarmarkOrder containing an EarmarkArticleEntity</param>
            <param name="isSupplementOrder">Whether to return EarmarkOrder containing an EarmarkSupplementEntity</param>
            <param name="requestedCount">Max numbers of earmark entities to return</param>
            <returns>A collecion of <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOrderEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.FindEarmarkOrderReplacementByAnimalNumber(System.Int64,System.Int64,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all EarmarkOrderEntities in the database that contains a EarmarkReplacementEntity for specified <paramref name="animalNumber"/>.
            </summary>
            <param name="chrNumber">CHR number to usen when finding entities.</param>
            <param name="animalNumber">The animal number to find <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkReplacementEntity"/> for.</param>
            <param name="fromDate">Start date of period that EarmarkOrder lies within.</param>
            <param name="toDate">End date of period that EarmarkOrder lies within.</param>
            <param name="requestedCount">Max numbers of earmark replacement entities to return for specified <paramref name="animalNumber"/> </param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOrderEntity"/> that contains <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkReplacementEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.FindEarmarkSeriesCombinationEntities">
            <summary>
            Finds all EarmarkSeriesCombinationEntities in the database.
            </summary>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkSeriesCombinationEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.FindEarmarkSeriesCombinationEntities(DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkManufacturerTypeEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkColorTypeEntity,System.Boolean)">
            <summary>
            Finds all EarmarkSeriesCombinationEntities in the database with the following parameter filters
            </summary>
            <param name="animalType">The animal type</param>
            <param name="earmarkManufacturerType">The type of the manufactor</param>
            <param name="earmarkColorType">The color type of the earmark</param>
            <param name="includeBreedingEarmarks">Indicates wether or not you wish to include breeding earmarks</param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.GetEarmarkSeriesCombinationEntityById(System.Decimal)">
            <summary>
            Get an instance of <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkSeriesCombinationEntity"/> by id
            </summary>
            <param name="id">unique id of <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkSeriesCombinationEntity"/></param>
            <returns>An instance of <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkSeriesCombinationEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.FindEarmarkCombinationEntities">
            <summary>
            Finds all EarmarkCombinationEntities in the database.
            </summary>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkCombinationEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.FindEarmarkCombinationEntities(DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkManufacturerTypeEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkColorTypeEntity,System.Boolean)">
            <summary>
            Finds all EarmarkCombinationEntities in the database.
            </summary>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkCombinationEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.FindEarmarkOptionalTextEntities(DLBR.DCF.KDB.BusinessEntities.EarmarkOrderEntity)">
            <summary>
            Finds all EarmarkOptionalTextEntities in the database that matches the specified <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOrderEntity"/>.
            </summary>
            <param name="earmarkOrderEntity">The EarmarkOrder to find related EarmarkOptionalTextEntities for.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOptionalTextEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.RegisterEarmarkOrderEntity(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.Boolean},System.Nullable{System.Int64},DLBR.DCF.KDB.BusinessEntities.EarmarkSeriesRegistrationEntity,DLBR.DCF.KDB.BusinessEntities.EarmarkReplacementRegistrationEntity,DLBR.DCF.KDB.BusinessEntities.EarmarkArticleRegistrationEntity,DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.EarmarkSupplementRegistrationEntity,System.String[])">
            <summary>
            Register an EarmarkOrder in the database.
            </summary>
            <param name="chrNumber"> CHR number to use when registering the order.</param>
            <param name="animalType">The type of animal in the herd defined by the ShipToHerdNumber.</param>
            <param name="expressDelivery">Whether the order should be delivered by express, only relevant for replacement orders.</param>
            <param name="shipToHerdNumber">The number of the herd to ship the order to. Default the order is shipped to the address of the CHRNumber, if stated the address of the specified herd number is used.</param>
            <param name="earmarkSeriesRegistrationEntity">Specification for an order of an eamark serie.</param>
            <param name="earmarkReplacementRegistrationEntity">Specification for an order of an earmark replacement.</param>
            <param name="earmarkArticleRegistrationEntity">Specification for an order of an earmark article.</param>
            <param name="earmarkSupplementRegistrationEntity">Specification for an order of an earmark supplement.</param>
            <param name="warningFlags"></param>
            <returns>The newly registered <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOrderEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.RegisterEarmarkOrderEntities(System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.EarmarkOrderRegistrationEntity},System.String)">
            <summary>
             Registers a list of EarmarkOrders in the database.
            </summary>
            <param name="earmarkOrderRegistrationEntities"></param>
            <param name="dliUsername"></param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.UpdateEarmarkOrderEntity(DLBR.DCF.KDB.BusinessEntities.EarmarkOrderEntity)">
            <summary>
            Updates the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOrderEntity"/> to update.</param>
            <returns>The newly updated <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOrderEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.DeleteEarmarkOrderEntity(DLBR.DCF.KDB.BusinessEntities.EarmarkOrderEntity)">
            <summary>
            Deletes the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOrderEntity"/> to delete.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.FindEarmarkMaxQuantityEntitiesByCHRNumber(System.Int64)">
            <summary>
            Finds all <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkMaxQuantityEntity"/> in the database that matches the specified <paramref name="chrNumber"/>.
            </summary>
            <param name="chrNumber">CHR number to use when finding entities.</param>
            <returns>A collection of  <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkMaxQuantityEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.SetEarmarkCashOnDeliveryEntity(System.Int64,System.Boolean,System.Nullable{System.DateTime})">
            <summary>
            Sets the cash on delivery status for the specified <paramref name="chrNumber"/>.
            </summary>
            <param name="chrNumber">CHR number the status should be set for.</param>
            <param name="cashOnDelivery">True for enforcing cash on delivery, false for not enforcing cash on delivery.</param>
            <param name="date">The date from which the cash on delivery status should take effect. If not set, then DateTime.Today is used.</param>
            <returns><see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkCashOnDeliveryEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.GetEarmarkCashOnDeliveryEntity(System.Int64)">
            <summary>
            Get the latest cash on delivery status for specified <paramref name="chrNumber"/>.
            </summary>
            <param name="chrNumber">CHR number to use when getting the entity</param>
            <returns><see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkCashOnDeliveryEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.GetEarmarkImageEntity(System.Int64)">
            <summary>
             Gets the image with the specified id.
            </summary>
            <param name="imageId"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.GetEarmarkEmail(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
             Gets the email defined for the specified parameters.
            </summary>
            <param name="chrNumber"></param>
            <param name="cvrNumber"></param>
            <param name="cprNumber"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.FindEarmarkOrderCosts(System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.EarmarkOrderRegistrationEntity})">
            <summary>
            </summary>
            <param name="earmarkOrders"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.FindEarmarkOrderLineCosts(System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.EarmarkOrderRegistrationEntity})">
            <summary>
            </summary>
            <param name="earmarkOrders"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.FindEarmarkSeriesPrices(System.Int64,System.Int64)">
            <summary>
            </summary>
            <param name="earmarkSeriesId"></param>
            <param name="chrNumber"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.FindEarmarkArticlesPrices(System.Int64)">
            <summary>
            </summary>
            <param name="articleId"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.CheckEarmarkNumber(System.Int64,System.Nullable{System.Int64},DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity)">
            <summary>
            </summary>
            <param name="earmarkNumber"></param>
            <param name="chrNumber"></param>
            <param name="animalType"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository.CheckEarmarkColor(System.Int64)">
            <summary>
            </summary>
            <param name="earmarkNumber"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IEventInfoEntityRepository">
            <summary>
            Interface to repository responsible for handling EventInfoEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEventInfoEntityRepository.FindEventInfoEntity(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Finds all EventInfoEntity in the database that matches the specified parameters
            </summary>
            <param name="Herdid">Nullable Herdid no to get events from the database.</param>
            <param name="Cprno">Nullable Cpn no to get events from the database.</param>
            <param name="Cvrno">Nullable Cvr no to get events from the database.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.EventInfoEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEventInfoEntityRepository.MakeEventLog(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Starts a procedure on the Database to find event logs entities.
            </summary>
            <param name="Herdid">Nullable Herdid no to get events from the database.</param>
            <param name="Cprno">Nullable Cpn no to get events from the database.</param>
            <param name="Cvrno">Nullable Cvr no to get events from the database.</param>
            <returns>A result of the operation (true is valid, false if error)</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IEventTimeLogEntityRepository">
            <summary>
            Interface to repository responsible for handling EventTimeLogEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IEventTimeLogEntityRepository.FindEventTimeLogEntity(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Finds all EventTimeLogEntity in the database that matches the specified parameters
            </summary>
            <param name="Herdid">Nullable Herdid no to get eventtimelogs from the database.</param>
            <param name="Cprno">Nullable Cpn no to get eventtimelogs from the database.</param>
            <param name="Cvrno">Nullable Cvr no to get eventtimelogs from the database.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.EventTimeLogEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IGeneticsEntityRepository">
            <summary>
            Interface to repository responsible for handling GeneticsEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IGeneticsEntityRepository.FindGeneticsEntityById(System.Int64)">
            <summary>
            Finds all GeneticsEntity in the database that matches the specified <paramref name="entityId"/>
            </summary>
            <param name="entityId">Id to use when finding entities.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneticsEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IHerdInfoEntityRepository">
            <summary>
            Interface to repository responsible for handling HerdInfoEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IHerdInfoEntityRepository.FindHerdInfoEntity(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Finds all HerdInfoEntity in the database that matches the specified parameters/&gt;
            </summary>
            <param name="Cprno">Nullable Cpn no to get herds from the database.</param>
            <param name="Cvrno">Nullable Cvr no to get herds from the database.</param>
            <returns>
            A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdInfoEntity"/>
            </returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IHerdInfoEntityRepository.FindHerdInfoEntity_RYK(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Finds all HerdInfoEntity in the database that matches the specified parameters/&gt;
            </summary>
            <param name="Cprno">Nullable Cpn no to get herds from the database.</param>
            <param name="Cvrno">Nullable Cvr no to get herds from the database.</param>
            <returns>
            A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdInfoEntity"/>
            </returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IInseminatorTimeRecordEntityRepository">
            <summary>
            Interface to repository responsible for handling InseminatorTimeRecordEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorTimeRecordEntityRepository.FindInseminatorTimeRecordEntityByInseminatorNumber(System.DateTime,System.DateTime,System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int32})">
            <summary>
            Finds the inseminator time record entity by inseminator number.
            </summary>
            <returns>List of entities</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorTimeRecordEntityRepository.FindInseminatorTimeRecordEntityByParentId(System.Int64)">
            <summary>
            Gets the inseminator time record entity by parent id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns>Returns all corrections, based on the time record id.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorTimeRecordEntityRepository.InsertInseminatorTimeRecordEntity(System.Int64,System.Nullable{System.Int64},System.Int64,System.DateTime,System.Nullable{System.DateTime},System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.String,DLBR.DCF.KDB.BusinessEntities.Classifications.InseminatorTimeRecordPartEntity,System.Nullable{System.Int64},Oracle.DataAccess.Client.OracleTransaction)">
            <summary>
            Inserts the inseminator time record entity.
            </summary>
            <param name="inseminatorNumber">The inseminator number.</param>
            <param name="substituteInseminatorNumber">The substitute inseminator number.</param>
            <param name="herdNumber">The herd number.</param>
            <param name="startDateTime">The start date time.</param>
            <param name="stopDateTime">The stop date time.</param>
            <param name="minutes">The minutes.</param>
            <param name="animalTypeEntity">The animal type entity.</param>
            <param name="remarks">The remarks.</param>
            <param name="partNumber">The part number.</param>
            <param name="parentId">The parent id.</param>
            <param name="oracleTransaction">The oracle transaction.</param>
            <returns>
            Id of the newly created time record
            </returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorTimeRecordEntityRepository.InsertInseminatorTimeRecordEntity(DLBR.DCF.KDB.BusinessEntities.InseminatorTimeRecordEntity,Oracle.DataAccess.Client.OracleTransaction)">
            <summary>
            Inserts the inseminator time record entity.
            </summary>
            <param name="timeRecordEntity">The time record entity.</param>
            <param name="oracleTransaction">Optional oracle transaction.</param>
            <returns>
            Id of the newly created InseminatorTimeRecordEntity
            </returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorTimeRecordEntityRepository.GetInseminatorTimeRecordEntityById(System.Int64)">
            <summary>
            Gets the inseminator time record entity by id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorTimeRecordEntityRepository.BatchCommitInseminatorTimeRecord(System.Collections.Generic.List{DLBR.DCF.KDB.BusinessEntities.InseminatorTimeRecordEntity})">
            <summary>
            Commits multiple request within a single transaction.
            </summary>
            <param name="batch">The batch to be committed</param>
            <returns>
            Returns list of uniqeue inseminator time record Id's, which have been affected by this operation.
            </returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorTimeRecordEntityRepository.DeleteInseminatorTimeRecordEntity(DLBR.DCF.KDB.BusinessEntities.InseminatorTimeRecordEntity)">
            <summary>
            Deletes the inseminator time record entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>Long</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IInvoiceInfoEntityRepository">
            <summary>
            Interface to repository responsible for handling InvoiceInfoEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInvoiceInfoEntityRepository.FindInvoiceInfoEntity(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.String)">
            <summary>
            Finds all InvoiceInfoEntity in the database that matches the specified
            </summary>
            <param name="herdId">Nullable herdid to filter result of invoices from the database.</param>
            <param name="cprno">Nullable cprno to get invoices from the database.</param>
            <param name="cvrno">Nullable cvrno to get invoices from the database.</param>
            <param name="invoiceInfoType">Invoice info type</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.InvoiceInfoEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IInvoicePDFEntityRepository">
            <summary>
            Interface to repository responsible for handling InvoicePDFEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInvoicePDFEntityRepository.GetInvoicePDFEntityById(System.Int64)">
            <summary>
            Gets a single <see href="InvoicePDFEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.InvoicePDFEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IKeyFigureEntityRepository">
            <summary>
            Interface to repository responsible for handling KeyFigureEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IKeyFigureEntityRepository.FindKeyFigureEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.DateTime,System.DateTime,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.KeyFigureTypeEntity})">
            <summary>
            Finds all KeyFigureEntities in the database that matches the specified parameters.
            </summary>
            <param name="herdNumber">The herd number to get the entities for.</param>
            <param name="animalType">Type of animal in the specified <paramref name="herdNumber"/></param>
            <param name="fromDate"> Start date of period that key figures lies within. </param>
            <param name="toDate"> End date of periode that key figures lies within.</param>
            <param name="keyFigureTypes">Types of key figures to return.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.KeyFigureEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IManagementUnitEntityRepository">
            <summary>
            Interface to repository responsible for handling ManagementUnitEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IManagementUnitEntityRepository.GetManagementUnitEntityById(System.Int64)">
            <summary>
            Gets a single <see href="ManagementUnitEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.ManagementUnitEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IManagementUnitEntityRepository.UpdateIsInUse(DLBR.DCF.KDB.BusinessEntities.ManagementUnitEntity,System.Boolean)">
            <summary>
            Update ManagementUnit with IsInUse flag
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IMilkDeliveryEntityRepository">
            <summary>
            Interface to repository responsible for handling MilkDeliveryEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IMilkDeliveryEntityRepository.FindMilkDeliveryEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.DateTime,System.DateTime)">
            <summary>
            Finds all MilkDeliveringEntities in the database that matches the specified parameters.
            </summary>
            <param name="herdNumber"> Herd number to use when finding entities.</param>
            <param name="animalType">Type of animal to use when finding entities.</param>
            <param name="fromDate">Start date of period that MilkDeliveries lies within.</param>
            <param name="toDate">End date of period that MilkDeliveries lies within.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.MilkRecordingEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IMilkQuotaEntityRepository">
            <summary>
            Interface to repository responsible for handling MilkQuotaEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IMilkQuotaEntityRepository.FindMilkQuotaEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.DateTime,System.DateTime,System.Nullable{System.Int32})">
            <summary>
            Finds MilkQuotaEntities in the database that matches the specified <paramref name="herdNumber"/>
            </summary>
            <param name="herdNumber">The herd number to get the entity for.</param>
            <param name="animalType">Type of animal in the specified <paramref name="herdNumber"/></param>
            <param name="fromDate">Start date of period that MilkQuota information lies within.</param>
            <param name="toDate">End date of period that MilkQuota information lies within.</param>
            <param name="requestedCount">If set only specified number of MilkQuota information is returned in decending order.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.MilkQuotaEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.INaturalServiceEntityRepository">
            <summary>
            Interface to repository responsible for handling NaturalServiceEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.INaturalServiceEntityRepository.RegisterNaturalServiceEntity(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Register a Natural Service in the database.
            </summary>
            <param name="herdNumber">Herdnumber </param>
            <param name="animalType">The type of animal, eg. cattle</param>
            <param name="animalNumber">Animal number of animal retrieving the Natural Service</param>
            <param name="bullNumber">Bull number of bull delivering the service</param>
            <param name="bullHerdBookNumber">Herdbook number of bull delivering the Natural Service</param>
            <param name="startDate">Start date of the Natural Service</param>
            <param name="endDate">End date of the Natural Service</param>
            <returns>The id of the newly registered <see cref="T:DLBR.DCF.KDB.BusinessEntities.NaturalServiceEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.INaturalServiceEntityRepository.DeleteNaturalServiceEntity(DLBR.DCF.KDB.BusinessEntities.NaturalServiceEntity)">
            <summary>
            Deletes the specified <see cref="T:DLBR.DCF.KDB.BusinessEntities.NaturalServiceEntity"/> in the database
            </summary>
            <param name="entity">The entity to delete.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.INaturalServiceEntityRepository.UpdateNaturalServiceEntity(DLBR.DCF.KDB.BusinessEntities.NaturalServiceEntity)">
            <summary>
            Updates the specified <see cref="T:DLBR.DCF.KDB.BusinessEntities.NaturalServiceEntity"/> in the database.
            </summary>
            <param name="entity">The entity to update.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.INaturalServiceEntityRepository.GetNaturalServiceEntityById(System.Int64)">
            <summary>
            Gets a single <see href="NaturalServiceEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.NaturalServiceEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.INaturalServiceEntityRepository.FindNaturalServiceEntitiesByAnimalNumber(System.Int64,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Finds all NaturalService Entities in the database that matches the specified <paramref name="animalNumber"/>
            </summary>
            <param name="animalNumber">AnimalNumber of the entity to get from the database.</param>
            <param name="requestedCount">If set, only the specified number of NaturalService's are returned in decending order.</param>
            <param name="dateFrom"></param>
            <param name="dateTo"></param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.NaturalServiceEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.INaturalServiceEntityRepository.FindNaturalServiceEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all NaturalService Entities in the database that matches the specified <paramref name="herdNumber"/> ,
            </summary>
            <param name="herdNumber">HerdNumber of the entity to get from the database.</param>
            <param name="animalType">&gt;The type of animal, eg. cattle</param>
            <param name="fromDate">Start date of period that the Natural Services lies within.</param>
            <param name="toDate">End date of period that the Natural Services lies within.</param>
            <param name="requestedCount">If set, only the specified number of NaturalService's are returned in decending order.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.NaturalServiceEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.INaturalServiceEntityRepository.FindNaturalServiceEntitiesByHerdNumberV2(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all NaturalService Entities in the database that matches the specified <paramref name="herdNumber"/> ,
            RequestedCount is on herd level. The newest registration at the herd are returned
            </summary>
            <param name="herdNumber">HerdNumber of the entity to get from the database.</param>
            <param name="animalType">&gt;The type of animal, eg. cattle</param>
            <param name="fromDate">Start date of period that the Natural Services lies within.</param>
            <param name="toDate">End date of period that the Natural Services lies within.</param>
            <param name="requestedCount">If set, only the specified number of NaturalService's are returned in decending order.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.NaturalServiceEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IPostingEntityRepository">
            <summary>
            Interface to repository responsible for handling PostingEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IPostingEntityRepository.GetPostingEntityById(System.Int64)">
            <summary>
            Gets a single <see href="PostingEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.PostingEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IPostingEntityRepository.RegisterPostingEntity(System.Int64,System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.PostingTypeEntity,System.DateTime)">
            <summary>
            Register a Posting into the database.
            </summary>
            <param name="herdNumber">Herd Number Owner</param>
            <param name="herdNumberPosting">Herd Number Posting</param>
            <param name="animalType">Animal Type of HerdNumber and HerdNumberPosting</param>
            <param name="animalNumber">Animal Number</param>
            <param name="postingType">PostingType <see href="PostingTypeEntity"/></param>
            <param name="date">Last Changed Date</param>
            <returns>Id of Posting <see href="PostingEntity"/></returns>
            <returns>The id of the newly inserted <see cref="T:DLBR.DCF.KDB.BusinessEntities.PostingEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IPostingEntityRepository.UpdatePostingEntity(DLBR.DCF.KDB.BusinessEntities.PostingEntity)">
            <summary>
            Updates the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.PostingEntity"/> to insert.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IPostingEntityRepository.DeletePostingEntity(DLBR.DCF.KDB.BusinessEntities.PostingEntity)">
            <summary>
            Deletes the specified PostingEntity identified by <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">Id of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.PostingEntity"/> to delete from the database.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IPostingEntityRepository.FindPostingEntitiesByAnimalNumber(System.Int64,System.Nullable{System.Int32})">
            <summary>
            Finds all PostingEntity in the database that matches the specified <paramref name="animalNumber"/>
            </summary>
            <param name="animalNumber">AnimalNumber to use when finding entities.</param>
            <param name="requestedCount">If set only specified number of Postings is returned in decending order.</param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IPostingEntityRepository.FindPostingEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="herdNumber">Herd number to use when finding entities.</param>
            <param name="animalType">The type of animal to use when finding entities.</param>
            <param name="fromDate">Start date of period that Postings lies within.</param>
            <param name="toDate">End date of period that Postings lies within.</param>
            <param name="requestedCount">If set only specified number of Postings is returned in decending order.</param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IReportingServicesRepository">
            <summary>
            Interface for repository representing the Reporting Services.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IReportingServicesRepository.GetAuthorizedReports(System.Nullable{System.Int64},System.String)">
            <summary>
            Method for retreiving a collection of reports for which the specified user is authorized.
            </summary>
            <param name="managementUnit"></param>
            <param name="reportName"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IReportingServicesRepository.CheckAuthorizationForReport(System.Nullable{System.Int64},System.Int64)">
            <summary>
            This method check if the specified user is authorized for the given report within the specified context.
            </summary>
            <param name="managementUnit"></param>
            <param name="reportId"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IReportingServicesRepository.GetReportsWithoutAuthorization">
            <summary>
             This method returns a list of reports that may be accessed without any authorization.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.ISireEntityRepository">
            <summary>
            Interface to repository responsible for handling SemenInventoryEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ISireEntityRepository.GetSireEntityByHerdBookNumber(System.Int64)">
            <summary>
            Gets the sire entity in the database that matches the specified <paramref name="herdBookNumber"/>.
            </summary>
            <param name="herdBookNumber">HerdBookNumber of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.SireEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ISireEntityRepository.FindSireEntitiesByName(System.String,System.Nullable{System.Boolean})">
            <summary>
            Finds all sire entities in the database that matches the specified <paramref name="sireName"/>.
            </summary>
            <param name="sireName">The name, possible partial, of the sires to find.</param>
            <param name="stationBull">Flag, indicating if bull's wanted is station bulls or not. If null is provided, both station bulls and 'not station bulls' is returned</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.SireEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IHerdAddressEntityRepository">
            <summary>
            Interface to repository responsible for handling AddressEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IHerdAddressEntityRepository.FindHerdOwnerAddressEntities">
            <summary>
            Gets a collection of <see href="AddressEntity" /> corresponding to the complete set of existing herdowner addresses.
            </summary>
            <returns>A collection of <see href="AddressEntity" />.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IHerdAddressEntityRepository.GetHerdOwnerAddressEntityByHerdId(System.Int64)">
            <summary>
            Gets a <see href="AddressEntity" /> entity with the owner address of the herd id
            </summary>
            <returns>The <see href="AddressEntity" /> entity with the owner address of the herd id.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IHerdAddressEntityRepository.FindHerdCHRAddressEntities">
            <summary>
            Gets a collection of <see href="AddressEntity" /> corresponding to the complete set of existing herdowner addresses.
            </summary>
            <returns>A collection of <see href="AddressEntity" />.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IHerdAddressEntityRepository.GetHerdChrAddressEntityByHerdId(System.Int64)">
            <summary>
            Gets a <see href="AddressEntity" /> entity with the chr address of the herd id
            </summary>
            <returns>The <see href="AddressEntity" /> entity with the CHR address of the herd id.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IAdvisorEntityRepository">
            <summary>
            Interface to repository responsible for handling AdvisorEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAdvisorEntityRepository.GetAdvisorEntityById(System.Int64)">
            <summary>
            Gets a single <see href="AdvisorEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.AdvisorEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAdvisorEntityRepository.FindAdvisorEntitiesByAdvisorNumber(System.Int64,System.Nullable{System.Int32},DLBR.DCF.KDB.BusinessEntities.Classifications.AdvisorTypeEntity,System.Boolean)">
            <summary>
            Finds all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AdvisorTypeEntity"/> in the database that matches the specified arguments.
            </summary>
            <param name="advisorNumber"> Advisor number of the entity to get from the database.</param>
            <param name="advisorSerialNumber">If set, only Advisors with specified value is returned.</param>
            <param name="advisorType">If set, only Advisors of the specified type is returned. If not set, all types of advisors is returned.</param>
            <param name="isActive">Whether to get active or non active Advisors.</param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAdvisorEntityRepository.FindAdvisorEntities(System.Nullable{System.Int64},DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.AdvisorTypeEntity})">
            <summary>
            Finds all AdvisorEntity in the database that matches the specified arguments
            </summary>
            <param name="herdNumber">If set, only advisors that services the herd is returned. If not set, all advisors is returned.</param>
            <param name="animalType">If herdNumber is set, animalType should be set in order to make the herdNumber unique. AnimalType is only used when herdNumber is specified.</param>
            <param name="advisorTypes">If set, only advisors of the specified types is returned. If not set, all types of advisors is returned.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AdvisorEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAdvisorEntityRepository.FindUserSpecificAdvisorEntities(System.String,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.AdvisorTypeEntity})">
            <summary>
            Finds all AdvisorEntities in the database that the specified user are authorized to use.
            </summary>
            <param name="username">The username to use for reading the entites.</param>
            <param name="advisorTypes">If set, only advisors of the specified types is returned. If not set, all types of advisors is returned.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AdvisorEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IAnimalEntityRepository">
            <summary>
            Interface to repository responsible for handling AnimalEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalEntityRepository.GetAnimalByNumber(System.Int64)">
            <summary>
            Gets a single <see href="AnimalEntity"/> from the database, using the specified <paramref name="animalNumber"/>.
            </summary>
            <param name="animalNumber">AnimalNumber of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalEntityRepository.FindAnimalsByHerdNumber(System.Int64,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Finds all AnimalEntity in the database that matches the specified <paramref name="herdNumber"/>
            </summary>
            <param name="herdNumber">HerdNumber to use when finding entities.</param>
            <param name="animalTypeCode">AnimalType Code of the entity to get from the database.</param>
            <param name="fromDate">Start date of the period within animals have left the herd.</param>
            <param name="toDate">End date of the period within animals have left the herd.</param> 
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalEntityRepository.FindAnimalsByHerdNumberAndPeriod(System.Int64,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Finds all AnimalEntity in the database that matches the specified <paramref name="herdNumber"/>
            This method also retrieves fromDate and toDate information.
            </summary>
            <param name="herdNumber">HerdNumber to use when finding entities.</param>
            <param name="animalTypeCode">AnimalType Code of the entity to get from the database.</param>
            <param name="fromDate">Start date of the period within animals have left the herd.</param>
            <param name="toDate">End date of the period within animals have left the herd.</param> 
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalEntityRepository.FindAnimalIdInfoByAnimalNumber(System.Int64)">
            <summary>
            Reads the mapping between the animalnumber and the various id's. 
            The info is read for all animals in the current herd of the specified animal.
            </summary>
            <param name="animalNumber"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalEntityRepository.FindAnimalNumbers(System.Int64,System.Int32,System.Int32)">
            <summary>
            Finds animal numbers within a herd matching the specified animal serial number.
            </summary>
            <param name="herdNumber">Herdnumber to use when finding animalnumbers.</param>
            <param name="animalTypeCode">The type of animal to find.</param>
            <param name="individualNumber">The individual number to use for finding animal numbers.</param>
            <returns>A list of animal numbers matching the specified criteria.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AnimalIdInfo">
            <summary>
            Composite class containing mapping between the internal id of an animal and it's official animalnumber and -type.
            </summary>
        </member>
        <member name="F:DLBR.DCF.KDB.DataAccess.AnimalIdInfo.AnimalId">
            <summary>
            AnimalId.
            </summary>
        </member>
        <member name="F:DLBR.DCF.KDB.DataAccess.AnimalIdInfo.AnimalNumber">
            <summary>
            AnimalNumber.
            </summary>
        </member>
        <member name="F:DLBR.DCF.KDB.DataAccess.AnimalIdInfo.HerdId">
            <summary>
            HerdId.
            </summary>
        </member>
        <member name="F:DLBR.DCF.KDB.DataAccess.AnimalIdInfo.AnimalType">
            <summary>
            AnimalType.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IAnimalHealthEntityRepository">
            <summary>
            Interface to repository responsible for handling AnimalHealthEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalHealthEntityRepository.GetAnimalHealthEntityById(System.Int64)">
            <summary>
            Gets a single <see href="AnimalHealthEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalHealthEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalHealthEntityRepository.FindAnimalHealthEntitiesByAnimalNumber(System.Int64,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseTypeEntity},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all AnimalHealthEntity in the database that matches the specified parameters.
            </summary>
            <param name="animalNumber"> AnimalNumber to use when finding entities.</param>
            <param name="diseaseTypes">A collection of DiseaseTypes. If set only AnimalHealths with specified values is returned. If null, all AnimalHealths matching the other criteria´s are returned.</param>
            <param name="fromDate">Start date of period that AnimalHealths lies within.</param>
            <param name="toDate">End date of period that AnimalHealths lies within.</param>
            <param name="requestedCount">If set only specified number of AnimalHealths is returned in decending order.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalHealthEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalHealthEntityRepository.FindAnimalHealthEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.AdvisorEntity,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseTypeEntity},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
             <summary>
             Finds all AnimalHealthEntity in the database that matches the specified parameters.
             </summary>
            <param name="herdNumber">HerdNumber to use when finding entities.</param>
             <param name="animalType">Type of animal to use when finding entities.</param>
             <param name="advisor">The advisor responsible for the AnimalHealth recording. If set only AnimalHealths with specified value is returned. If null, all AnimalHealths matching the other criteria´s are returned.</param>
             <param name="diseaseTypes">A collection of DiseaseTypes. If set only AnimalHealths with specified values is returned. If null, all AnimalHealths matching the other criteria´s are returned.</param>
             <param name="fromDate">Start date of period that AnimalHealths lies within.</param>
             <param name="toDate">End date of period that AnimalHealths lies within.</param>
             <param name="requestedCount">If set only specified number of AnimalHealths is returned in decending order.</param>
             <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalHealthEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalHealthEntityRepository.RegisterAnimalHealthEntity(DLBR.DCF.KDB.BusinessEntities.AnimalHealthRegistrationEntity)">
            <summary>
            Register an AnimalHealth in the database.
            </summary>
            <param name="registrationEntity">The AnimalHealth to register</param>
            <returns>The id of the newly registered <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalHealthEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalHealthEntityRepository.RegisterAnimalHealthEntities(System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.AnimalHealthRegistrationEntity})">
            <summary>
            Register a collection of AnimalHealth in the database. All registrations is registered witin the same transaction.
            </summary>
            <param name="registrationEntities">The AnimalHealths to register</param>
            <returns>The ids of the newly registered <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalHealthEntity"/> collection.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalHealthEntityRepository.UpdateAnimalHealthEntity(DLBR.DCF.KDB.BusinessEntities.AnimalHealthEntity)">
            <summary>
            Updates the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalHealthEntity"/> to update.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalHealthEntityRepository.DeleteAnimalHealthEntity(DLBR.DCF.KDB.BusinessEntities.AnimalHealthEntity)">
            <summary>
            Deletes the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The entity to delete from the database.</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IAnimalTransferEntityRepository">
            <summary>
            Interface to repository responsible for handling AnimalTransferEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalTransferEntityRepository.GetAnimalTransferEntityById(System.Int64)">
            <summary>
            Gets a single <see href="AnimalTransferEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalTransferEntityRepository.FindAnimalTransferByAnimalNumber(System.Int64,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTransferTypeEntity},System.Nullable{System.Int32})">
            <summary>
            Finds all AnimalTransferEntity in the database that matches the specified <paramref name="animalNumber"/>
            </summary>
            <param name="animalNumber"> animal number to use when finding entities.</param>
            <param name="animalTransferTypes">If set, only animalTransfers of the specified types is returned. If not set, all types of animalTransfers is returned.</param>
            <param name="requestedCount"> If set, only number of animalTransfers requested is returnes in decending order. </param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalTransferEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalTransferEntityRepository.FindAnimalTransferByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTransferTypeEntity},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all AnimalTransferEntity in the database that matches the specified <paramref name="herdNumber"/>
            </summary>
            <param name="herdNumber"> herd number to use when finding entities.</param>
            <param name="animalType"> type of animal to usen when finding entities.</param>
            <param name="animalTransferTypes">If set, only animalTransfers of the specified types is returned. If not set, all types of animalTransfers is returned.</param>
            <param name="fromDate"> Start date of period that animalTransfers lies within. </param>
            <param name="toDate"> End date of periode that animalTransfers lies within.</param>
            <param name="requestedCount"> If set, only number of animalTransfers requested is returnes in decending order. </param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalTransferEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalTransferEntityRepository.FindHerdAnimalTransferByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTransferTypeEntity},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Finds all AnimalTransferEntity in the database that matches the specified <paramref name="herdNumberToFrom"/>
            </summary>
            <param name="herdNumberToFrom"> herd number to/from to use when finding entities.</param>
            <param name="animalType"> type of animal to usen when finding entities.</param>
            <param name="animalTransferTypes">If set, only animalTransfers of the specified types is returned. If not set, all types of animalTransfers is returned.</param>
            <param name="fromDate"> Start date of period that animalTransfers lies within. </param>
            <param name="toDate"> End date of periode that animalTransfers lies within.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalTransferEntity"/> to/from</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalTransferEntityRepository.RegisterAnimalTransfer(System.Int64,System.Int64,System.Int64,System.Nullable{System.Int64},DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTransferTypeEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.NationalityEntity,System.DateTime,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.TransferCauseEntity},DLBR.DCF.KDB.BusinessEntities.Classifications.WeighingTypeEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.WeighingMethodEntity,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32},System.String,DLBR.DCF.KDB.BusinessEntities.Classifications.NationalityEntity,System.Nullable{System.Int32},System.String[])">
            <summary>
            Register a new <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalTransferEntity"/> in the database.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalTransferEntityRepository.UpdateAnimalTransfer(DLBR.DCF.KDB.BusinessEntities.AnimalTransferEntity,System.String[])">
            <summary>
            Updates the specified <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalTransferEntity"/> in the database.
            </summary>
            <param name="entity">The entity to update.</param>
            <param name="warningFlags">List of WarningFlags to force</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalTransferEntityRepository.DeleteAnimalTransfer(DLBR.DCF.KDB.BusinessEntities.AnimalTransferEntity,System.String[])">
            <summary>
            Deletes the specified <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalTransferEntity"/> in the database
            </summary>
            <param name="entity">The entity to delete.</param>
            <param name="warningFlags">List of WarningFlags to force</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IAnimalWeightEntityRepository">
            <summary>
            Interface to repository responsible for handling AnimalWeightEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalWeightEntityRepository.GetAnimalWeightEntityById(System.Int64)">
            <summary>
            Gets a single <see href="AnimalWeightEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalWeightEntityRepository.FindAnimalWeightEntitiesByAnimalNumber(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Finds all AnimalWeightEntities in the database that matches the specified <paramref name="animalNumber"/>
            </summary>
            <param name="animalNumber"> animal number to use when finding entities.</param>
            <param name="weighingTypeCode">If set only animal weights with specified value is returned. If null, all animal weights are returned for the specified <paramref name="animalNumber"/></param>
            <param name="requestedCount">If set only specified number of animal weights is returned in decending order.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalWeightEntityRepository.FindAnimalWeightEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all AnimalWeightEntities in the database that matches the specified <paramref name="herdNumber"/>
            </summary>
            <param name="herdNumber"> herd number to use when finding entities.</param>
            <param name="animalType">Type of animal to use when finding entities.</param>
            <param name="weighingTypeCode">If set only animal weights with specified value is returned. </param>
            <param name="fromDate">Start date of period that animal weights lies within.</param>
            <param name="toDate">End date of period that animal weights lies within.</param> 
            <param name="requestedCount">If set only specified number of animal weights is returned in decending order.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalWeightEntityRepository.GetAnimalWeightExpectedEntityById(System.Int64)">
            <summary>
            Gets a single <see href="AnimalWeightEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalWeightEntityRepository.FindAnimalWeightExpectedEntitiesByAnimalNumber(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Finds all AnimalWeightEntities in the database that matches the specified <paramref name="animalNumber"/>
            Includes extra 4 fields Forventet Vægt, Marginal tilvækst g/dag, Gns. Tilvækst g/dag Fødsel, Gns. Tilvækst g/dag Indgang
            </summary>
            <param name="animalNumber"> animal number to use when finding entities.</param>
            <param name="weighingTypeCode">If set only animal weights with specified value is returned. If null, all animal weights are returned for the specified <paramref name="animalNumber"/></param>
            <param name="requestedCount">If set only specified number of animal weights is returned in decending order.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalWeightEntityRepository.FindAnimalWeightExpectedEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all AnimalWeightEntities in the database that matches the specified <paramref name="herdNumber"/>
            Includes extra 4 fields Forventet Vægt, Marginal tilvækst g/dag, Gns. Tilvækst g/dag Fødsel, Gns. Tilvækst g/dag Indgang
            </summary>
            <param name="herdNumber"> herd number to use when finding entities.</param>
            <param name="animalType">Type of animal to use when finding entities.</param>
            <param name="weighingTypeCode">If set only animal weights with specified value is returned. </param>
            <param name="fromDate">Start date of period that animal weights lies within.</param>
            <param name="toDate">End date of period that animal weights lies within.</param> 
            <param name="requestedCount">If set only specified number of animal weights is returned in decending order.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalWeightEntityRepository.RegisterAnimalWeightEntity(System.Int64,System.Int64,System.DateTime,DLBR.DCF.KDB.BusinessEntities.Classifications.WeighingMethodEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.WeighingTypeEntity,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})">
             <summary>
             Inserts the specified <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/> into the database.
             </summary>
            <param name="animalNumber">Animal number of animal weighted.</param>
             <param name="herdId">Id of the herd where the animal has been weighted.</param>
             <param name="date">Date of the weighing.</param>
             <param name="weighingMethod">Method of weighing specified by <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.WeighingMethodEntity"/></param>
             <param name="weighingType">Type of weighing specified by <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.WeighingTypeEntity"/></param>
             <param name="weight">The actual weight of the animal e.g. kilograms.</param>
             <param name="price">The price of the aniaml at the time of the weighing.</param>
             <param name="chestGirth">The circomference of the chest, e.g. centimeters. </param>
             <returns>The id of the newly inserted <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalWeightEntityRepository.UpdateAnimalWeightEntity(DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity)">
            <summary>
            Updates the specified <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/> to update.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IAnimalWeightEntityRepository.DeleteAnimalWeightEntity(DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity)">
            <summary>
            Deletes the specified <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/> to delete from the database.</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.ICalvingEntityRepository">
            <summary>
            Interface to repository responsible for handling CalvingEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICalvingEntityRepository.GetCalvingEntityByCalfAnimalNumber(System.Int64)">
            <summary>
            Gets a single <see href="CalvingEntity"/> from the database, using the specified <paramref name="calfAnimalNumber"/>.
            </summary>
            <param name="calfAnimalNumber"> calf animal number of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.CalvingEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICalvingEntityRepository.GetCalvingEntityById(System.Int64)">
            <summary>
            Gets a single <see href="CalvingEntity"/> from the database, using the specified <paramref name="calvingId"/>.
            </summary>
            <param name="calvingId">Id of the entity to get from the data</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.CalvingEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICalvingEntityRepository.GetCalvingEntityByCalfAnimalId(System.Int64,System.Int64)">
            <summary>
            Gets a single <see href="CalvingEntity"/> from the database, using the specified <paramref name="calfAnimalId"/> and <paramref name="calvingId"/>.
            </summary>
            <param name="calfAnimalId">Id of the born animal.</param>
            <param name="calvingId">Id of the entity to get from the data</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.CalvingEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICalvingEntityRepository.FindCalvingEntitiesByHerdNumber(System.Int64,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Gets a collection <see href="CalvingEntity"/> from the database, using the specified <paramref name="herdNumber"/>.
            </summary>
            <param name="herdNumber">herd number of the entity to get from the database.</param>
            <param name="animalTypeCode">AnimalType code of the entity to get from the database.</param>
            <param name="fromDate">Start date of period that Calvings lies within.</param>
            <param name="toDate">End date of period that Calvings lies within.</param>
            <param name="requestedCount">Number of calvings (by the individual mother cow) to return. If null, all calvings are returned for the specified <paramref name="herdNumber"/></param>
            <param name="latestCalvingsInHerd">Setting this to true means that the method will return no more than the specified number of calvings.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.CalvingEntity"/> business entities.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICalvingEntityRepository.FindCalvingEntitiesByCowAnimalNumber(System.Int64,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Gets a collection <see href="CalvingEntity"/> from the database, using the specified <paramref name="cowAnimalNumber"/>.
            </summary>
            <param name="cowAnimalNumber"> cow animal number of the entity to get from the database.</param>
            <param name="fromDate">Start date of period that Calvings lies within.</param>
            <param name="toDate">End date of period that Calvings lies within.</param>
            <param name="requestedCount">Number of calvings to return. If null, all calvings are returned for the specified <paramref name="cowAnimalNumber"/></param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.CalvingEntity"/> business entities.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICalvingEntityRepository.FindCalvingEntitiesByCalvingNumber(System.Int64)">
            <summary>
            Gets a collection <see href="CalvingEntity"/> from the database, using the specified <paramref name="calvingNumber"/>.
            </summary>
            <param name="calvingNumber"> calving number of the entity to get from the database.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.CalvingEntity"/> business entities.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICalvingEntityRepository.RegisterCalving(System.Int64,System.Int64,System.Int64,System.DateTime,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalSizeEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.CalvingProgressEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.GenderEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.CalvingOutcomeEntity,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int64},System.String,System.String,System.Int64@)">
            <summary>
            Register a calving in the database.
            </summary>
            <param name="herdId">The technical Id of the herd.</param>
            <param name="herdNumber">Number of the herd</param>
            <param name="cowAnimalNumber">Animal number of the mother to the calf.</param>
            <param name="calvingDate">Date of calving.</param>
            <param name="animalType">Type of animal.</param>
            <param name="size">Size of calf.</param>
            <param name="progress">Progress/Course of calving</param>
            <param name="gender">Gender of the calf.</param>
            <param name="outCome">Outcome/condition of the calf.</param>
            <param name="price">Price of the calf.</param>
            <param name="weight">Weight of the calf.</param>
            <param name="calfHerdNumber">Identification number of the calf (last 5 digits)</param>
            <param name="name">Name of calf.</param>
            <param name="shortName">Shortname of the calf.</param>
            <param name="calfAnimalId">Returns the id of born animal. To be used in combination with the calving entity id when reading the newly created entity.</param>
            <returns>The id of the newly registered calving.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICalvingEntityRepository.UpdateCalvingEntity(DLBR.DCF.KDB.BusinessEntities.CalvingEntity,System.String[])">
            <summary>
            Updates the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.CalvingEntity"/> to insert.</param>
            <param name="warningFlags"></param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICalvingEntityRepository.DeleteCalvingEntity(DLBR.DCF.KDB.BusinessEntities.CalvingEntity)">
            <summary>
            Deletes the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The entity to delete from the database.</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IClinicalRecordingEntityRepository">
            <summary>
            Interface to repository responsible for handling ClinicalRecordingEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClinicalRecordingEntityRepository.GetClinicalRecordingEntityById(System.Int64)">
            <summary>
            Gets a single <see href="ClinicalRecordingEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.ClinicalRecordingEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClinicalRecordingEntityRepository.FindClinicalRecordingEntitiesByAnimalNumber(System.Int64,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all ClinicalRecordingEntities in the database that matches the specified parameters.
            </summary>
            <param name="animalNumber"> AnimalNumber to use when finding entities.</param>
            <param name="clinicalParameterCode"> The code of the ClinicalParameter. If set only ClinicalRecordings with specified value is returned. If null, all ClinicalRecordings matching the other criteria´s are returned.</param>
            <param name="fromDate">Start date of period that ClinicalRecordings lies within.</param>
            <param name="toDate">End date of period that ClinicalRecordings lies within.</param>
            <param name="requestedCount">If set only specified number of ClinicalRecordings is returned in decending order.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.ClinicalRecordingEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClinicalRecordingEntityRepository.FindClinicalRecordingEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.AdvisorEntity,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
             <summary>
             Finds all ClinicalRecordingEntities in the database that matches the specified parameters.
             </summary>
            <param name="herdNumber">HerdNumber to use when finding entities.</param>
             <param name="animalType">Type of animal to use when finding entities.</param>
             <param name="advisor">The advisor responsible for the ClinicalRecording. If set only ClinicalRecordings with specified value is returned. If null, all ClinicalRecordings matching the other criteria´s are returned.</param>
             <param name="clinicalParameterCode"> The code of the ClinicalParameter. If set only ClinicalRecordings with specified value is returned. If null, all ClinicalRecordings matching the other criteria´s are returned.</param>
             <param name="fromDate">Start date of period that ClinicalRecordings lies within.</param>
             <param name="toDate">End date of period that ClinicalRecordings lies within.</param>
             <param name="requestedCount">If set only specified number of ClinicalRecordings is returned in decending order.</param>
             <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.ClinicalRecordingEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClinicalRecordingEntityRepository.RegisterClinicalRecordingEntity(System.Int64,System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.AdvisorEntity,System.DateTime,System.Int32,System.Nullable{System.Single},System.String)">
            <summary>
            Register a ClinicalRecording in the database.
            </summary>
            <param name="animalNumber">The number of the animal the ClinicalRecording relates to.</param>
            <param name="herdNumber">The number of the herd to which the animal belongs to.</param>
            <param name="animalType">Type of animal to use when registering the entity.</param>
            <param name="advisor">The advisor responsible for the ClinicalRecording.</param>
            <param name="date">The date of ClinicalRecording.</param>
            <param name="clinicalParameterCode">The code of the ClinicalParameter.</param>
            <param name="numericValue">The numeric value of the ClinicalRecording, to set if the type of ClinicalParameter is numeric.</param>
            <param name="stringValue">The string value of the ClinicalRecording, to set if the type of ClinicalParameter is a string.</param>
            <returns>The id of the newly registered <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ClinicalParameterEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClinicalRecordingEntityRepository.UpdateClinicalRecordingEntity(System.Int64,System.Int64,System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.AdvisorEntity,System.DateTime,System.Int32,System.Nullable{System.Single},System.String,System.DateTime)">
            <summary>
            Updates a ClinicalRecording in the database.
            </summary>
            <param name="clinicalRecordingId">Technical id of the clinicalRecordingEntity to update.</param>
            <param name="animalNumber">The number of the animal the ClinicalRecording relates to.</param>
            <param name="herdNumber">The number of the herd to which the animal belongs to.</param>
            <param name="animalType">Type of animal to use when updating the entity.</param>
            <param name="advisor">The advisor responsible for the ClinicalRecording.</param>
            <param name="date">The date of ClinicalRecording.</param>
            <param name="clinicalParameterCode">The code of the ClinicalParameter.</param>
            <param name="numericValue">The numeric value of the ClinicalRecording, to set if the type of ClinicalParameter is numeric.</param>
            <param name="stringValue">The string value of the ClinicalRecording, to set if the type of ClinicalParameter is a string.</param>
            <param name="lastUpdate">Time stamp of the entity.</param>
            <returns>The newly updated <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ClinicalParameterEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClinicalRecordingEntityRepository.DeleteClinicalRecordingEntity(System.Int64,System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.AdvisorEntity,System.DateTime,System.Int32,System.DateTime)">
            <summary>
            Deletes a ClinicalRecording in the database.
            </summary>
            <param name="clinicalRecordingId">Technical id of the clinicalRecordingEntity to delete.</param>
            <param name="herdNumber">The number of the herd to which the animal belongs to.</param>
            <param name="animalType">Type of animal to use when deleting the entity.</param>
            <param name="advisor">The advisor responsible for the ClinicalRecording.</param>
            <param name="date">The date of ClinicalRecording.</param>
            <param name="clinicalParameterCode">The code of the ClinicalParameter.</param>
            <param name="lastUpdate">Time stamp of the entity.</param>
            <returns>The newly updated <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ClinicalParameterEntity"/>.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.ICullingEntityRepository">
            <summary>
            Interface to repository responsible for handling CullingEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICullingEntityRepository.RegisterCulling(System.Int64,System.Int64,System.DateTime,System.Int16,System.Nullable{System.Int16},System.Nullable{System.Int16})">
            <summary>
            Register a Culling in the database.
            </summary>
            <param name="herdId"></param>
            <param name="animalNumber"></param>
            <param name="date"></param>
            <param name="cullingCode"></param>
            <param name="causeCode1"></param>
            <param name="causeCode2"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICullingEntityRepository.UpdateCulling(System.Int64,System.Int64,System.Int64,System.DateTime,System.Int16,System.Nullable{System.Int16},System.Nullable{System.Int16},System.DateTime)">
            <summary>
            Updates a Culling in the database.
            </summary>
            <param name="cullingId"></param>
            <param name="herdId"></param>
            <param name="animalNumber"></param>
            <param name="date"></param>
            <param name="cullingCode"></param>
            <param name="causeCode1"></param>
            <param name="causeCode2"></param>
            <param name="lastUpdate"></param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICullingEntityRepository.DeleteCulling(System.Int64,System.Int64,System.Int64,System.DateTime,System.Int16,System.Nullable{System.Int16},System.Nullable{System.Int16},System.DateTime)">
            <summary>
            Deletes a Culling in the database.
            </summary>
            <param name="cullingId"></param>
            <param name="herdId"></param>
            <param name="animalNumber"></param>
            <param name="date"></param>
            <param name="cullingCode"></param>
            <param name="causeCode1"></param>
            <param name="causeCode2"></param>
            <param name="lastUpdate"></param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICullingEntityRepository.GetCullingEntityById(System.Int64)">
            <summary>
            Gets a Culling by id
            </summary>
            <param name="cullingId"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICullingEntityRepository.FindCullingEntitiesByAnimalNumber(System.Int64,System.Nullable{System.Int16},System.Nullable{System.Int32})">
            <summary>
            Finds all Culling Entities by animal number in the database that matches the specified parameters
            </summary>
            <param name="animalNumber"></param>
            <param name="cullingCode"></param>
            <param name="requestedCount"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ICullingEntityRepository.FindCullingEntitiesByHerdNumber(System.Int64,System.Int16,System.Nullable{System.Int16},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all Culling Entities by herd number in the database that matches the specified parameters
            </summary>
            <param name="herdNumber"></param>
            <param name="animalTypeCode"></param>
            <param name="cullingCode"></param>
            <param name="fromDate"></param>
            <param name="toDate"></param>
            <param name="requestedCount"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IDryPeriodEntityRepository">
            <summary>
            Interface to repository responsible for handling DryPeriodEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IDryPeriodEntityRepository.GetDryPeriodEntityById(System.Int64)">
            <summary>
            Get a DryPeriod from the database
            </summary>
            <param name="dryPeriodId"></param>
            <returns>A DryPeriod entity</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IDryPeriodEntityRepository.FindDryPeriodEntitiesByAnimalNumber(System.Int64,System.Nullable{System.Int32})">
            <summary>
            Finds all DryPeriod Entities in the database that matches the specified <paramref name="animalNumber"/>
            </summary>
            <param name="animalNumber">AnimalNumber of the entity to get from the database.</param>
            <param name="requestedCount">If set only specified number of DryPeriods are returned in decending order.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.DryPeriodEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IDryPeriodEntityRepository.FindDryPeriodEntitiesByHerdNumber(System.Int64,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all DryPeriod Entities in the database that matches the specified <paramref name="herdNumber"/> ,
            <paramref name="animalTypeCode"/>
            </summary>
            <param name="herdNumber">HerdNumber of the entity to get from the database.</param>
            <param name="animalTypeCode">AnimalType Code of the entity to get from the database.</param>
            <param name="fromDate">Start date of period that DryPeriods lies within.</param>
            <param name="toDate">End date of period that DryPeriods lies within.</param>
            <param name="requestedCount">If set only specified number of DryPeriods is returned in decending order.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.DryPeriodEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IDryPeriodEntityRepository.FindLatestDryPeriodEntitiesByHerdNumber(System.Int64,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Finds latest DryPeriod Entity in the database that matches the specified <paramref name="herdNumber"/> ,
            <paramref name="animalTypeCode"/>
            </summary>
            <param name="herdNumber">HerdNumber of the entity to get from the database.</param>
            <param name="animalTypeCode">AnimalType Code of the entity to get from the database.</param>
            <param name="fromDate">Start date of period that DryPeriods lies within.</param>
            <param name="toDate">End date of period that DryPeriods lies within.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.DryPeriodEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IDryPeriodEntityRepository.RegisterDryPeriod(System.Int64,System.Int64,System.DateTime)">
            <summary>
            Register a Dry Period in the database.
            </summary>
            <param name="herdId"></param>
            <param name="animalId"></param>
            <param name="date"></param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IDryPeriodEntityRepository.UpdateDryPeriod(DLBR.DCF.KDB.BusinessEntities.DryPeriodEntity)">
            <summary>
            Updates the specified Dry Period entity in the database.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IDryPeriodEntityRepository.DeleteDryPeriod(DLBR.DCF.KDB.BusinessEntities.DryPeriodEntity)">
            <summary>
            Delete the specified Dry Period entity in the database
            </summary>
            <param name="entity"></param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IHerdEntityRepository">
            <summary>
            Interface to repository responsible for handling HerdEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IHerdEntityRepository.GetHerdEntityByHerdNumber(System.Int64,System.Int32)">
            <summary>
            Gets a single <see href="HerdEntity"/> from the database, using the specified <paramref name="herdNumber"/> and <paramref name="animalType"/>.
            </summary>
            <param name="herdNumber"> Herd number to use when getting the entity.</param>
            <param name="animalType"> Code of animal type to use when getting the entity.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IHerdEntityRepository.FindHerdEntitiesByHerdNumber(System.Int64)">
            <summary>
            Finds all <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdEntity"/> in the database that matches the specified <paramref name="herdNumber"/>
            </summary>
            <param name="herdNumber">Herd number to use when finding entities.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IHerdEntityRepository.FindHerdEntitiesByDistrictNumber(System.Int64)">
            <summary>
            Finds all <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdEntity"/> in the database that is included in the specified <paramref name="districtNumber"/>
            </summary>
            <param name="districtNumber">District number to use when finding entities.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IHerdEntityRepository.FindUserHerdEntities(DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Boolean)">
            <summary>
            Finds all <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdEntity"/> in the database that, the user is authorized to see.
            </summary>
            <param name="animalType">If an <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity"/> is specified, only herds of that type is returned. Otherwise all herds are returned.</param>
            <param name="includeNonActiveHerds"><c>true</c> to include non active herds.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IHerdEntityRepository.FindHerdEntitiesByCHRNumber(System.Int64,System.Nullable{System.Boolean})">
            <summary>
            Finds all <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdEntity"/> in the database that matches the specified <paramref name="chrNumber"/> and 
            </summary>
            <param name="chrNumber"> CHR number to use when finding entities.</param>
            <param name="activeHerdFlag">Flag indicating whether herd is active or not.
            Null = active and not active herds, false = not active herds, true = active herds.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IHerdEntityRepository.GetHerdId(System.Int64,System.Int32)">
            <summary>
            Gets HerdId from the database, using the specified <paramref name="herdNumber"/> and <paramref name="animalTypeCode"/>
            </summary>
            <param name="herdNumber">Herd number.</param>
            <param name="animalTypeCode">AnimalType code</param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IHerdEntityRepository.GetHerdNumber(System.Int64)">
            <summary>
            Gets HerdNumber from the database, using the specified <paramref name="herdId"/>.
            </summary>
            <param name="herdId">Internal id of the herd.</param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IHerdEntityRepository.GetAnimalCountByHerdNumber(System.Int64,System.Nullable{System.Int32})">
            <summary>
            Gets the number of active animals in the herd, using the specified <paramref name="herdNumber"/> and <paramref name="animalTypeCode"/>
            </summary>
            <param name="herdNumber">Herd number.</param>
            <param name="animalTypeCode">AnimalType code</param>
            <returns>A Int16 datatype containing the number of animals in the herd</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IHerdEntityRepository.GetUserHerdCountByAnimalType(DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity)">
            <summary>
            Gets the number of herds of the specified <paramref name="animalType"/> the user are authorized to.
            </summary>
            <param name="animalType">The type of animal in the herd.</param>
            <returns>A Int32 datatype containing the number of herds the user is authorized to.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.HerdNumberClass">
            <summary>
            Composite class containing mapping between the internal id of an herd and it's official herdnumber and animaltype.
            </summary>
        </member>
        <member name="F:DLBR.DCF.KDB.DataAccess.HerdNumberClass.HerdId">
            <summary>
            The herd id.
            </summary>
        </member>
        <member name="F:DLBR.DCF.KDB.DataAccess.HerdNumberClass.HerdNumber">
            <summary>
            The herd number.
            </summary>
        </member>
        <member name="F:DLBR.DCF.KDB.DataAccess.HerdNumberClass.AnimalType">
            <summary>
            The type of animal in the herd.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IHerdHealthStatusEntityRepository">
            <summary>
            Interface to repository responsible for handling HerdHealthStatusEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IHerdHealthStatusEntityRepository.GetHerdHealthStatusEntityByVetSampleType(System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.VetSampleTypeResultEntity},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Decimal)">
            <summary>
            Gets a single <see href="HerdHealthStatusEntity"/> from the database.
            </summary>
            <param name="VetSampleTypeResults">The vet sample type results.</param>
            <param name="levelDateFrom">can be null</param>
            <param name="levelDateTo">DatoTo. Can be null = gets the aktual aktive status</param>
            <param name="chrNumber">The CHR number.</param>
            <returns>
            A <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdHealthStatusEntity"/> business entity.
            </returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IHerdRemarkEntityRepository">
            <summary>
            Interface to repository responsible for handling HerdRemarkEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IHerdRemarkEntityRepository.UpdateHerdRemark(System.Int64,System.Int32,System.Int32,System.String,System.Nullable{System.DateTime})">
            <summary>
            Updates(create, update and deletes) the herd remark using the specified parameters
            </summary>
            <param name="herdNumber">Herd number</param>
            <param name="animalTypeCode">Animaltype code</param>
            <param name="herdRemarkTypeCode">HerdRamarkType code</param>
            <param name="remark">The remark. If null, the remark is deleted</param>
            <param name="lastUpdate">The date of last update. Used in update situations</param>
            <returns>The updated HerdRemark entity</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IHerdRemarkEntityRepository.FindHerdRemarkEntitiesByHerdNumber(System.Int64,System.Int32)">
            <summary>
            Finds all HerdRemarkEntity in the database that matches the specified <paramref name="herdNumber"/>
            </summary>
            <param name="herdNumber">HerdNumber to find HerdRemarks by</param>
            <param name="animalTypeCode">Code of animal type to use when getting the entity</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdRemarkEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IHerdRemarkEntityRepository.GetHerdRemarkEntityByHerdNumberAndCode(System.Int64,System.Int32,System.Int32)">
            <summary>
            Get a HerdRemarkEntity in n the database that matches the specified <paramref name="herdNumber"/>, <paramref name="animalTypeCode"/>, <paramref name="herdRemarkTypeCode"/>
            </summary>
            <param name="herdNumber">HerdNumber to get HerdRemark by</param>
            <param name="animalTypeCode">Code of animal type to use when getting the entity</param>
            <param name="herdRemarkTypeCode">Code of of remark type to use when getting the entity</param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IInseminationEntityRepository">
            <summary>
            Interface to repository responsible for handling InseminationEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminationEntityRepository.GetInseminationEntityById(System.Int64)">
            <summary>
            Gets a single <see href="InseminationEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminationEntityRepository.FindInseminationEntitiesByAnimalNumber(System.Int64,System.Nullable{System.Int32})">
            <summary>
            Finds all InseminationEntities in the database that matches the specified <paramref name="animalNumber"/>
            </summary>
            <param name="animalNumber">AnimalNumber to use when finding entities.</param>
            <param name="requestedCount">Number of inseminations to return. If null, all inseminations are returned for the specified <paramref name="animalNumber"/></param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminationEntityRepository.FindInseminationEntitiesByHerdNumber(System.Int64,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all InseminationEntities in the database that matches the specified <paramref name="herdNumber"/> and <paramref name="animalTypeCode"/>
            </summary>
            <param name="herdNumber">HerdNumber to use when finding entities.</param>
            <param name="animalTypeCode">AnimalType code.</param>
            <param name="fromDate">Start date of period inseminations lies within.</param>
            <param name="toDate">End date of period inseminations lies within.</param>
            <param name="requestedCount">Number of inseminations to return. If null, all inseminations are returned for the specified <paramref name="herdNumber"/></param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationEntity"/>. If <paramref name="fromDate"/> and <paramref name="toDate"/> and <paramref name="requestedCount"/> is null then all inseminations for all active animals in specified herd is returned.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminationEntityRepository.RegisterInsemination(System.Int64,System.Int64,System.DateTime,System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationProductEntity,System.Nullable{System.Int32})">
            <summary>
            Register a new <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationEntity"/> in the database.
            </summary>
            <param name="animalNumber">The animal that was inseminated.</param>
            <param name="herdId">Id of the herd to which the animal belongs.</param>
            <param name="date">The date of the insemination.</param>
            <param name="bullHerdbookNumber">The bull whose seamon was used.</param>
            <param name="inseminationProduct">The product used for insemination.</param>
            <param name="inseminationNumber">The insemination number.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminationEntityRepository.UpdateInsemination(DLBR.DCF.KDB.BusinessEntities.InseminationEntity)">
            <summary>
            Updates the specified <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationEntity"/> in the database.
            </summary>
            <param name="entity">The entity to update.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminationEntityRepository.DeleteInsemination(DLBR.DCF.KDB.BusinessEntities.InseminationEntity)">
            <summary>
            Deletes the specified <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationEntity"/> in the database
            </summary>
            <param name="entity">The entity to delete.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminationEntityRepository.CalculateInBreeding(System.Nullable{System.Int64},DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Int64,System.Int64)">
            <summary>
            Calculates values regarding InBreeding. 
            </summary>
            <param name="herdNumber">Number of the Herd. Used to find MaxInBreedingCoefficient. If value is not specified, the owner herd is used.</param>
            <param name="animalType">Animaltype eg. cattle</param>
            <param name="animalNumber">The number of the mother animal</param>
            <param name="bullHerdBookNumber">The number og the father animal</param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IInseminatorRoundEntityRepository">
            <summary>
            Interface to repository responsible for handling InseminatorRoundEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorRoundEntityRepository.FindInseminatorRoundsByTourplanId(System.Int64)">
            <summary>
            Finds all InseminatorRoundEntity in the database that matches the specified <paramref name="inseminatorTourplanId"/>
            </summary>
            <param name="inseminatorTourplanId">The id of the Inseminator tourplan to search by</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorRoundEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorRoundEntityRepository.RegisterInseminatorRoundEntity(System.Int64,System.Int32,System.Int64,System.Int16)">
            <summary>
            Register a InseminatorRound in the database.
            </summary>
            <param name="herdNumber">The herdnumber</param>
            <param name="animalTypeCode">The animaltype code</param>
            <param name="inseminatorTourplanId">The id of the Tourplan where the InseminatorRound item belongs to</param>
            <param name="order">The order of the InseminatorRound item </param>
            <returns>The id of the newly registered <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorRoundEntity"/>.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IInseminatorTourplanEntityRepository">
            <summary>
            Interface to repository responsible for handling InseminatorTourplanEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorTourplanEntityRepository.GetInseminatorTourplanEntityById(System.Int64)">
            <summary>
            Gets a single <see href="InseminatorTourplanEntity"/> from the database, using the specified <paramref name="inseminatorTourplanId"/>.
            </summary>
            <param name="inseminatorTourplanId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorTourplanEntityRepository.FindInseminatorTourplanEntitiesByDistrictNumbers(System.Collections.ObjectModel.Collection{System.Int64})">
            <summary>
            Finds all InseminatorTourplanEntity in the database that matches the specified parameters.
            </summary>
            <param name="districtNumbers">Districtnumbers to find InseminatorTourplans by</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorTourplanEntityRepository.FindInseminatorTourplanEntitiesByHerdNumbers(System.Collections.ObjectModel.Collection{System.Int64},DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity)">
            <summary>
            Finds all InseminatorTourplanEntity in the database that matches the specified parameters.
            </summary>
            <param name="herdNumbers">Herd numbers to find InseminatorTourplans by</param>
            <param name="animalType">The type of animal in the specified herds. All herds must have the same type of animal.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorTourplanEntityRepository.FindInseminatorTourplanEntitiesByName(System.String,System.Boolean)">
            <summary>
            Finds all InseminatorTourplanEntity in the database that matches the specified parameters.
            </summary>
            <param name="name">Tourplan name or part of tourplan name to search for</param>
            <param name="matchWholeName">If set to true, the specific tourplan name is searched for, otherwise part of tourplan name is searched for</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorTourplanEntityRepository.RegisterInseminatorTourplanEntity(DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity)">
            <summary>
            Register an InseminatorTourplan in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity"/> to register.</param>
            <returns>The id of the newly registered <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorTourplanEntityRepository.UpdateInseminatorTourplanEntity(DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity)">
            <summary>
            Updates an InseminatorTourplan in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity"/> to update.</param>
            <returns>The id of the newly updated <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorTourplanEntityRepository.DeleteInseminatorTourplanEntity(DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity)">
            <summary>
            Deletes the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The entity to delete from the database.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminatorTourplanEntityRepository.UpdateInseminatorTourplanInfoEntity(System.Int64,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime})">
            <summary>
            Updates the basic information about the tourplan: name, description and districtnumber
            </summary>
            <param name="inseminatorTourplanId">The database id of the tourplan to update info on </param>
            <param name="name">The updated name</param>
            <param name="description">The updated description</param>
            <param name="districtNumber">The updated districtnumber</param>
            <param name="lastUpdate">Last Update</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IInternalAnimalIdentifierEntityRepository">
            <summary>
            Interface to repository responsible for handling InternalAnimalIdentifierEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInternalAnimalIdentifierEntityRepository.GetInternalAnimalIdentifierEntityById(System.Int64)">
            <summary>
            Gets a single <see href="InternalAnimalIdentifierEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.InternalAnimalIdentifierEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInternalAnimalIdentifierEntityRepository.FindInternalAnimalIdentifierEntitiesByAnimalNumber(System.Int64,System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.InternalAnimalIdentifierTypeEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Finds all InternalAnimalIdentifierEntity in the database that matches the specified criteria.
            </summary>
            <param name="animalNumber"></param>
            <param name="herdNumber"></param>
            <param name="animalType"></param>
            <param name="identifierType"></param>
            <param name="validFrom"></param>
            <param name="validTo"></param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.InternalAnimalIdentifierEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInternalAnimalIdentifierEntityRepository.FindInternalAnimalIdentifierEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.InternalAnimalIdentifierTypeEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Finds all InternalAnimalIdentifierEntity in the database that matches the specified criteria.
            </summary>
            <param name="herdNumber"></param>
            <param name="animalType"></param>
            <param name="identifierType"></param>
            <param name="validFrom"></param>
            <param name="validTo"></param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.InternalAnimalIdentifierEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInternalAnimalIdentifierEntityRepository.RegisterInternalAnimalIdentifierEntity(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Int64,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.InternalAnimalIdentifierTypeEntity)">
            <summary>
            Registers an InternalAnimalIdentifierEntity in the database.
            </summary>
            <param name="herdNumber">The number of the herd to which the animal belongs to.</param>
            <param name="animalType">The type of animal.</param>
            <param name="animalNumber">The number of the animal the internal animal identifier relates to.</param>
            <param name="dateFrom">The start date of the identifiers valid period.</param>
            <param name="dateTo">The start date of the identifiers valid period.</param>
            <param name="identifier">The actual identifier value.</param>
            <param name="identifierType">The type of identifier.</param>
            <returns>The id of the newly registered <see cref="T:DLBR.DCF.KDB.BusinessEntities.InternalAnimalIdentifierEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInternalAnimalIdentifierEntityRepository.UpdateInternalAnimalIdentifierEntity(DLBR.DCF.KDB.BusinessEntities.InternalAnimalIdentifierEntity)">
            <summary>
            Updates the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.InternalAnimalIdentifierEntity"/> to insert.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInternalAnimalIdentifierEntityRepository.DeleteInternalAnimalIdentifierEntity(DLBR.DCF.KDB.BusinessEntities.InternalAnimalIdentifierEntity)">
            <summary>
            Deletes the specified InternalAnimalIdentifierEntity in the database.
            </summary>
            <param name="entity">The entity to delete from the database.</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IMatingSchemeEntityRepository">
            <summary>
            Interface to repository responsible for handling MatingSchemeEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IMatingSchemeEntityRepository.FindMatingSchemeEntitiesByAnimalNumber(System.Int64,System.Int64,System.Nullable{System.Int32})">
            <summary>
            Finds all <see href="MatingSchemeEntity"/> from the database, using the specified <paramref name="herdNumber"/> and <paramref name="animalNumber"/>.
            </summary>
            <param name="herdNumber">Herd number of the entity to get from the database.</param>
            <param name="animalNumber">Animal number of the entity to get from the database.</param>
            <param name="requestedCount">If set only specified number of MatingSchemeEntities is returned in decending order of SelectionNumber.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.MatingSchemeEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IMatingSchemeEntityRepository.FindMatingSchemeEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.Int32})">
            <summary>
            Finds all MatingSchemeEntities in the database that matches the specified <paramref name="herdNumber"/>
            </summary>
            <param name="herdNumber">Herd number of the entity to get from the database.</param>
            <param name="animalType">Type of animal to use when finding entities.</param>
            <param name="requestedCount">If set only specified number of MatingSchemeEntities per animal is returned in decending order of SelectionNumber.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.MatingSchemeEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IMedicationEntityRepository">
            <summary>
            Interface to repository responsible for handling MedicationEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IMedicationEntityRepository.GetMedicationEntityById(System.Int64,System.Boolean)">
            <summary>
            Finds all MedicationEntity in the database that matches the specified parameters.
            </summary>
            <param name="entityId">Id to use when finding entities.</param>
            <param name="isAnimalMedication">Whether the MedicationEntity is a animal or herd medication. True = animal, false = herd.</param>
            <returns> A <see cref="T:DLBR.DCF.KDB.BusinessEntities.MedicationEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IMedicationEntityRepository.FindMedicationEntitiesById(System.Int64,System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity)">
            <summary>
            Finds all MedicationEntity in the database that matches the specified parameters.
            </summary>
            <param name="entityId">Id to use when finding entities.</param>
            <param name="herdNumber">Herd number to use when finding entities.</param>
            <param name="animalType">The type of animal to use when finding entities.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.MedicationEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IMedicationEntityRepository.FindMedicationEntitiesByAnimalNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.AdvisorEntity,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{System.Int32})">
            <summary>
            Finds all MedicationEntity in the database that matches the specified parameters.
            </summary>
            <param name="animalNumber">AnimalNumber to use when finding entities.</param>
            <param name="advisor">The advisor responsible for the Medication recording. If set only Medications with specified value is returned. If null, all Medications matching the other criteria´s are returned.</param>
            <param name="diseaseTypeCode"> The code of the DiseaseType. If set only Medications with specified value is returned. If null, all Medications matching the other criteria´s are returned.</param>
            <param name="fromDate">Start date of period that Medications lies within.</param>
            <param name="toDate">End date of period that Medications lies within.</param>
            <param name="drugId">The id of the drug. If set only Medications where specified drug is used is returned. if null all Medications matching the other criteria´s are returned.</param>
            <param name="requestedCount">If set only specified number of Medications is returned in decending order.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.MedicationEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IMedicationEntityRepository.FindMedicationEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.AdvisorEntity,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Boolean)">
             <summary>
             Finds all MedicationEntity in the database that matches the specified parameters.
             </summary>
            <param name="herdNumber">HerdNumber to use when finding entities.</param>
            <param name="animalType">Type of animal to use when finding entities.</param>
            <param name="advisor">The advisor responsible for the Medication recording. If set only Medications with specified value is returned. If null, all Medications matching the other criteria´s are returned.</param>
            <param name="diseaseTypeCode"> The code of the DiseaseType. If set only Medications with specified value is returned. If null, all Medications matching the other criteria´s are returned.</param>
            <param name="fromDate">Start date of period that Medications lies within.</param>
            <param name="toDate">End date of period that Medications lies within.</param>
            <param name="drugId">The id of the drug. If set only Medications where specified drug is used is returned. if null all Medications matching the other criteria´s are returned.</param>
            <param name="requestedCount">If set only specified number of Medications is returned in decending order.</param>
            <param name="lastUpdate">If set only medicationes newer than LastUpdate</param>
            <param name="activeOsr"></param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.MedicationEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IMedicationEntityRepository.RegisterMedicationEntity(DLBR.DCF.KDB.BusinessEntities.AnimalHealthEntity,DLBR.DCF.KDB.BusinessEntities.AnimalGroupHealthEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.DrugUsageEntity,System.Int32,System.Decimal,DLBR.DCF.KDB.BusinessEntities.Classifications.DrugUnitEntity,System.Nullable{System.Int32},DLBR.DCF.KDB.BusinessEntities.Classifications.PrescriptionGroupEntity,System.Nullable{System.Decimal},DLBR.DCF.KDB.BusinessEntities.Classifications.MeatRetentionUnitEntity,System.Nullable{System.Decimal},DLBR.DCF.KDB.BusinessEntities.Classifications.MilkRetentionUnitEntity)">
            <summary>
            Register a Medication in the database.
            If AnimalHealth is not null and AnimalGroupHealth is null the medication relates to an animal. Vice versa the medication is considered as a medication on herd level.
             </summary>
            <param name="animalHealth"> A <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalHealthEntity"/> describing the animal and illness the medication is related to. If null then "animalGroupHealth must be set".</param>
            <param name="animalGroupHealth"> A <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalGroupHealthEntity"/> describing the illness and possibly the animal group the medication is related to. If null then "animalHealth" emust be set.</param>
            <param name="drugUsage">The type of usage.</param>
            <param name="drugProductNumber">The product number of the drug.</param>
            <param name="dosage">The amount of the drug the medication covers.</param>
            <param name="drugUnit">The unit the dosage is in.</param>
            <param name="drugDispensing">Number of days the medication covers.</param>
            <param name="prescriptionGroup">The type of prescription group.</param>
            <param name="meatRetention">The value for retaining the meat.</param>
            <param name="meatRetentionUnit">The unit of the meat retention value.</param>
            <param name="milkRetention">The value for retaining milk.</param>
            <param name="milkRetentionUnit">The unit of the milk retention value.</param>
             <returns>The id of the newly registered <see cref="T:DLBR.DCF.KDB.BusinessEntities.MedicationEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IMedicationEntityRepository.UpdateMedicationEntity(DLBR.DCF.KDB.BusinessEntities.MedicationEntity)">
            <summary>
            Updates the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.MedicationEntity"/> to update.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IMedicationEntityRepository.DeleteMedicationEntity(DLBR.DCF.KDB.BusinessEntities.MedicationEntity)">
            <summary>
            Deletes the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity"> The <see cref="T:DLBR.DCF.KDB.BusinessEntities.MedicationEntity"/> to delete from the database.</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IMilkRecordingEntityRepository">
            <summary>
            Interface to repository responsible for handling MilkRecordingEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IMilkRecordingEntityRepository.FindMilkRecordingEntitiesByAnimalNumber(System.Int64,System.Nullable{System.Int32})">
            <summary>
            Finds all MilkRecordingEntities in the database that matches the specified <paramref name="animalNumber"/>
            </summary>
            <param name="animalNumber"> Animal number to use when finding entities.</param>
            <param name="requestedCount">If set only specified number of MilkRecordings is returned in decending order.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.MilkRecordingEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IMilkRecordingEntityRepository.FindMilkRecordingEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all MilkRecordingEntities in the database that matches the specified <paramref name="herdNumber"/>
            </summary>
            <param name="herdNumber"> Animal number to use when finding entities.</param>
            <param name="animalType">Type of animal to use when finding entities.</param>
            <param name="fromDate">Start date of period that MilkRecordings lies within.</param>
            <param name="toDate">End date of period that MilkRecordings lies within.</param>
            <param name="requestedCount">If set only specified number of MilkRecordings is returned in decending order.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.MilkRecordingEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IPracticeEntityRepository">
            <summary>
            Interface to repository responsible for handling PracticeEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IPracticeEntityRepository.GetHerdPractice(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity)">
            <summary>
            Gets the prefered vetenarian practice of the herd.
            </summary>
            <param name="herdNumber">The herd number</param>
            <param name="animalType">The animal type, making the herd number unique.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.PracticeEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IPregnancyCheckEntityRepository">
            <summary>
            Interface to repository responsible for handling PregnancyCheckEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IPregnancyCheckEntityRepository.GetPregnancyCheckEntityById(System.Int64)">
            <summary>
            Gets a single <see href="PregnancyCheckEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.PregnancyCheckEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IPregnancyCheckEntityRepository.FindPregnancyCheckEntitiesByAnimalNumber(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Finds all PregnancyCheckEntity in the database that matches the specified parameters.
            </summary>
            <param name="animalNumber">AnimalNumber to use when finding entities.</param>
            <param name="inseminationTreatmentCode">If set only pregnancy checks with specified value is returned. If null, all pregnancy checks are returned for the specified <paramref name="animalNumber"/></param>
            <param name="requestedCount">If set only specified number of pregnancy checks is returned in decending order.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.PregnancyCheckEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IPregnancyCheckEntityRepository.FindPregnancyCheckEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Finds all PregnancyCheckEntity in the database that matches the specified parameters.
            </summary>
            <param name="herdNumber">HerdNumber to use when finding entities.</param>
            <param name="animalType">Type of animal to use when finding entities.</param>
            <param name="fromDate">Start date of period that pregnancy checks lies within.</param>
            <param name="toDate">End date of period that pregnancy checks lies within.</param>
            <param name="isPregnant">If set only pregnancy checks positive pregnancy is returned. If null, all pregnancy checks are returned for the specified <paramref name="herdNumber"/></param>
            <param name="requestedCount">If set only specified number of pregnancy checks is returned in decending order.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.PregnancyCheckEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IPregnancyCheckEntityRepository.RegisterPregnancyCheckEntity(System.Int64,System.Int64,System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.DateTime,System.Int32)">
            <summary>
            Register a new <see cref="T:DLBR.DCF.KDB.BusinessEntities.PregnancyCheckEntity"/> in the database.
            </summary>
            <param name="animalNumber">The animal for which the pregnancy check was carried out for.</param>
            <param name="herdNumber">Number of the herd to which the animal belongs to.</param>
            <param name="herdId">Id of the herd to which the animal belongs to.</param>
            <param name="animalType">The type of animal.</param>
            <param name="date">The date of the pregnancy check.</param>
            <param name="inseminationTreatmentCode">The result of the pregnancy check in form of a InseminationTreatmentCode.</param>
            <returns>The id of the newly inserted <see cref="T:DLBR.DCF.KDB.BusinessEntities.PregnancyCheckEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IPregnancyCheckEntityRepository.UpdatePregnancyCheckEntity(DLBR.DCF.KDB.BusinessEntities.PregnancyCheckEntity)">
            <summary>
            Updates the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.PregnancyCheckEntity"/> to update.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IPregnancyCheckEntityRepository.DeletePregnancyCheckEntity(DLBR.DCF.KDB.BusinessEntities.PregnancyCheckEntity)">
            <summary>
            Deletes the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.PregnancyCheckEntity"/> to delete.</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IReproductionStatusEntityRepository">
            <summary>
            Interface to repository responsible for handling ReproductionStatusEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IReproductionStatusEntityRepository.GetReproductionStatusEntityByAnimalNumber(System.Int64,System.Nullable{System.DateTime})">
            <summary>
            Gets a single <see href="ReproductionStatusEntity"/> from the database, using the specified <paramref name="animalNumber"/>.
            </summary>
            <param name="animalNumber"> animalNumber of the entity to get from the database.</param>
            <param name="date">The date to use to get the entity from the database. If set the ReproductionStatus of the animal that relates to the date i returned, if not set the actual ReproductionStatus of the animal is returned.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.ReproductionStatusEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IReproductionStatusEntityRepository.FindReproductionStatusEntitiesByHerdNumber(System.Int64,System.Int32,System.Nullable{System.DateTime})">
            <summary>
            Finds all ReproductionStatusEntity in the database that matches the specified <paramref name="herdNumber"/> and <paramref name="animalType"/>
            </summary>
            <param name="herdNumber"> herdNumber to use when finding entities.</param>
            <param name="animalType"> animalType code to use when finding entities.</param>
            <param name="date">The date to use to get the entities from the database. If set the ReproductionStatus of each animal that relates to the date i returned, if not set the actual ReproductionStatus of each animal is returned.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.ReproductionStatusEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.ISemenInventoryEntityRepository">
            <summary>
            Interface to repository responsible for handling SemenInventoryEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ISemenInventoryEntityRepository.RegisterSemenStockTransferEntity(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationProductEntity,System.Int64,System.Nullable{System.DateTime},System.Nullable{System.Int64},DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Int32,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Register a SemenStock delivery or sale in the database.
            </summary>
            <param name="herdBookNumber">The herdbook number of the animal</param>
            <param name="inseminationProduct">The product type. Eg. conventional</param>
            <param name="bucketNumber">The number of the bucket</param>
            <param name="dateOfPortionDelivery">The date of portion delivery</param>
            <param name="herdNumber"></param>
            <param name="animalType">Type of animal to use when registering the entity with a ReservedForHerdNumber set.</param>
            <param name="deliveredPortions"></param>
            <param name="price"></param>
            <param name="freight"></param>
            <param name="isTransfer"></param>
            <returns>The id of the newly registered <see cref="T:DLBR.DCF.KDB.BusinessEntities.SemenStockEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ISemenInventoryEntityRepository.RegisterSemenStockEntity(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationProductEntity,System.Int64,System.Nullable{System.DateTime},System.Nullable{System.Int64},DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            Register a SemenStock in the database.
            </summary>
            <param name="herdBookNumber">The herdbook number of the animal</param>
            <param name="inseminationProduct">The product type. Eg. conventional</param>
            <param name="bucketNumber">The number of the bucket</param>
            <param name="dateOfPortionDelivery">The date of portion delivery</param>
            <param name="ReservedForHerdNumber">If the portion is reserved for a specific herdnumber</param>
            <param name="animalType">Type of animal to use when registering the entity with a ReservedForHerdNumber set.</param>
            <param name="spentPortions">Spent semen portions</param>
            <param name="wastedPortions">Wasted semen portions</param>
            <param name="correctedPortions">Corrected semen portions</param>
            <param name="transferredPortions">Transferred semen portions</param>
            <param name="price"></param>
            <returns>The id of the newly registered <see cref="T:DLBR.DCF.KDB.BusinessEntities.SemenStockEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ISemenInventoryEntityRepository.UpdateSemenStockEntity(DLBR.DCF.KDB.BusinessEntities.SemenStockEntity)">
            <summary>
            Updates the specified Semen stock entity in the database.
            </summary>
            <param name="entity">The Semen stock entity to update</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ISemenInventoryEntityRepository.FindSemenStocksByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationProductEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            Finds all SemenStock Entities in the database that matches the specified <paramref name="herdNumber"/> ,
            <paramref name="animalType"/>
            </summary>
            <param name="herdNumber">HerdNumber of the entity to get from the database.</param>
            <param name="animalType">AnimalType of the entity to get from the database.</param>
            <param name="inseminationProduct">Optional. Specific product type to get from the database </param>
            <param name="fromDate">Start date of period that Semen stocks lies within.</param>
            <param name="toDate">End date of period that Semen stocks lies within.</param>
            <param name="requestedCount">If set only specified number of Semen stocks is returned in decending order.</param>
            <param name="isStocked">If true only Semen stocks where ActualPortionQuantity is greater than 0 are returned. If false all Semen stocks reqardless of value of ActualPortionQuantity are returned.</param>
            <param name="isTransfer"></param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.SemenStockEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ISemenInventoryEntityRepository.FindSemenStocksByInseminatorNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationProductEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            Finds all SemenStock Entities in the database that matches the specified <paramref name="inseminatorNumber"/> 
            </summary>
            <param name="inseminatorNumber">Inseminator number of the entity to get from the database.</param>
            <param name="inseminationProduct">Optional. Specific product type to get from the database </param>
            <param name="fromDate">Start date of period that Semen stocks lies within.</param>
            <param name="toDate">End date of period that Semen stocks lies within.</param>
            <param name="requestedCount">If set only specified number of Semen stocks is returned in decending order.</param>
            <param name="isStocked">If true only Semen stocks where ActualPortionQuantity is greater than 0 are returned. If false all Semen stocks reqardless of value of ActualPortionQuantity are returned.</param>
            <param name="isTransfer"></param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.SemenStockEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ISemenInventoryEntityRepository.FindSemenStocksByHerdBookNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationProductEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            Finds all SemenStock Entities in the database that matches the specified <paramref name="herdBookNumber"/> 
            </summary>
            <param name="herdBookNumber">HerdBooknumber of the entity to get from the database.</param>
            <param name="inseminationProduct">Optional. Specific product type to get from the database </param>
            <param name="fromDate">Start date of period that Semen stocks lies within.</param>
            <param name="toDate">End date of period that Semen stocks lies within.</param>
            <param name="requestedCount">If set only specified number of Semen stocks is returned in decending order.</param>
            <param name="isStocked">If true only Semen stocks where ActualPortionQuantity is greater than 0 are returned. If false all Semen stocks reqardless of value of ActualPortionQuantity are returned.</param>
            <param name="isTransfer"></param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.SemenStockEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ISemenInventoryEntityRepository.GetSemenStockEntityById(System.Int64,System.Boolean)">
            <summary>
            Gets a single <see href="SemenStockEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <param name="isTransfer"></param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.SemenStockEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.ISubscriberContactInfoEntityRepository">
            <summary>
            Interface to repository responsible for handling SubscriberContactInfoEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ISubscriberContactInfoEntityRepository.FindSubscriberContactInfoEntity(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Finds all SubscriberContactInfoEntity in the database that matches the specified <paramref name="Cprno"/> and <paramref name="Cvrno"/>
            </summary>
            <param name="Cprno">Nullable cprno to get contact list from the database.</param>
            <param name="Cvrno">Nullable cvrno to get contact list from the database.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.SubscriberContactInfoEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.ISubscriberInvoiceEntityRepository">
            <summary>
            Interface to repository responsible for handling SubscriberInvoiceListEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ISubscriberInvoiceEntityRepository.FindSubscriberInvoiceListEntity(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Finds all SubscriberInvoiceListEntity in the database that matches the specified <paramref name="Cprno"/> and <paramref name="Cvrno"/>
            </summary>
            <param name="Cprno">Nullable cprno to get subscriber invoice list from the database.</param>
            <param name="Cvrno">Nullable cvrno to get subscriber invoice list from the database.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.SubscriberInvoiceEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ISubscriberInvoiceEntityRepository.FindSubscriberInvoiceListEntity_RYK(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Finds all SubscriberInvoiceListEntity in the database that matches the specified <paramref name="Cprno"/> and <paramref name="Cvrno"/>
            </summary>
            <param name="Cprno">Nullable cprno to get subscriber invoice list from the database.</param>
            <param name="Cvrno">Nullable cvrno to get subscriber invoice list from the database.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.SubscriberInvoiceEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ISubscriberInvoiceEntityRepository.UpdateSubscriberInvoiceEntity(DLBR.DCF.KDB.BusinessEntities.SubscriberInvoiceEntity,System.String)">
            <summary>
            Updates a subscriber add/delete subsribes on a herd
            </summary>
            <param name="subscriber">Subscriber information to update</param>
            <param name="systemIdent">System ident</param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.ITargetEntityRepository">
            <summary>
            Interface to repository responsible for handling TargetEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ITargetEntityRepository.FindTargetEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.TargetTypeEntity})">
            <summary>
            Finds all TargetEntities in the database that matches the specified parameters.
            If no herd specific target exist for specified herd and targets, then default targets are returned.
            </summary>
            <param name="herdNumber">The herd number to get the entities for.</param>
            <param name="animalType">Type of animal in the specified <paramref name="herdNumber"/></param>
            <param name="targetTypes">Types of key figures to return.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.TargetEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IVetSampleTypeResultEntityRepository">
            <summary>
            Interface to repository responsible for handling VetSampleTypeResultEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IVetSampleTypeResultEntityRepository.GetVetSampleTypeResultEntityByVetSampleType(DLBR.DCF.KDB.BusinessEntities.Classifications.VetSampleTypeEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Decimal)">
            <summary>
            Gets a single <see href="VetSampleTypeResultEntity"/> from the database.
            </summary>
            <param name="VetSampleTypeEntity">VetSampleTypeEntity</param>
            <param name="levelFromDate">can be null</param>
            <param name="levelToDate">DatoTo. Can be null = gets the aktual aktive status</param>
            <param name="chrNumber">ChrNumber</param>
            <returns>
            A <see cref="T:DLBR.DCF.KDB.BusinessEntities.VetSampleTypeResultEntity"/> business entity.
            </returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IVetSampleTypeResultEntityRepository.FindVetSampleTypeResultEntitiesByCHRNumbers(System.Collections.ObjectModel.Collection{System.Int64},System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.VetSampleTypeEntity},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Finds all VetSampleTypeResultEntities in the database that matches the specified parameters
            </summary>
            <param name="chrNumbers">CHR numbers to find Vet Samples by</param>
            <param name="vetSampleTypes">The Vet Sample Type to get results by</param>
            <param name="fromDate">Start date of period that Vet Samples lies within.</param>
            <param name="toDate">End date of period that Vet Samples lies within.</param>
            <returns>
            A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.VetSampleTypeResultEntity"/>
            </returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AddressEntityRepository.AddressEntityFactory">
            <summary>
            Factory responsible for creating instances of the AddressEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AddressEntityRepository.AddressEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AddressEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AddressEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AddressEntityRepository.HerdAddressEntityRepository">
            <summary>
            Repository responsible for handling AddressEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AddressEntityRepository.HerdAddressEntityRepository.FindHerdOwnerAddressEntities">
            <summary>
            Gets a collection of <see href="AddressEntity" /> corresponding to the complete set of existing herdowner addresses.
            </summary>
            <returns>A collection of <see href="AddressEntity" />.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AddressEntityRepository.HerdAddressEntityRepository.FindHerdCHRAddressEntities">
            <summary>
            Gets a collection of <see href="AddressEntity" /> corresponding to the complete set of existing herdowner addresses.
            </summary>
            <returns>A collection of <see href="AddressEntity" />.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AddressEntityRepository.HerdAddressEntityFactory">
            <summary>
            Factory responsible for creating instances of the AddressEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AddressEntityRepository.HerdAddressEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdAddressEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdAddressEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AddressPostalEntityRepository.AddressPostalEntityFactory">
            <summary>
            Factory responsible for creating instances of the AddressPostalEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AddressPostalEntityRepository.AddressPostalEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AddressPostalEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AddressPostalEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AdvisorEntityRepository.AdvisorEntityFactory">
            <summary>
            Factory responsible for creating instances of the AdvisorEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AdvisorEntityRepository.AdvisorEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AdvisorEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AdvisorEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AdvisorEntityRepository.AdvisorEntityRepository">
            <summary>
            Repository responsible for handling AdvisorEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AdvisorEntityRepository.AdvisorEntityRepository.GetAdvisorEntityById(System.Int64)">
            <summary>
            Gets a single <see href="AdvisorEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.AdvisorEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AdvisorEntityRepository.AdvisorEntityRepository.FindAdvisorEntitiesByAdvisorNumber(System.Int64,System.Nullable{System.Int32},DLBR.DCF.KDB.BusinessEntities.Classifications.AdvisorTypeEntity,System.Boolean)">
            <summary>
            Finds all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AdvisorTypeEntity"/> in the database that matches the specified arguments.
            </summary>
            <param name="advisorNumber"> Advisor number of the entity to get from the database.</param>
            <param name="advisorSerialNumber">If set, only Advisors with specified value is returned.</param>
            <param name="advisorType">If set, only Advisors of the specified type is returned. If not set, all types of advisors is returned.</param>
            <param name="isActive">Whether to get active or non active Advisors.</param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AdvisorEntityRepository.AdvisorEntityRepository.FindAdvisorEntities(System.Nullable{System.Int64},DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.AdvisorTypeEntity})">
            <summary>
            Finds all AdvisorEntity in the database that matches the specified arguments
            </summary>
            <param name="herdNumber">If set, only advisors that services the herd is returned. If not set, all advisors is returned.</param>
            <param name="animalType">If herdNumber is set, animalType should be set in order to make the herdNumber unique. AnimalType is only used when herdNumber is specified.</param>
            <param name="advisorTypes">If set, only advisors of the specified types is returned. If not set, all types of advisors is returned.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AdvisorEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AdvisorEntityRepository.AdvisorEntityRepository.FindUserSpecificAdvisorEntities(System.String,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.AdvisorTypeEntity})">
            <summary>
            Finds all AdvisorEntities in the database that the specified user are authorized to use.
            </summary>
            <param name="username">The username to use for reading the entites.</param>
            <param name="advisorTypes">If set, only advisors of the specified types is returned. If not set, all types of advisors is returned.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AdvisorEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.AgriBusinessEntityRepository.AgriBusinessHerdCVRCPREntityFactory">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.AgriBusinessEntityRepository.AgriBusinessHerdCVRCPREntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AgriBusinessHerdEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AgriBusinessHerdEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AgriBusinessEntityRepository.AgriBusinessEntityFactory">
            <summary>
            Factory responsible for creating instances of the AgriBusinessEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AgriBusinessEntityRepository.AgriBusinessEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AgriBusinessEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AgriBusinessEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AgriBusinessEntityRepository.AgriBusinessEntityRepository">
            <summary>
            Repository responsible for handling AgriBusinessEntity business entities.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AgriBusinessHerdEntityRepository.AgriBusinessHerdEntityFactory">
            <summary>
            Factory responsible for creating instances of the AgriBusinessHerdBaseEntity and derived business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AgriBusinessHerdEntityRepository.AgriBusinessHerdEntityFactory.ConstructBase(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AgriBusinessHerdBaseEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AgriBusinessHerdBaseEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AgriBusinessHerdEntityRepository.AgriBusinessHerdEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AgriBusinessHerdEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AgriBusinessHerdEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AgriBusinessHerdEntityRepository.AgriBusinessHerdEntityFactory.ConstructEntity``1(System.Data.IDataReader)">
            <summary>
            Constructs an instance of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AgriBusinessHerdBaseEntity"/> or derived classes. 
            Properties only present in derived classes are not set.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.AnimalNumberInfoEntityRepository.AnimalNumberInfoEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.AnimalNumberInfoEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.AnimalNumberInfoEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.AnimalNumberInfoEntityRepository.AnimalNumberInfoEntityRepository">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.AnimalNumberInfoEntityRepository.AnimalNumberInfoEntityRepository.FindAnimalNumbersByOwner(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Int32)">
            <summary>
            </summary>
            <param name="chrNumber"></param>
            <param name="cvrNumber"></param>
            <param name="cprNumber"></param>
            <param name="animalTypeCode"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AppendixPDFEntityRepository.AppendixPDFEntityFactory">
            <summary>
            Factory responsible for creating instances of the AppendixPDFEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AppendixPDFEntityRepository.AppendixPDFEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AppendixPDFEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AppendixPDFEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AppendixPDFEntityRepository.AppendixPDFEntityRepository">
            <summary>
            Repository responsible for handling AppendixPDFEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AppendixPDFEntityRepository.AppendixPDFEntityRepository.GetAppendixPDFEntityById(System.Int64)">
            <summary>
            Gets a single <see href="AppendixPDFEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.AppendixPDFEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicInformationEntityRepository.BasicInformationEntityFactory">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicInformationEntityRepository.BasicInformationEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.BasicInformationEntity"/> with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.BasicInformationEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicInformationEntityRepository.BasicInformationEntityRepository">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicInformationEntityRepository.BasicInformationEntityRepository.GetBasicInformations(System.Int64,System.Int64,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            </summary>
            <param name="managementUnitId"></param>
            <param name="moduleId"></param>
            <param name="fromDate"></param>
            <param name="toDate"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicInformationEntityRepository.BasicInformationEntityRepository.GetAllBasicInformations(System.Int64,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            </summary>
            <param name="managementUnitId"></param>
            <param name="fromDate"></param>
            <param name="toDate"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicInformationEntityRepository.BasicInformationEntityRepository.InsertBasicInformations(System.Int64,System.Collections.Generic.List{DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.BasicInformationEntity})">
            <summary>
            
            </summary>
            <param name="managementUnitId"></param>
            <param name="basicInformationEntities"></param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicInformationEntityRepository.BasicInformationEntityRepository.UpdateBasicInformations(System.Int64,System.Collections.Generic.List{DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.BasicInformationEntity})">
            <summary>
            
            </summary>
            <param name="managementUnitId"></param>
            <param name="basicInformationEntities"></param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicInformationEntityRepository.BasicInformationEntityRepository.DeleteBasicInformations(System.Int64,System.Collections.Generic.List{DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.BasicInformationEntity})">
            <summary>
            
            </summary>
            <param name="managementUnitId"></param>
            <param name="basicInformationEntities"></param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicInformationEntityRepository.BasicInformationValidationFactory">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicInformationEntityRepository.BasicInformationValidationFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.BasicInformationEntity"/> with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.BasicInformationEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicInformationEntityRepository.BasicInformationValidationRepository">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicInformationEntityRepository.BasicInformationValidationRepository.GetValidationInformations">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicInformationEntityRepository.BasicInformationFeedingPrincipFactory">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicInformationEntityRepository.BasicInformationFeedingPrincipFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.BasicInformationEntity"/> with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.BasicInformationEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicInformationEntityRepository.BasicInformationFeedingPrincipRepository">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicInformationEntityRepository.BasicInformationFeedingPrincipRepository.GetFeedingPrincipList">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicMetadataUnitEntityRepository.BasicCategoryEntityFactory">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicMetadataUnitEntityRepository.BasicCategoryEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.BasicCategoryEntity"/> with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.BasicCategoryEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicMetadataUnitEntityRepository.BasicMetadataUnitEntityFactory">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicMetadataUnitEntityRepository.BasicMetadataUnitEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.BasicMetadataUnitEntity"/> with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.BasicMetadataUnitEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicMetadataUnitEntityRepository.BasicMetadataUnitEntityRepository">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicMetadataUnitEntityRepository.BasicMetadataUnitEntityRepository.GetBasicMetadata">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicMetadataUnitEntityRepository.BasicSubCategoryEntityFactory">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.BasicMetadataUnitEntityRepository.BasicSubCategoryEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.BasicSubCategoryEntity"/> with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.BasicSubCategoryEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Interfaces.ICowmarketInformationRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.ICowmarketInformationRepository.GetCowmarketInformationById(System.Int64)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.ICowmarketInformationRepository.GetCowmarketInformationByAnimalNumber(System.Int64)">
            <summary>
            
            </summary>
            <param name="animalNumber"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.ICowmarketInformationRepository.FindAllCowmarketInformationByAnimalNumber(System.Int64)">
            <summary>
            
            </summary>
            <param name="animalNumber"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.ICowmarketInformationRepository.FindCowmarketInformationByHerdNumberOnAnimalsForSale(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity)">
            <summary>
            
            </summary>
            <param name="herdNumber"></param>
            <param name="animalTypeEntity"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.ICowmarketInformationRepository.FindCowmarketInformationOnAnimalsForSale">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.ICowmarketInformationRepository.ActivateAnimal(System.Int64)">
            <summary>
            
            </summary>
            <param name="animalNumber"></param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.ICowmarketInformationRepository.UpdateAnimal(System.Decimal,System.Decimal,System.Nullable{System.DateTime})">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="animalNumber"></param>
            <param name="DateTo"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Interfaces.IDescentEntityRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.IDescentEntityRepository.FindDescentInformationByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="herdNumber"></param>
            <param name="animalTypeEntity"></param>
            <param name="levels"></param>
            <param name="maxRows"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.IDescentEntityRepository.FindDescentInformationByAnimalNumber(System.Int64,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="animalNumber"></param>
            <param name="levels"></param>
            <param name="maxRows"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Interfaces.ITargetInformationCategoryRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.ITargetInformationCategoryRepository.FindTargetInformationCategories">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Repositories.BenchmarkCriteriaEntityRepository">
            <summary>
            Repository holds a collection of BenchmarkCriteriaEntity
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.BenchmarkCriteriaEntityRepository.FindCriteria">
            <summary>
            Finds all BenchmarkCriteria in the database
            </summary>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.BenchmarkService.BenchmarkCriteriaEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.DiagnosisTreatmentEntityRepository">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.DiagnosisTreatmentEntityRepository.FindDiagnosisTreatmentByDiagnosisId(System.Decimal)">
            <summary>
            </summary>
            <param name="diagnosisId"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.DiagnosisTreatmentEntityRepository.GetDiagnosisTreatmentById(System.Decimal)">
            <summary>
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.DiagnosisTreatmentEntityFactory">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.DiagnosisTreatmentEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.DiagnosisEntity"/> with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.DiagnosisEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.TreatmentLineEntityFactory">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.TreatmentLineEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.TreatmentEntity"/> with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.TreatmentEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.TreatmentLineEntityRepository">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.TreatmentLineEntityRepository.FindTreatmentLinesByTreatmentId(System.Decimal)">
            <summary>
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.TreatmentLineEntityRepository.GetTreatmentLineById(System.Decimal)">
            <summary>
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.TreatmentLineEntityRepository.UpdateTreatmentLine(System.Decimal,System.Decimal,System.String,System.Boolean,System.DateTime)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="dosage"></param>
            <param name="drugUnitDescription"></param>
            <param name="completed"></param>
            <param name="readDate"></param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.TreatmentLineEntityRepository.DeleteTreatmentLine(System.Decimal,System.DateTime)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="readDate"></param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.TreatmentEntityFactory">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.TreatmentEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.TreatmentEntity"/> with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.TreatmentEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.TreatmentEntityRepository">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.TreatmentEntityRepository.FindTreatmentsByHerdNumber(System.Int64,System.Int64)">
            <summary>
            </summary>
            <param name="herdNumber"></param>
            <param name="animalTypeCode"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.TreatmentEntityRepository.GetTreatmentById(System.Decimal)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.TreatmentEntityRepository.RegisterTreatment(System.Decimal,System.Decimal,System.Decimal,System.DateTime,System.Decimal,System.Nullable{System.Decimal},System.Boolean,System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <param name="herdNumber"></param>
            <param name="animalTypeCode"></param>
            <param name="animalNumber"></param>
            <param name="treatmentDate"></param>
            <param name="herdDiagnosisCode"></param>
            <param name="weight"></param>
            <param name="completed"></param>
            <param name="autoComplete"></param>
            <param name="warningFlags"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.TreatmentEntityRepository.UpdateTreatment(System.Decimal,System.Decimal,System.Decimal,System.DateTime,System.Decimal,System.Nullable{System.Decimal},System.Boolean,System.Boolean,System.DateTime,System.String[])">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="herdNumber"></param>
            <param name="animalTypeCode"></param>
            <param name="treatmentDate"></param>
            <param name="herdDiagnosisCode"></param>
            <param name="weight"></param>
            <param name="completed"></param>
            <param name="autoComplete"></param>
            <param name="readDate"></param>
            <param name="warningFlags"></param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.TreatmentEntityRepository.DeleteTreatment(System.Decimal,System.Decimal,System.Decimal,System.DateTime,System.String[])">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="herdNumber"> </param>
            <param name="animalTypeCode"> </param>
            <param name="readDate"></param>
            <param name="warningFlags"></param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.DiagnosisEntityFactory">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.DiagnosisEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.DiagnosisEntity"/> with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.DiagnosisEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.DiagnosisEntityRepository">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.DiagnosisEntityRepository.FindDiagnosisByHerdNumber(System.Int64,System.Int64)">
            <summary>
            </summary>
            <param name="herdNumber"></param>
            <param name="animalTypeCode"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DiagnosisEntityRepository.DiagnosisEntityRepository.GetDiagnosisById(System.Decimal)">
            <summary>
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.EarmarkOrderEntityRepository.EarmarkNumberStatusFactory">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.EarmarkOrderEntityRepository.EarmarkNumberStatusFactory.Construct(System.Data.IDataReader)">
            <summary>
             Constructs a new EarmarkRegisteredEntity from the provided dataReader object.
            </summary>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.HerdInfoVFLEntityRepository.HerdInfoVFLEntityFactory">
            <summary>
            Factory responsible for creating instances of the HerdInfoVFLEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.HerdInfoVFLEntityRepository.HerdInfoVFLEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdInfoVFLEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdInfoVFLEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.HerdInfoVFLEntityRepository.HerdInfoVFLEntityRepository">
            <summary>
            Repository responsible for handling HerdInfoVFLEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.HerdInfoVFLEntityRepository.HerdInfoVFLEntityRepository.FindHerdInfoVFLEntity(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Finds all HerdInfoVFLEntity in the database that matches the specified cprno or cvrno"/&gt;
            </summary>
            <param name="Cprno">Nullable cprno to get herds from the database.</param>
            <param name="Cvrno">Nullable cvrno to get herds from the database.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdInfoEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.ModuleEntityRepository.ModuleEntityFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ModuleEntityRepository.ModuleEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AddressEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AddressEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.ModuleEntityRepository.ModuleEntityRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ModuleEntityRepository.ModuleEntityRepository.GetModules">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.EarmarkOrderEntityRepository.EarmarkArticlePriceFactory">
            <summary>
            Factory responsible for creating instances of the EarmarkPriceFactory business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.EarmarkOrderEntityRepository.EarmarkArticlePriceFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.EarmarkPriceEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.EarmarkPriceEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.EarmarkOrderEntityRepository.EarmarkEmailFactory">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.EarmarkOrderEntityRepository.EarmarkEmailFactory.Construct(System.Data.IDataReader)">
            <summary>
             Constructs a new EarmarkEmailEntity from the provided dataReader object.
            </summary>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.EarmarkOrderEntityRepository.EarmarkImageEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkImageEntity"/> from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkReplacementEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.EarmarkOrderEntityRepository.EarmarkOrderCostFactory">
            <summary>
            Factory responsible for creating instances of the EarmarkOrderCostEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.EarmarkOrderEntityRepository.EarmarkOrderCostFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.EarmarkOrderCostEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.EarmarkOrderCostEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.EarmarkOrderEntityRepository.EarmarkOrderLineCostFactory">
            <summary>
            Factory responsible for creating instances of the EarmarkOrderLineCostEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.EarmarkOrderEntityRepository.EarmarkOrderLineCostFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.EarmarkOrderLineCostEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.EarmarkOrderLineCostEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkOrderSupplementFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOrderEntity"/> and a related <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.EarmarkSupplementEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.EarmarkSupplementEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.EarmarkOrderEntityRepository.EarmarkPriceFactory">
            <summary>
            Factory responsible for creating instances of the EarmarkPriceFactory business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.EarmarkOrderEntityRepository.EarmarkPriceFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.EarmarkPriceEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.EarmarkPriceEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.KPOAnimalTransferRepository.KPOAnimalTransferEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.KPOAnimalTransferEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.KPOAnimalTransferEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.OrganicEntityRepository.OrganicEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.OrganicEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.OrganicEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.PensionEntityRepository.PensionEntityFactory">
            <summary>
            Factory responsible for creating instances of the PensionEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.PensionEntityRepository.PensionEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.PensionEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.PensionEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.PensionEntityRepository.PensionEntityRepository">
            <summary>
            Repository responsible for handling ManagementUnitEntity business entities.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.ReportingServicesEntityRepository.AuthorizedReportCheckEntityFactory">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.ReportingServicesEntityRepository.AuthorizedReportCheckEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.AuthorizedReportCheckEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.AuthorizedReportCheckEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.ReportingServicesEntityRepository.AuthorizedReportEntityFactory">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.ReportingServicesEntityRepository.AuthorizedReportEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.AuthorizedReportEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.AuthorizedReportEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.ReportingServicesEntityRepository.AuthorizedTestReportEntityFactory">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Repositories.ReportingServicesEntityRepository.AuthorizedTestReportEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.AuthorizedTestReportEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.AuthorizedTestReportEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.SemenInventoryEntityRepository.SemenDistrictInventoryEntityRepository">
            <summary>
            Repository responsible for handling SemenInventoryEntity business entities.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.EventInfoEntityRepository.EventInfoEntityFactory">
            <summary>
            Factory responsible for creating instances of the EventInfoEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.EventInfoEntityRepository.EventInfoEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EventInfoEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EventInfoEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.EventInfoEntityRepository.EventInfoEntityRepository">
            <summary>
            Repository responsible for handling EventInfoEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.EventInfoEntityRepository.EventInfoEntityRepository.FindEventInfoEntity(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Finds all EventInfoEntity in the database that matches the specified parameters
            </summary>
            <param name="Herdid">Nullable Herdid no to get events from the database.</param>
            <param name="Cprno">Nullable Cpn no to get events from the database.</param>
            <param name="Cvrno">Nullable Cvr no to get events from the database.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.EventInfoEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.EventInfoEntityRepository.EventInfoEntityRepository.MakeEventLog(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Starts a procedure on the Database to find event logs entities.
            </summary>
            <param name="Herdid">Nullable Herdid no to get events from the database.</param>
            <param name="Cprno">Nullable Cpn no to get events from the database.</param>
            <param name="Cvrno">Nullable Cvr no to get events from the database.</param>
            <returns>A result of the operation (true is valid, false if error)</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.EventTimeLogEntityRepository.EventTimeLogEntityFactory">
            <summary>
            Factory responsible for creating instances of the EventTimeLogEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.EventTimeLogEntityRepository.EventTimeLogEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EventTimeLogEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EventTimeLogEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.EventTimeLogEntityRepository.EventTimeLogEntityRepository">
            <summary>
            Repository responsible for handling EventTimeLogEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.EventTimeLogEntityRepository.EventTimeLogEntityRepository.FindEventTimeLogEntity(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Finds all EventTimeLogEntity in the database that matches the specified parameters
            </summary>
            <param name="Herdid">Nullable Herdid no to get eventtimelogs from the database.</param>
            <param name="Cprno">Nullable Cpn no to get eventtimelogs from the database.</param>
            <param name="Cvrno">Nullable Cvr no to get eventtimelogs from the database.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.EventTimeLogEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneticsEntityRepository.GeneticsEntityFactory">
            <summary>
            Factory responsible for creating instances of the GeneticsEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneticsEntityRepository.GeneticsEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneticsEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneticsEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.GeneticsEntityRepository.GeneticsEntityRepository">
            <summary>
            Repository responsible for handling GeneticsEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.GeneticsEntityRepository.GeneticsEntityRepository.FindGeneticsEntityById(System.Int64)">
            <summary>
            Finds all GeneticsEntity in the database that matches the specified <paramref name="herdBook"/>
            </summary>
            <param name="herdBook">Id to use when finding entities.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneticsEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.HerdInfoEntityRepository.HerdInfoEntityFactory">
            <summary>
            Factory responsible for creating instances of the HerdInfoEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.HerdInfoEntityRepository.HerdInfoEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdInfoEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdInfoEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.HerdInfoEntityRepository.HerdInfoEntityRepository">
            <summary>
            Repository responsible for handling HerdInfoEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.HerdInfoEntityRepository.HerdInfoEntityRepository.FindHerdInfoEntity(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Finds all HerdInfoEntity in the database that matches the specified cprno or cvrno"/&gt;
            </summary>
            <param name="Cprno">Nullable cprno to get herds from the database.</param>
            <param name="Cvrno">Nullable cvrno to get herds from the database.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdInfoEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.HerdInfoEntityRepository.HerdInfoEntityRepository.FindHerdInfoEntity_RYK(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Finds all HerdInfoEntity in the database that matches the specified cprno or cvrno"/&gt;
            </summary>
            <param name="Cprno">Nullable cprno to get herds from the database.</param>
            <param name="Cvrno">Nullable cvrno to get herds from the database.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdInfoEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.InseminatorTimeRecordEntityRepository.InseminatorTimeRecordEntityFactory">
            <summary>
            Factory responsible for creating instances of the InseminatorTimeRecordEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTimeRecordEntityRepository.InseminatorTimeRecordEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTimeRecordEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTimeRecordEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.InseminatorTimeRecordEntityRepository.InseminatorTimeRecordEntityRepository">
            <summary>
            Repository responsible for handling InseminatorTimeRecordEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTimeRecordEntityRepository.InseminatorTimeRecordEntityRepository.BatchCommitInseminatorTimeRecord(System.Collections.Generic.List{DLBR.DCF.KDB.BusinessEntities.InseminatorTimeRecordEntity})">
            <summary>
            The batch commit inseminator time record.
            </summary>
            <param name="batch">
            The batch.
            </param>
            <returns>
            List of affected InseminatorTimeRecord id's
            </returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTimeRecordEntityRepository.InseminatorTimeRecordEntityRepository.DeleteInseminatorTimeRecordEntity(DLBR.DCF.KDB.BusinessEntities.InseminatorTimeRecordEntity)">
            <summary>
            Deletes the time record in the database.
            </summary>
            <param name="entity">
            The entity to delete.
            </param>
            <returns>
            The id of unknown
            </returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTimeRecordEntityRepository.InseminatorTimeRecordEntityRepository.FindInseminatorTimeRecordEntityByInseminatorNumber(System.DateTime,System.DateTime,System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int32})">
            <summary>
            Finds all InseminatorTimeRecordEntity in the database that matches the specified input parameters
            </summary>
            <param name="startDateTime">
            start time
            </param>
            <param name="stopDateTime">
            stop time
            </param>
            <param name="inseminatorNumber">
            inseminator number
            </param>
            <param name="herdNumber">
            the herd number
            </param>
            <param name="partNumberCode">
            part number code
            </param>
            <returns>
            A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTimeRecordEntity"/>
            </returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTimeRecordEntityRepository.InseminatorTimeRecordEntityRepository.FindInseminatorTimeRecordEntityByParentId(System.Int64)">
            <summary>
            Finds all the time records with the specified parent id.
            </summary>
            <param name="parentId">
            The parent id.
            </param>
            <returns>
            List of time records with the specified parent id.
            </returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTimeRecordEntityRepository.InseminatorTimeRecordEntityRepository.GetInseminatorTimeRecordEntityById(System.Int64)">
            <summary>
            Gets a single <see href="InseminatorTimeRecordEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">
            Id of the entity to get from the database.
            </param>
            <returns>
            A <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTimeRecordEntity"/> business entity.
            </returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTimeRecordEntityRepository.InseminatorTimeRecordEntityRepository.InsertInseminatorTimeRecordEntity(DLBR.DCF.KDB.BusinessEntities.InseminatorTimeRecordEntity,Oracle.DataAccess.Client.OracleTransaction)">
            <summary>
            Inserts the inseminator time record entity. This method invokes the
              InsertInseminatorTimeRecordEntity method.
            </summary>
            <param name="timeRecordEntity">
            The time record entity.
            </param>
            <param name="oracleTransaction">
            Optional oracle transaction.
            </param>
            <returns>
            Id of the newly created InseminatorTimeRecordEntity
            </returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTimeRecordEntityRepository.InseminatorTimeRecordEntityRepository.InsertInseminatorTimeRecordEntity(System.Int64,System.Nullable{System.Int64},System.Int64,System.DateTime,System.Nullable{System.DateTime},System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.String,DLBR.DCF.KDB.BusinessEntities.Classifications.InseminatorTimeRecordPartEntity,System.Nullable{System.Int64},Oracle.DataAccess.Client.OracleTransaction)">
            <summary>
            Inserts the time record into the database.
            </summary>
            <param name="inseminatorNumber">
            The inseminator number.
            </param>
            <param name="substituteInseminatorNumber">
            The substitute inseminator number.
            </param>
            <param name="herdNumber">
            The herd number.
            </param>
            <param name="startDateTime">
            The start date time.
            </param>
            <param name="stopDateTime">
            The stop date time.
            </param>
            <param name="minutes">
            The minutes.
            </param>
            <param name="animalTypeEntity">
            The animal type entity.
            </param>
            <param name="remarks">
            The remarks.
            </param>
            <param name="partNumberEntity">
            The part number entity.
            </param>
            <param name="parentId">
            The parent id.
            </param>
            <param name="oracleTransaction">
            The oracle transaction - Optional
            </param>
            <returns>
            The id of the newly inserted <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTimeRecordEntity"/>.
            </returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.InvoiceInfoEntityRepository.InvoiceInfoEntityFactory">
            <summary>
            Factory responsible for creating instances of the InvoiceInfoEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InvoiceInfoEntityRepository.InvoiceInfoEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.InvoiceInfoEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.InvoiceInfoEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.InvoiceInfoEntityRepository.InvoiceInfoEntityRepository">
            <summary>
            Repository responsible for handling InvoiceInfoEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InvoiceInfoEntityRepository.InvoiceInfoEntityRepository.FindInvoiceInfoEntity(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.String)">
            <summary>
            Finds all InvoiceInfoEntity in the database that matches the specified
            </summary>
            <param name="herdId">Nullable herdid to filter result of invoices from the database.</param>
            <param name="cprno">Nullable cprno to get invoices from the database.</param>
            <param name="cvrno">Nullable cvrno to get invoices from the database.</param>
            <param name="invoiceInfoType">invoice info type</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.InvoiceInfoEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.InvoicePDFEntityRepository.InvoicePDFEntityFactory">
            <summary>
            Factory responsible for creating instances of the InvoicePDFEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InvoicePDFEntityRepository.InvoicePDFEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.InvoicePDFEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.InvoicePDFEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.InvoicePDFEntityRepository.InvoicePDFEntityRepository">
            <summary>
            Repository responsible for handling InvoicePDFEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InvoicePDFEntityRepository.InvoicePDFEntityRepository.GetInvoicePDFEntityById(System.Int64)">
            <summary>
            Gets a single <see href="InvoicePDFEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.InvoicePDFEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.ManagementUnitEntityRepository.ManagementUnitEntityRepository">
            <summary>
            Repository responsible for handling ManagementUnitEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ManagementUnitEntityRepository.ManagementUnitEntityRepository.UpdateIsInUse(DLBR.DCF.KDB.BusinessEntities.ManagementUnitEntity,System.Boolean)">
            <summary>
            Update ManagementUnit with IsInUse flag
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AnimalEntityRepository.AnimalEntityFactory">
            <summary>
            Factory responsible for creating instances of the AnimalEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalEntityRepository.AnimalEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AnimalEntityRepository.AnimalEntityRepository">
            <summary>
            Repository responsible for handling AnimalEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalEntityRepository.AnimalEntityRepository.GetAnimalByNumber(System.Int64)">
            <summary>
            Gets a single <see href="AnimalEntity"/> from the database, using the specified <paramref name="animalNumber"/>.
            </summary>
            <param name="animalNumber">AnimalNumber of the entity to get from the data</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalEntityRepository.AnimalEntityRepository.FindAnimalsByHerdNumber(System.Int64,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Finds all AnimalEntity in the database that matches the specified <paramref name="herdNumber"/>
            </summary>
            <param name="herdNumber">HerdNumber to use when finding entities.</param>
            <param name="animalTypeCode">AnimalType Code of the entity to get from the database.</param>
            <param name="fromDate">Start date of the period within animals have left the herd.</param>
            <param name="toDate">End date of the period within animals have left the herd.</param> 
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalEntityRepository.AnimalEntityRepository.FindAnimalsByHerdNumberAndPeriod(System.Int64,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Finds all AnimalEntity in the database that matches the specified <paramref name="herdNumber"/>
            This method also retrieves fromDate and toDate information.
            A speciel sql statement is implementet in order to avoid dublicate rows per animal.
            </summary>
            <param name="herdNumber">HerdNumber to use when finding entities.</param>
            <param name="animalTypeCode">AnimalType Code of the entity to get from the database.</param>
            <param name="fromDate">Start date of the period within animals have left the herd.</param>
            <param name="toDate">End date of the period within animals have left the herd.</param> 
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalEntityRepository.AnimalEntityRepository.FindAnimalIdInfoByAnimalNumber(System.Int64)">
            <summary>
            Reads the mapping between the animalnumber and the various id's. 
            The info is read for all animals in the current herd of the specified animal.
            </summary>
            <param name="animalNumber"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AnimalEventLogEntityRepository.AnimalEventLogEntityFactory">
            <summary>
            Factory responsible for creating instances of the AnimalEventLogEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalEventLogEntityRepository.AnimalEventLogEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalEventLogItemEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalEventLogItemEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AnimalEventLogEntityRepository.AnimalEventLogEntityRepository">
            <summary>
            Repository responsible for handling AnimalEventLogEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalEventLogEntityRepository.AnimalEventLogEntityRepository.FindAnimalEventLogItemsByAnimalNumber(System.Int64,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Gets a list of events for a specific animal
            </summary>
            <param name="animalNumber">Unique number of an animal</param>
            <param name="fromDate">Lower date bound</param>
            <param name="toDate">Upper date bound</param>
            <returns><see cref="T:System.Collections.ObjectModel.Collection`1"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AnimalGroupHealthEntityRepository.AnimalGroupHealthEntityFactory">
            <summary>
            Factory responsible for creating instances of the AnimalGroupHealthEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalGroupHealthEntityRepository.AnimalGroupHealthEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalGroupHealthEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalGroupHealthEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AnimalGroupTransferEntityRepository.AnimalGroupTransferEntityFactory">
            <summary>
            Factory responsible for creating instances of the AnimalGroupTransferEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalGroupTransferEntityRepository.AnimalGroupTransferEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalGroupTransferEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalGroupTransferEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AnimalGroupTransferEntityRepository.AnimalGroupTransferEntityRepository">
            <summary>
            Repository responsible for handling AnimalGroupTransferEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalGroupTransferEntityRepository.AnimalGroupTransferEntityRepository.GetAnimalGroupTransferEntityById(System.Int64)">
            <summary>
            Gets a single <see href="AnimalGroupTransferEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalGroupTransferEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalGroupTransferEntityRepository.AnimalGroupTransferEntityRepository.FindAnimalGroupTransferEntitiesByHerdNumber(System.Int64,System.Int64,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all AnimalGroupTransferEntity in the database that matches the specified
            </summary>
            <param name="herdNumber">Unique number for a herd to use when finding entities.</param>
            <param name="animalType">Unique number for type of animals to find.</param>
            <param name="direction">Direction of animal transfer.</param>
            <param name="from">Query beginning date.</param>
            <param name="to">Query ending date.</param>
            <param name="requestedCount">How many records to return.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalGroupTransferEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalGroupTransferEntityRepository.AnimalGroupTransferEntityRepository.RegisterAnimalGroupTransferEntity(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.DateTime,System.Nullable{System.Int32},System.Int32,System.Nullable{System.Int64},DLBR.DCF.KDB.BusinessEntities.Classifications.NationalityEntity,System.String,DLBR.DCF.KDB.BusinessEntities.Classifications.NationalityEntity,System.Nullable{System.Int32})">
            <summary>
            Register a new AnimalGroupTransfer in the database.
            </summary>
            /// <param name="herdNumber">Unique number for a herd.</param>
            <param name="animalType">Unique number for a type of animals.</param>
            <param name="date">Date transfer took place</param>
            <param name="direction">Animals going in or out of herd</param>
            <param name="numberOfAnimals">Number of animals being transfered</param>
            <param name="herdNumberToFrom">Where the animals are going to or from depending on the direction variable</param>
            <param name="nationality">Nationality where the animals are going to or from depending on the direction variable</param>
            <param name="vehicleRegistrationNumber">License plate numver of the vehicle</param>
            <param name="vehicleNationality">Country the vehicle is registered in</param>
            <param name="carrierLicenceNumber">License number of the carrier</param>
            <returns>The id of the newly inserted <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalGroupTransferEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalGroupTransferEntityRepository.AnimalGroupTransferEntityRepository.UpdateAnimalGroupTransferEntity(DLBR.DCF.KDB.BusinessEntities.AnimalGroupTransferEntity)">
            <summary>
            Updates the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalGroupTransferEntity"/> to update.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalGroupTransferEntityRepository.AnimalGroupTransferEntityRepository.DeleteAnimalGroupTransferEntity(DLBR.DCF.KDB.BusinessEntities.AnimalGroupTransferEntity)">
            <summary>
            Deletes the specified AnimalGroupTransferEntity identified by in the database.
            </summary>
            <param name="entity">Entity to delete from the database.</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AnimalHealthEntityRepository.AnimalHealthEntityFactory">
            <summary>
            Factory responsible for creating instances of the AnimalHealthEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalHealthEntityRepository.AnimalHealthEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalHealthEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalHealthEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AnimalHealthEntityRepository.AnimalHealthEntityRepository">
            <summary>
            Repository responsible for handling AnimalHealthEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalHealthEntityRepository.AnimalHealthEntityRepository.GetAnimalHealthEntityById(System.Int64)">
            <summary>
            Gets a single <see href="AnimalHealthEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalHealthEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalHealthEntityRepository.AnimalHealthEntityRepository.FindAnimalHealthEntitiesByAnimalNumber(System.Int64,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseTypeEntity},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all AnimalHealthEntity in the database that matches the specified parameters.
            </summary>
            <param name="animalNumber"> AnimalNumber to use when finding entities.</param>
            <param name="diseaseTypes">A collection of DiseaseTypes. If set only AnimalHealths with specified values is returned. If null, all AnimalHealths matching the other criteria´s are returned.</param>
            <param name="fromDate">Start date of period that AnimalHealths lies within.</param>
            <param name="toDate">End date of period that AnimalHealths lies within.</param>
            <param name="requestedCount">If set only specified number of AnimalHealths is returned in decending order.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalHealthEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalHealthEntityRepository.AnimalHealthEntityRepository.FindAnimalHealthEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.AdvisorEntity,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseTypeEntity},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
             <summary>
             Finds all AnimalHealthEntity in the database that matches the specified parameters.
             </summary>
            <param name="herdNumber">HerdNumber to use when finding entities.</param>
             <param name="animalType">Type of animal to use when finding entities.</param>
             <param name="advisor">The advisor responsible for the AnimalHealth recording. If set only AnimalHealths with specified value is returned. If null, all AnimalHealths matching the other criteria´s are returned.</param>
             <param name="diseaseTypes">A collection of DiseaseTypes. If set only AnimalHealths with specified values is returned. If null, all AnimalHealths matching the other criteria´s are returned.</param>
             <param name="fromDate">Start date of period that AnimalHealths lies within.</param>
             <param name="toDate">End date of period that AnimalHealths lies within.</param>
             <param name="requestedCount">If set only specified number of AnimalHealths is returned in decending order.</param>
             <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalHealthEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalHealthEntityRepository.AnimalHealthEntityRepository.RegisterAnimalHealthEntity(DLBR.DCF.KDB.BusinessEntities.AnimalHealthRegistrationEntity)">
            <summary>
            Register an AnimalHealth in the database.
            </summary>
            <param name="registrationEntity">The AnimalHealth to register</param>
            <returns>The id of the newly registered <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalHealthEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalHealthEntityRepository.AnimalHealthEntityRepository.RegisterAnimalHealthEntities(System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.AnimalHealthRegistrationEntity})">
            <summary>
            Register a collection of AnimalHealth in the database.
            </summary>
            <param name="registrationEntities">The AnimalHealths to register</param>
            <returns>The ids of the newly registered <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalHealthEntity"/> collection.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalHealthEntityRepository.AnimalHealthEntityRepository.UpdateAnimalHealthEntity(DLBR.DCF.KDB.BusinessEntities.AnimalHealthEntity)">
            <summary>
            Updates the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalHealthEntity"/> to update.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalHealthEntityRepository.AnimalHealthEntityRepository.DeleteAnimalHealthEntity(DLBR.DCF.KDB.BusinessEntities.AnimalHealthEntity)">
            <summary>
            Deletes the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The entity to delete from the database.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalHealthEntityRepository.AnimalHealthEntityRepository.AppendDiseaseTypes(System.Text.StringBuilder,Oracle.DataAccess.Client.OracleCommand,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseTypeEntity})">
            <summary>
            Runs through a collection of districnumbers and appends these to a stringbuilder
            </summary>
            <param name="commandBuilder">The stringbuilder to append to</param>
            <param name="command">The oraclecommand to add parameters to</param>
            <param name="diseaseTypes">The collection of diseasecodes to append</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AnimalTransferEntityRepository.AnimalTransferEntityFactory">
            <summary>
            Factory responsible for creating instances of the AnimalTransferEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalTransferEntityRepository.AnimalTransferEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalTransferEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalTransferEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AnimalTransferEntityRepository.AnimalTransferEntityRepository">
            <summary>
            Repository responsible for handling AnimalTransferEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalTransferEntityRepository.AnimalTransferEntityRepository.GetAnimalTransferEntityById(System.Int64)">
            <summary>
            Gets a single <see href="AnimalTransferEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalTransferEntityRepository.AnimalTransferEntityRepository.FindAnimalTransferByAnimalNumber(System.Int64,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTransferTypeEntity},System.Nullable{System.Int32})">
            <summary>
            Finds all AnimalTransferEntity in the database that matches the specified <paramref name="animalNumber"/>
            </summary>
            <param name="animalNumber"> animal number to use when finding entities.</param>
            <param name="animalTransferTypes">If set, only animalTransfers of the specified types is returned. If not set, all types of animalTransfers is returned.</param>
            <param name="requestedCount"> If set, only number of animalTransfers requested is returnes in decending order. </param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalTransferEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalTransferEntityRepository.AnimalTransferEntityRepository.FindAnimalTransferByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTransferTypeEntity},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all AnimalTransferEntity in the database that matches the specified <paramref name="herdNumber"/>
            </summary>
            <param name="herdNumber"> herd number to use when finding entities.</param>
            <param name="animalType"> type of animal to usen when finding entities.</param>
            <param name="animalTransferTypes">If set, only animalTransfers of the specified types is returned. If not set, all types of animalTransfers is returned.</param>
            <param name="fromDate"> Start date of period that animalTransfers lies within. </param>
            <param name="toDate"> End date of periode that animalTransfers lies within.</param>
            <param name="requestedCount"> If set, only number of animalTransfers requested is returnes in decending order. </param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalTransferEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalTransferEntityRepository.AnimalTransferEntityRepository.FindHerdAnimalTransferByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTransferTypeEntity},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Finds all AnimalTransferEntity in the database that matches the specified <paramref name="herdNumberToFrom"/>
            </summary>
            <param name="herdNumberToFrom"> herd number to/from to use when finding entities.</param>
            <param name="animalType"> type of animal to usen when finding entities.</param>
            <param name="animalTransferTypes">If set, only animalTransfers of the specified types is returned. If not set, all types of animalTransfers is returned.</param>
            <param name="fromDate"> Start date of period that animalTransfers lies within. </param>
            <param name="toDate"> End date of periode that animalTransfers lies within.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalTransferEntity"/> to/from</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalTransferEntityRepository.AnimalTransferEntityRepository.UpdateAnimalTransfer(DLBR.DCF.KDB.BusinessEntities.AnimalTransferEntity,System.String[])">
            <summary>
            Updates the specified <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalTransferEntity"/> in the database.
            </summary>
            <param name="entity">The entity to update.</param>
            <param name="warningFlags">List of WarningFlags to force</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalTransferEntityRepository.AnimalTransferEntityRepository.DeleteAnimalTransfer(DLBR.DCF.KDB.BusinessEntities.AnimalTransferEntity,System.String[])">
            <summary>
            Deletes the specified <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalTransferEntity"/> in the database
            </summary>
            <param name="entity">The entity to delete.</param>
            <param name="warningFlags">List of WarningFlags to force</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.AnimalWeightEntityRepository.AnimalWeightEntityRepository">
            <summary>
            Repository responsible for handling AnimalWeightEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalWeightEntityRepository.AnimalWeightEntityRepository.GetAnimalWeightEntityById(System.Int64)">
            <summary>
            Gets a single <see href="AnimalWeightEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalWeightEntityRepository.AnimalWeightEntityRepository.FindAnimalWeightEntitiesByAnimalNumber(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Finds all AnimalWeightEntities in the database that matches the specified <paramref name="animalNumber"/>
            </summary>
            <param name="animalNumber"> animal number to use when finding entities.</param>
            <param name="weighingTypeCode">If set only animal weights with specified value is returned. If null, all animal weights are returned for the specified <paramref name="animalNumber"/></param>
            <param name="requestedCount">If set only specified number of animal weights is returned in decending order.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalWeightEntityRepository.AnimalWeightEntityRepository.FindAnimalWeightEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all AnimalWeightEntities in the database that matches the specified <paramref name="herdNumber"/>
            </summary>
            <param name="herdNumber"> herd number to use when finding entities.</param>
            <param name="animalType">Type of animal to use when finding entities.</param>
            <param name="weighingTypeCode">If set only animal weights with specified value is returned. If null, all animal weights are returned for the specified <paramref name="herdNumber"/></param>
            <param name="fromDate">Start date of period that animal weights lies within.</param>
            <param name="toDate">End date of period that animal weights lies within.</param> 
            <param name="requestedCount">If set only specified number of animal weights is returned in decending order.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalWeightEntityRepository.AnimalWeightEntityRepository.GetAnimalWeightExpectedEntityById(System.Int64)">
            <summary>
            Gets a single <see href="AnimalWeightEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalWeightEntityRepository.AnimalWeightEntityRepository.FindAnimalWeightExpectedEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all AnimalWeightEntities in the database that matches the specified <paramref name="herdNumber"/>
            </summary>
            <param name="herdNumber"> herd number to use when finding entities.</param>
            <param name="animalType">Type of animal to use when finding entities.</param>
            <param name="weighingTypeCode">If set only animal weights with specified value is returned. If null, all animal weights are returned for the specified <paramref name="herdNumber"/></param>
            <param name="fromDate">Start date of period that animal weights lies within.</param>
            <param name="toDate">End date of period that animal weights lies within.</param> 
            <param name="requestedCount">If set only specified number of animal weights is returned in decending order.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalWeightEntityRepository.AnimalWeightEntityRepository.FindAnimalWeightExpectedEntitiesByAnimalNumber(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Finds all AnimalWeightEntities in the database that matches the specified <paramref name="animalNumber"/>
            </summary>
            <param name="animalNumber"> animal number to use when finding entities.</param>
            <param name="weighingTypeCode">If set only animal weights with specified value is returned. If null, all animal weights are returned for the specified <paramref name="animalNumber"/></param>
            <param name="requestedCount">If set only specified number of animal weights is returned in decending order.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalWeightEntityRepository.AnimalWeightEntityRepository.RegisterAnimalWeightEntity(System.Int64,System.Int64,System.DateTime,DLBR.DCF.KDB.BusinessEntities.Classifications.WeighingMethodEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.WeighingTypeEntity,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})">
             <summary>
             Inserts the specified <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/> into the database.
             </summary>
            <param name="animalNumber">Animal number of animal weighted.</param>
             <param name="herdId">Id of the herd where the animal has been weighted.</param>
             <param name="date">Date of the weighing.</param>
             <param name="weighingMethod">Method of weighing specified by <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.WeighingMethodEntity"/></param>
             <param name="weighingType">Type of weighing specified by <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.WeighingTypeEntity"/></param>
             <param name="weight">The actual weight of the animal e.g. kilograms.</param>
             <param name="price">The price of the aniaml at the time of the weighing.</param>
             <param name="chestGirth">The circomference of the chest, e.g. centimeters. </param>
             <returns>The id of the newly inserted <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalWeightEntityRepository.AnimalWeightEntityRepository.UpdateAnimalWeightEntity(DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity)">
            <summary>
            Updates the specified <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/> to insert.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.AnimalWeightEntityRepository.AnimalWeightEntityRepository.DeleteAnimalWeightEntity(DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity)">
            <summary>
            Deletes the specified <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalWeightEntity"/> to delete from the database.</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.CalvingEntityRepository.CalvingEntityFactory">
            <summary>
            Factory responsible for creating instances of the CalvingEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CalvingEntityRepository.CalvingEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.CalvingEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.CalvingEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.CalvingEntityRepository.CalvingEntityRepository">
            <summary>
            Repository responsible for handling CalvingEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CalvingEntityRepository.CalvingEntityRepository.GetCalvingEntityByCalfAnimalNumber(System.Int64)">
            <summary>
            Gets a single <see href="CalvingEntity"/> from the database, using the specified <paramref name="calfAnimalNumber"/>.
            </summary>
            <param name="calfAnimalNumber">The calf animal of the entity to get from the data</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.CalvingEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CalvingEntityRepository.CalvingEntityRepository.GetCalvingEntityById(System.Int64)">
            <summary>
            Gets a single <see href="CalvingEntity"/> from the database, using the specified <paramref name="calvingId"/>.
            </summary>
            <param name="calvingId">Id of the entity to get from the data</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.CalvingEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CalvingEntityRepository.CalvingEntityRepository.FindCalvingEntitiesByCalvingNumber(System.Int64)">
            <summary>
            Gets a collection <see href="CalvingEntity"/> from the database, using the specified <paramref name="calvingNumber"/>.
            </summary>
            <param name="calvingNumber"> calving number of the entity to get from the database.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.CalvingEntity"/> business entities.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CalvingEntityRepository.CalvingEntityRepository.GetCalvingEntityByCalfAnimalId(System.Int64,System.Int64)">
            <summary>
            Gets a single <see href="CalvingEntity"/> from the database, using the specified <paramref name="calfAnimalId"/> and <paramref name="calvingId"/>.
            </summary>
            <param name="calfAnimalId">Id of the born animal.</param>
            <param name="calvingId">Id of the entity to get from the data</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.CalvingEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CalvingEntityRepository.CalvingEntityRepository.FindCalvingEntitiesByHerdNumber(System.Int64,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Gets a collection <see href="CalvingEntity"/> from the database, using the specified <paramref name="herdNumber"/>.
            </summary>
            <param name="herdNumber">herd number of the entity to get from the data</param>
            <param name="animalTypeCode">AnimalType code of the entity to get from the data</param>
            <param name="fromDate">Start date of period that Calvings lies within.</param>
            <param name="toDate">End date of period that Calvings lies within.</param>
            <param name="requestedCount">Number of calvings to return. If null, all calvings are returned for the specified <paramref name="herdNumber"/></param>
            <param name="latestCalvingsInHerd"> </param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.CalvingEntity"/> business entities.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CalvingEntityRepository.CalvingEntityRepository.FindCalvingEntitiesByCowAnimalNumber(System.Int64,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Gets a collection <see href="CalvingEntity"/> from the database, using the specified <paramref name="cowAnimalNumber"/>.
            </summary>
            <param name="cowAnimalNumber"> cow animal number of the entity to get from the data</param>
            <param name="fromDate">Start date of period that Calvings lies within.</param>
            <param name="toDate">End date of period that Calvings lies within.</param>
            <param name="requestedCount">Number of calvings to return. If null, all calvings are returned for the specified <paramref name="cowAnimalNumber"/></param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.CalvingEntity"/> business entities.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CalvingEntityRepository.CalvingEntityRepository.RegisterCalving(System.Int64,System.Int64,System.Int64,System.DateTime,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalSizeEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.CalvingProgressEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.GenderEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.CalvingOutcomeEntity,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int64},System.String,System.String,System.Int64@)">
            <summary>
            Register a calving in the data
            </summary>
            <param name="herdId">The technical Id of the herd.</param>
            <param name="herdNumber">Number of the herd</param>
            <param name="cowAnimalNumber">Animal number of the mother to the calf.</param>
            <param name="calvingDate">Date of calving.</param>
            <param name="animalType">Type of animal.</param>
            <param name="size">Size of calf.</param>
            <param name="progress">Progress/Course of calving</param>
            <param name="gender">Gender of the calf.</param>
            <param name="outCome">Outcome/condition of the calf.</param>
            <param name="price">Price of the calf.</param>
            <param name="weight">Weight of the calf.</param>
            <param name="calfHerdNumber">Identification number of the calf (last 5 digits)</param>
            <param name="name">Name of calf.</param>
            <param name="shortName">Shortname of the calf.</param>
            <param name="calfAnimalId">Returns the id of born animal. To be used in combination with the calving entity id when reading the newly created entity.</param>
            <returns>The id of the newly registered calving.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CalvingEntityRepository.CalvingEntityRepository.UpdateCalvingEntity(DLBR.DCF.KDB.BusinessEntities.CalvingEntity,System.String[])">
            <summary>
            Updates the specified <paramref name="entity"/> in the data
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.CalvingEntity"/> to insert.</param>
            <param name="warningFlags"></param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CalvingEntityRepository.CalvingEntityRepository.DeleteCalvingEntity(DLBR.DCF.KDB.BusinessEntities.CalvingEntity)">
            <summary>
            Deletes the specified <paramref name="entity"/> in the data
            </summary>
            <param name="entity">CalvingEntity to delete from the data</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.ClinicalRecordingEntityRepository.ClinicalRecordingEntityFactory">
            <summary>
            Factory responsible for creating instances of the ClinicalRecordingEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ClinicalRecordingEntityRepository.ClinicalRecordingEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.ClinicalRecordingEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.ClinicalRecordingEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.ClinicalRecordingEntityRepository.ClinicalRecordingEntityRepository">
            <summary>
            Repository responsible for handling ClinicalRecordingEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ClinicalRecordingEntityRepository.ClinicalRecordingEntityRepository.GetClinicalRecordingEntityById(System.Int64)">
            <summary>
            Gets a single <see href="ClinicalRecordingEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.ClinicalRecordingEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ClinicalRecordingEntityRepository.ClinicalRecordingEntityRepository.FindClinicalRecordingEntitiesByAnimalNumber(System.Int64,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all ClinicalRecordingEntities in the database that matches the specified parameters.
            </summary>
            <param name="animalNumber"> AnimalNumber to use when finding entities.</param>
            <param name="clinicalParameterCode"> The code of the ClinicalParameter. If set only ClinicalRecordings with specified value is returned. If null, all ClinicalRecordings matching the other criteria´s are returned.</param>
            <param name="fromDate">Start date of period that ClinicalRecordings lies within.</param>
            <param name="toDate">End date of period that ClinicalRecordings lies within.</param>
            <param name="requestedCount">If set only specified number of ClinicalRecordings is returned in decending order.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.ClinicalRecordingEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ClinicalRecordingEntityRepository.ClinicalRecordingEntityRepository.FindClinicalRecordingEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.AdvisorEntity,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
             <summary>
             Finds all ClinicalRecordingEntities in the database that matches the specified parameters.
             </summary>
            <param name="herdNumber">HerdNumber to use when finding entities.</param>
             <param name="animalType">Type of animal to use when finding entities.</param>
             <param name="advisor">The advisor responsible for the ClinicalRecording. If set only ClinicalRecordings with specified value is returned. If null, all ClinicalRecordings matching the other criteria´s are returned.</param>
             <param name="clinicalParameterCode"> The code of the ClinicalParameter. If set only ClinicalRecordings with specified value is returned. If null, all ClinicalRecordings matching the other criteria´s are returned.</param>
             <param name="fromDate">Start date of period that ClinicalRecordings lies within.</param>
             <param name="toDate">End date of period that ClinicalRecordings lies within.</param>
             <param name="requestedCount">If set only specified number of ClinicalRecordings is returned in decending order.</param>
             <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.ClinicalRecordingEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ClinicalRecordingEntityRepository.ClinicalRecordingEntityRepository.RegisterClinicalRecordingEntity(System.Int64,System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.AdvisorEntity,System.DateTime,System.Int32,System.Nullable{System.Single},System.String)">
            <summary>
            Register a ClinicalRecording in the database.
            </summary>
            <param name="animalNumber">The number of the animal the ClinicalRecording relates to.</param>
            <param name="herdNumber">The number of the herd to which the animal belongs to.</param>
            <param name="animalType">Type of animal to use when registering the entity.</param>
            <param name="advisor">The advisor responsible for the ClinicalRecording.</param>
            <param name="date">The date of ClinicalRecording.</param>
            <param name="clinicalParameterCode">The code of the ClinicalParameter.</param>
            <param name="numericValue">The numeric value of the ClinicalRecording, to set if the type of ClinicalParameter is numeric.</param>
            <param name="stringValue">The string value of the ClinicalRecording, to set if the type of ClinicalParameter is a string.</param>
            <returns>The id of the newly registered <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ClinicalParameterEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ClinicalRecordingEntityRepository.ClinicalRecordingEntityRepository.UpdateClinicalRecordingEntity(System.Int64,System.Int64,System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.AdvisorEntity,System.DateTime,System.Int32,System.Nullable{System.Single},System.String,System.DateTime)">
            <summary>
            Updates a ClinicalRecording in the database.
            </summary>
            <param name="clinicalRecordingId">Technical id of the clinicalRecordingEntity to update.</param>
            <param name="animalNumber">The number of the animal the ClinicalRecording relates to.</param>
            <param name="herdNumber">The number of the herd to which the animal belongs to.</param>
            <param name="animalType">Type of animal to use when updating the entity.</param>
            <param name="advisor">The advisor responsible for the ClinicalRecording.</param>
            <param name="date">The date of ClinicalRecording.</param>
            <param name="clinicalParameterCode">The code of the ClinicalParameter.</param>
            <param name="numericValue">The numeric value of the ClinicalRecording, to set if the type of ClinicalParameter is numeric.</param>
            <param name="stringValue">The string value of the ClinicalRecording, to set if the type of ClinicalParameter is a string.</param>
            <param name="lastUpdate">Time stamp of the entity.</param>
            <returns>The newly updated <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ClinicalParameterEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ClinicalRecordingEntityRepository.ClinicalRecordingEntityRepository.DeleteClinicalRecordingEntity(System.Int64,System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.AdvisorEntity,System.DateTime,System.Int32,System.DateTime)">
            <summary>
            Deletes a ClinicalRecording in the database.
            </summary>
            <param name="clinicalRecordingId">Technical id of the clinicalRecordingEntity to delete.</param>
            <param name="herdNumber">The number of the herd to which the animal belongs to.</param>
            <param name="animalType">Type of animal to use when deleting the entity.</param>
            <param name="advisor">The advisor responsible for the ClinicalRecording.</param>
            <param name="date">The date of ClinicalRecording.</param>
            <param name="clinicalParameterCode">The code of the ClinicalParameter.</param>
            <param name="lastUpdate">Time stamp of the entity.</param>
            <returns>The newly updated <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ClinicalParameterEntity"/>.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.CprInfoEntityRepository.CprInfoEntityFactory">
            <summary>
            Factory responsible for creating instances of the CprInfoEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CprInfoEntityRepository.CprInfoEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.CprInfoEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.CprInfoEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.CprInfoEntityRepository.CprInfoEntityRepository">
            <summary>
            Repository responsible for handling CprInfoEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CprInfoEntityRepository.CprInfoEntityRepository.GetCprInfoEntityByCprNumber(System.Int64)">
            <summary>
            gets a single <see href="CprInfoEntity"/> from the database, using the specified <paramref name="cprNumber"/>.
            </summary>
            <param name="cprNumber">Cpr number of the entity to get from the database.</param>
            <returns>a <see cref="T:DLBR.DCF.KDB.BusinessEntities.CprInfoEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CprInfoEntityRepository.CprInfoEntityRepository.FindCprInfoEntitiesByCprNumbers(System.Collections.Generic.List{System.Int64})">
            <summary>
            Finds all CprInfoEntity in the database that matches the Cpr numbers in the specified list <paramref name="cprNumbers"/>
            </summary>
            <param name="cprNumbers">A list of Cpr numbers to use when finding entities.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.CprInfoEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CprInfoEntityRepository.CprInfoEntityRepository.FindUpdatedCprInfoEntitiesByDate(System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Finds all CprInfoEntity in the database that are updated since the specified <paramref name="lastUpdateDate"/>
            </summary>
            <param name="lastUpdateDate">The date to use when finding entities.</param>
            <param name="dateTo"></param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.CprInfoEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CprInfoEntityRepository.CprInfoEntityRepository.UpdateCprInfoEntity(DLBR.DCF.KDB.BusinessEntities.CprInfoEntity)">
            <summary>
            Updates the specified <paramref name="entity"/> in the database.
            Observe that this operation is only legal test environment
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.CprInfoEntity"/> to update.</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.CullingEntityRepository.CullingEntityFactory">
            <summary>
            Factory responsible for creating instances of the CullingEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CullingEntityRepository.CullingEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.CullingEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.CullingEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.CullingEntityRepository.CullingEntityRepository">
            <summary>
            Repository responsible for handling CullingEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CullingEntityRepository.CullingEntityRepository.RegisterCulling(System.Int64,System.Int64,System.DateTime,System.Int16,System.Nullable{System.Int16},System.Nullable{System.Int16})">
            <summary>
            Register a Culling in the database.
            </summary>
            <param name="herdId">The technical herd id</param>
            <param name="animalNumber">The animal number</param>
            <param name="date">The date of culling</param>
            <param name="cullingCode">The code for culling</param>
            <param name="causeCode1">Cause code 1 for culling</param>
            <param name="causeCode2">Cause code 2 for culling</param>
            <returns>A technical Culling id </returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CullingEntityRepository.CullingEntityRepository.UpdateCulling(System.Int64,System.Int64,System.Int64,System.DateTime,System.Int16,System.Nullable{System.Int16},System.Nullable{System.Int16},System.DateTime)">
            <summary>
            Updates the specified Culling in the database
            </summary>
            <param name="cullingId">The technical Culling id for update</param>
            <param name="herdId">The technical herd id</param>
            <param name="animalNumber">The animal number</param>
            <param name="date">The date of culling</param>
            <param name="cullingCode">The code for culling</param>
            <param name="causeCode1">Cause code 1 for culling</param>
            <param name="causeCode2">Cause code 2 for culling</param>
            <param name="lastUpdate">Date of last update</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CullingEntityRepository.CullingEntityRepository.DeleteCulling(System.Int64,System.Int64,System.Int64,System.DateTime,System.Int16,System.Nullable{System.Int16},System.Nullable{System.Int16},System.DateTime)">
            <summary>
            Deletes the specified Culling in the database
            </summary>
            <param name="cullingId">The technical Culling id for delete</param>
            <param name="herdId">The technical herd id</param>
            <param name="animalNumber">The animal number</param>
            <param name="date">The date of culling</param>
            <param name="cullingCode">The code for culling</param>
            <param name="causeCode1">Cause code 1 for culling</param>
            <param name="causeCode2">Cause code 2 for culling</param>
            <param name="lastUpdate">Date of last update</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CullingEntityRepository.CullingEntityRepository.GetCullingEntityById(System.Int64)">
            <summary>
            Get a Culling from the database requested by the technical database Id
            </summary>
            <param name="cullingId">The technical Culling Id </param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CullingEntityRepository.CullingEntityRepository.FindCullingEntitiesByAnimalNumber(System.Int64,System.Nullable{System.Int16},System.Nullable{System.Int32})">
            <summary>
            Finds all Culling Entities in the database that matches the specified <paramref name="animalNumber"/> and <paramref name="cullingCode"/>
            </summary>
            <param name="animalNumber">Animal number to get from the database.</param>
            <param name="cullingCode">If set only specified culling codes returns</param>
            <param name="requestedCount">If set only specified number of Cullings are returned in decending order.</param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CullingEntityRepository.CullingEntityRepository.FindCullingEntitiesByHerdNumber(System.Int64,System.Int16,System.Nullable{System.Int16},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all cullings in the database that matches the specified <paramref name="herdNumber"/> and 
            <paramref name="animalTypeCode"/>
            </summary>
            <param name="herdNumber">HerdNumber to get from the database.</param>
            <param name="animalTypeCode">AnimalType Code to get from the database.</param>
            <param name="cullingCode">If set only specified culling codes returns</param>
            <param name="fromDate">Start date of period that Cullings lies within.</param>
            <param name="toDate">End date of period that Cullings lies within.</param>
            <param name="requestedCount">If set only specified number of Cullings is returned in decending order.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.CullingEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.CvrInfoEntityRepository.CvrInfoEntityFactory">
            <summary>
            Factory responsible for creating instances of the CvrInfoEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CvrInfoEntityRepository.CvrInfoEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.CvrInfoEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.CvrInfoEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.CvrInfoEntityRepository.CvrInfoEntityRepository">
            <summary>
            Repository responsible for handling CvrInfoEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CvrInfoEntityRepository.CvrInfoEntityRepository.GetCvrInfoEntityByCvrNumber(System.Int64)">
            <summary>
            gets a single <see href="CvrInfoEntity"/> from the database, using the specified <paramref name="cvrNumber"/>.
            </summary>
            <param name="cvrNumber">Cvr number of the entity to get from the database.</param>
            <returns>a <see cref="T:DLBR.DCF.KDB.BusinessEntities.CvrInfoEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CvrInfoEntityRepository.CvrInfoEntityRepository.FindCvrInfoEntitiesByCvrNumbers(System.Collections.Generic.List{System.Int64})">
            <summary>
            Finds all CvrInfoEntity in the database that matches the Cvr numbers in the specified list <paramref name="cvrNumbers"/>
            </summary>
            <param name="cvrNumbers">A list of Cvr numbers to use when finding entities.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.CvrInfoEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CvrInfoEntityRepository.CvrInfoEntityRepository.FindUpdatedCvrInfoEntitiesByDate(System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Finds all CvrInfoEntity in the database that are updated since the specified <paramref name="lastUpdateDate"/>
            </summary>
            <param name="lastUpdateDate">The date to use when finding entities.</param>
            <param name="dateTo"></param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.CvrInfoEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.CvrInfoEntityRepository.CvrInfoEntityRepository.UpdateCvrInfoEntity(DLBR.DCF.KDB.BusinessEntities.CvrInfoEntity)">
            <summary>
            Updates the specified <paramref name="entity"/> in the database.
            Observe that this operation is only legal test environment
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.CvrInfoEntity"/> to update.</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.DryPeriodEntityRepository.DryPeriodEntityFactory">
            <summary>
            Factory responsible for creating instances of the DryPeriodEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DryPeriodEntityRepository.DryPeriodEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.DryPeriodEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.DryPeriodEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.DryPeriodEntityRepository.DryPeriodEntityRepository">
            <summary>
            Repository responsible for handling DryPeriodEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DryPeriodEntityRepository.DryPeriodEntityRepository.GetDryPeriodEntityById(System.Int64)">
            <summary>
            Get a Dry Period from the database requested by the technical database Id
            </summary>
            <param name="dryPeriodId">The technical Dry Period Id </param>
            <returns>A DryPeriod Entity</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DryPeriodEntityRepository.DryPeriodEntityRepository.FindDryPeriodEntitiesByAnimalNumber(System.Int64,System.Nullable{System.Int32})">
            <summary>
            Finds all DryPeriod Entities in the database that matches the specified <paramref name="animalNumber"/>
            </summary>
            <param name="animalNumber">AnimalNumber of the entity to get from the database.</param>
            <param name="requestedCount">If set only specified number of DryPeriods are returned in decending order.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.DryPeriodEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DryPeriodEntityRepository.DryPeriodEntityRepository.FindDryPeriodEntitiesByHerdNumber(System.Int64,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all DryPeriod Entities in the database that matches the specified <paramref name="herdNumber"/> ,
            <paramref name="animalTypeCode"/>
            </summary>
            <param name="herdNumber">HerdNumber of the entity to get from the database.</param>
            <param name="animalTypeCode">AnimalType Code of the entity to get from the database.</param>
            <param name="fromDate">Start date of period that DryPeriods lies within.</param>
            <param name="toDate">End date of period that DryPeriods lies within.</param>
            <param name="requestedCount">If set only specified number of DryPeriods is returned in decending order.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.DryPeriodEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DryPeriodEntityRepository.DryPeriodEntityRepository.FindLatestDryPeriodEntitiesByHerdNumber(System.Int64,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Finds latest DryPeriod Entity in the database that matches the specified <paramref name="herdNumber"/> ,
            <paramref name="animalTypeCode"/>
            </summary>
            <param name="herdNumber">HerdNumber of the entity to get from the database.</param>
            <param name="animalTypeCode">AnimalType Code of the entity to get from the database.</param>
            <param name="fromDate">Start date of period that DryPeriods lies within.</param>
            <param name="toDate">End date of period that DryPeriods lies within.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.DryPeriodEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DryPeriodEntityRepository.DryPeriodEntityRepository.RegisterDryPeriod(System.Int64,System.Int64,System.DateTime)">
            <summary>
            Register a Dry Period in the database.
            </summary>
            <param name="herdId">The technical herd id </param>
            <param name="animalId">The technical animal id</param>
            <param name="date">The date for the Dry period start</param>
            <returns>A technical DryPeriod id </returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DryPeriodEntityRepository.DryPeriodEntityRepository.UpdateDryPeriod(DLBR.DCF.KDB.BusinessEntities.DryPeriodEntity)">
            <summary>
            Updates the specified DryPeriod in the database
            </summary>
            <param name="entity">The updated entity.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.DryPeriodEntityRepository.DryPeriodEntityRepository.DeleteDryPeriod(DLBR.DCF.KDB.BusinessEntities.DryPeriodEntity)">
            <summary>
            Deletes the specified DryPeriod in the database
            </summary>
            <param name="entity">The entity to be deleted</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkCashOnDeliveryEntityFactory">
            <summary>
            Factory responsible for creating instances of the EarmarkCashOnDeliveryEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkCashOnDeliveryEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkCashOnDeliveryEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkCashOnDeliveryEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkMaxQuantityEntityFactory">
            <summary>
            Factory responsible for creating instances of the EarmarkMaxQuantityEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkMaxQuantityEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkMaxQuantityEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkMaxQuantityEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkOptionalTextEntityFactory">
            <summary>
            Factory responsible for creating instances of the EarmarkOptionalTextEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkOptionalTextEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOptionalTextEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOptionalTextEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkCombinationEntityFactory">
            <summary>
            Factory responsible for creating instances of the EarmarkCombinationEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkCombinationEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkCombinationEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkCombinationEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkOrderArticleFactory">
            <summary>
            Factory responsible for creating instances of EarmarkOrderEntity with a related EarmarkArticleEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkOrderArticleFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOrderEntity"/> and a related <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkArticleEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entities.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOrderEntity"/> with a related <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkArticleEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkOrderEntityFactory">
            <summary>
            Factory responsible for creating instances of the EarmarkOrderEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkOrderEntityFactory.Construct(System.Data.IDataReader,System.Boolean)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOrderEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <param name="expressDeliveryFlag">Specifies whether or not the query has an expressDelivery flag present</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOrderEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkOrderEntityRepository">
            <summary>
            Repository responsible for handling EarmarkOrderEntity business entities and related entities.
            </summary>
        </member>
        <member name="F:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkOrderEntityRepository.CustomOptionalTextCode">
            <summary>
            This is the code for the EarmarkOptionalTextType allowing custom text to be entered.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkOrderEntityRepository.SetEarmarkCashOnDeliveryEntity(System.Int64,System.Boolean,System.Nullable{System.DateTime})">
            <summary>
            Handles both register and update of cash on delivery status.
            Determines if a cash on delivery status already exist for specified <paramref name="chrNumber"/>.
            In that case it performs and update oherwise an insert is performed.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkOrderEntityRepository.FindRequestedCount(System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{DLBR.DCF.KDB.BusinessEntities.EarmarkOrderEntity})">
            <summary>
            Finds requested number of items in specified collection of EarmarkOrders. The orders are ordered by CHR number in ascending order and order date in descending order.
            </summary>
            <param name="requestedCount">Number of elements to return, if not specified <paramref name="orderEntities"/> are returned.</param>
            <param name="orderEntities">The collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOrderEntity"/> to take requested number of items from.</param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkOrderEntityRepository.UpdateEarmarkOptionalTextEntities(System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.EarmarkOptionalTextEntity},Oracle.DataAccess.Client.OracleConnection,System.Data.IDbTransaction)">
            <summary>
            This method updates a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOptionalTextEntity"/> in the database.
            Creation and deletion of <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOptionalTextEntity"/> is implicit handled by HND_MAERKER and HND_MAERKESERIE.
            When creating an order, two <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOptionalTextEntity"/> with the EarmarkOptionalTextType "2 - Blank linie" is always created if the earmarkcombination allows optionaltext. 
            When updating the EarmarkOrderEntity with another earmark combination not allowing optionaltext the two <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOptionalTextEntity"/> is deleted.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkOrderEntityRepository.FindDefaultEarmarkOptionalTextEntitiesById(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Data.IDbTransaction)">
            <summary>
            Finds the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOptionalTextEntity"/> created default by the RegisterEarmarkOrderEntity methods within current <paramref name="transaction"/> for an order with an earmark combination allowing optional text.
            </summary>
            <param name="earmarkSeriesId"></param>
            <param name="earmarkReplacementId"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkOrderEntityRepository.FindEarmarkOrderSupplementByChrNumber(System.Decimal)">
            <summary>
            Method used by unittest...!
            </summary>
            <param name="chrNumber"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkOrderEntityRepository.ValidateOptionalTextEntities(System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.EarmarkOptionalTextEntity})">
            <summary>
            Validates Earmark Optional Text entities
            </summary>
            <param name="earmarkOptionalTextEntities"></param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkOrderReplacementFactory">
            <summary>
            Factory responsible for creating instances of EarmarkOrderEntity with a related EarmarkReplacementEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkOrderReplacementFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOrderEntity"/> and a related <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkReplacementEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkReplacementEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkOrderSeriesFactory">
            <summary>
            Factory responsible for creating instances of EarmarkOrderEntity with a related EarmarkSeriesEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkOrderSeriesFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOrderEntity"/> and a related <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkSeriesEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entities.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkOrderEntity"/> with a related <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkSeriesEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkSeriesCombinationEntityFactory">
            <summary>
            Factory responsible for creating instances of the EarmarkSeriesCombinationEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.EarmarkOrderEntityRepository.EarmarkSeriesCombinationEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkSeriesCombinationEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.EarmarkSeriesCombinationEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.HerdEntityRepository.HerdEntityFactory">
            <summary>
            Factory responsible for creating instances of the HerdEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.HerdEntityRepository.HerdEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.HerdEntityRepository.HerdEntityRepository">
            <summary>
            Repository responsible for handling HerdEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.HerdEntityRepository.HerdEntityRepository.GetHerdEntityByHerdNumber(System.Int64,System.Int32)">
            <summary>
            Gets a single <see href="HerdEntity"/> from the database, using the specified <paramref name="herdNumber"/> and <paramref name="animalType"/>.
            </summary>
            <param name="herdNumber"> Herd number to use when getting the entity.</param>
            <param name="animalType"> Code of animal type to use when getting the entity.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.HerdEntityRepository.HerdEntityRepository.FindHerdEntitiesByHerdNumber(System.Int64)">
            <summary>
            Finds all <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdEntity"/> in the database that matches the specified <paramref name="herdNumber"/>
            </summary>
            <param name="herdNumber">Herd number to use when finding entities.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.HerdEntityRepository.HerdEntityRepository.FindUserHerdEntities(DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Boolean)">
            <summary>
            Finds all <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdEntity"/> in the database that, the user is authorized to see.
            </summary>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.HerdEntityRepository.HerdEntityRepository.FindHerdEntitiesByCHRNumber(System.Int64,System.Nullable{System.Boolean})">
            <summary>
            Finds all <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdEntity"/> in the database that matches the specified <paramref name="chrNumber"/> and 
            </summary>
            <param name="chrNumber"> CHR number to use when finding entities.</param>
            <param name="activeHerdFlag">Flag indicating whether herd is active or not.
            Null = active and not active herds, false = not active herds, true = active herds.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.HerdEntityRepository.HerdEntityRepository.GetHerdId(System.Int64,System.Int32)">
            <summary>
            Gets HerdId from the database, using the specified <paramref name="herdNumber"/> and <paramref name="animalTypeCode"/>
            </summary>
            <param name="herdNumber">Herd number.</param>
            <param name="animalTypeCode">AnimalType code</param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.HerdEntityRepository.HerdEntityRepository.GetHerdNumber(System.Int64)">
            <summary>
            Gets HerdNumber from the database, using the specified <paramref name="herdId"/>.
            </summary>
            <param name="herdId">Internal id of the herd.</param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.HerdEntityRepository.HerdEntityRepository.GetUserHerdCountByAnimalType(DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity)">
            <summary>
            Gets the number of herds of the specified <paramref name="animalType"/> the user are authorized to.
            </summary>
            <param name="animalType">The type of animal in the herd.</param>
            <returns>A Int32 datatype containing the number of herds the user is authorized to.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.HerdEntityRepository.HerdEntityRepository.GetAnimalCountByHerdNumber(System.Int64,System.Nullable{System.Int32})">
            <summary>
            Gets the number of active animals in the herd, using the specified <paramref name="herdNumber"/> and <paramref name="animalTypeCode"/>
            </summary>
            <param name="herdNumber">Herd number.</param>
            <param name="animalTypeCode">AnimalType code (If count for all animaltypes is wanted then input should be null)</param>
            <returns>A Int16 datatype containing the number of animals in the herd</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.HerdEntityRepository.HerdEntityRepository.FindHerdEntitiesByDistrictNumber(System.Int64)">
            <summary>
            Finds all <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdEntity"/> in the database that is included in the specified <paramref name="districtNumber"/>
            </summary>
            <param name="districtNumber">District number to use when finding entities.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.HerdHealthStatusRepository.HerdHealthStatusEntityRepository">
            <summary>
             Is composed in Busniss layer
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.HerdHealthStatusRepository.HerdHealthStatusEntityRepository.GetHerdHealthStatusEntityByVetSampleType(System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.VetSampleTypeResultEntity},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Decimal)">
            <summary>
            Gets a single <see href="HerdHealthStatusEntity"/>.
            </summary>
            <param name="VetSampleTypeResults">VetSampleTypeResult collection</param>
            <param name="levelDateFrom">can be null</param>
            <param name="levelDateTo">DatoTo. Can be null = gets the aktual aktive status</param>
            <param name="chrnumber">CHR Number</param>
            <returns>
            A <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdHealthStatusEntity"/> business entity.
            </returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.HerdRemarkEntityRepository.HerdRemarkEntityFactory">
            <summary>
            Factory responsible for creating instances of the HerdRemarkEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.HerdRemarkEntityRepository.HerdRemarkEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdRemarkEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdRemarkEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.HerdRemarkEntityRepository.HerdRemarkEntityRepository">
            <summary>
            Repository responsible for handling HerdRemarkEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.HerdRemarkEntityRepository.HerdRemarkEntityRepository.UpdateHerdRemark(System.Int64,System.Int32,System.Int32,System.String,System.Nullable{System.DateTime})">
            <summary>
            Updates(create, update and deletes) the herd remark using the specified parameters
            </summary>
            <param name="herdNumber">Herd number</param>
            <param name="animalTypeCode">Animaltype code</param>
            <param name="herdRemarkTypeCode">HerdRamarkType code</param>
            <param name="remark">The remark. If null, the remark is deleted</param>
            <param name="lastUpdate">The date of last update. Used in update situations</param>
            <returns>The updated HerdRemark entity</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.HerdRemarkEntityRepository.HerdRemarkEntityRepository.FindHerdRemarkEntitiesByHerdNumber(System.Int64,System.Int32)">
            <summary>
            Finds all HerdRemarkEntity in the database that matches the specified <paramref name="herdNumber"/>
            </summary>
            <param name="herdNumber">HerdNumber to find HerdRemarks by</param>
            <param name="animalTypeCode">Code of animal type to use when getting the entity.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.HerdRemarkEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.InseminationEntityRepository.InseminationEntityFactory">
            <summary>
            Factory responsible for creating instances of the InseminationEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminationEntityRepository.InseminationEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.InseminationEntityRepository.InseminationEntityRepository">
            <summary>
            Repository responsible for handling InseminationEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminationEntityRepository.InseminationEntityRepository.GetInseminationEntityById(System.Int64)">
            <summary>
            Gets a single <see href="InseminationEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the data</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminationEntityRepository.InseminationEntityRepository.FindInseminationEntitiesByAnimalNumber(System.Int64,System.Nullable{System.Int32})">
            <summary>
            Finds all InseminationEntities in the database that matches the specified <paramref name="animalNumber"/>
            </summary>
            <param name="animalNumber">AnimalNumber to use when finding entities.</param>
            <param name="requestedCount">Number of inseminations to return. If null, all inseminations are returned for the specified <paramref name="animalNumber"/></param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminationEntityRepository.InseminationEntityRepository.FindInseminationEntitiesByHerdNumber(System.Int64,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all InseminationEntities in the database that matches the specified <paramref name="herdNumber"/> and <paramref name="animalTypeCode"/>
            </summary>
            <param name="herdNumber">HerdNumber to use when finding entities.</param>
            <param name="animalTypeCode">AnimalType code.</param>
            <param name="fromDate">Start date of period inseminations lies within.</param>
            <param name="toDate">End date of period inseminations lies within.</param>
            <param name="requestedCount">Number of inseminations to return. If null, all inseminations are returned for the specified <paramref name="herdNumber"/></param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationEntity"/>. If <paramref name="fromDate"/> and <paramref name="toDate"/> and <paramref name="requestedCount"/> is null then all inseminations for all active animals in specified herd is returned.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminationEntityRepository.InseminationEntityRepository.RegisterInsemination(System.Int64,System.Int64,System.DateTime,System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationProductEntity,System.Nullable{System.Int32})">
            <summary>
            Register a new <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationEntity"/> in the data
            </summary>
            <param name="animalNumber">The animal that was inseminated.</param>
            <param name="herdId">Id of the herd to which the animal belongs.</param>
            <param name="date">The date of the insemination.</param>
            <param name="bullHerdbookNumber">The bull whose seamon was used.</param>
            <param name="inseminationProduct">The product used for insemination.</param>
            <param name="inseminationNumber">The insemination number.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminationEntityRepository.InseminationEntityRepository.UpdateInsemination(DLBR.DCF.KDB.BusinessEntities.InseminationEntity)">
            <summary>
            Updates the specified <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationEntity"/> in the data
            </summary>
            <param name="entity">The entity to update.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminationEntityRepository.InseminationEntityRepository.DeleteInsemination(DLBR.DCF.KDB.BusinessEntities.InseminationEntity)">
            <summary>
            Deletes the specified <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationEntity"/> in the database
            </summary>
            <param name="entity">The entity to delete.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminationEntityRepository.InseminationEntityRepository.CalculateInBreeding(System.Nullable{System.Int64},DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Int64,System.Int64)">
            <summary>
            Calculates values regarding InBreeding. 
            </summary>
            <param name="herdNumber">Number of the Herd. Used to find MaxInBreedingCoefficient. If value is not specified, the owner herd is used.</param>
            <param name="animalType">Animaltype eg. cattle</param>
            <param name="animalNumber">The number of the mother animal</param>
            <param name="bullHerdBookNumber">The number og the father animal</param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorRoundEntityFactory">
            <summary>
            Factory responsible for creating instances of the InseminatorRoundEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorRoundEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorRoundEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorRoundEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorTourplanEntityFactory">
            <summary>
            Factory responsible for creating instances of the InseminatorTourplanEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorTourplanEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorTourplanEntityRepository">
            <summary>
            Repository responsible for handling InseminatorTourplanEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorTourplanEntityRepository.GetInseminatorTourplanEntityById(System.Int64)">
            <summary>
            Gets a single <see href="InseminatorTourplanEntity"/> from the database, using the specified <paramref name="inseminatorTourplanId"/>.
            </summary>
            <param name="inseminatorTourplanId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorTourplanEntityRepository.FindInseminatorTourplanEntitiesByDistrictNumbers(System.Collections.ObjectModel.Collection{System.Int64})">
            <summary>
            Finds all InseminatorTourplanEntity in the database that matches the specified parameters.
            </summary>
            <param name="districtNumbers">Districtnumbers to find InseminatorTourplans by</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorTourplanEntityRepository.FindInseminatorTourplanEntitiesByHerdNumbers(System.Collections.ObjectModel.Collection{System.Int64},DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity)">
            <summary>
            Finds all InseminatorTourplanEntity in the database that matches the specified parameters.
            </summary>
            <param name="herdNumbers">Herd numbers to find InseminatorTourplans by</param>
            <param name="animalType">The type of animal in the specified herds. All herds must have the same type of animal.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorTourplanEntityRepository.FindInseminatorTourplanEntitiesByName(System.String,System.Boolean)">
            <summary>
            Finds all InseminatorTourplanEntity in the database that matches the specified parameters.
            </summary>
            <param name="name">Tourplan name or part of tourplan name to search for</param>
            <param name="matchWholeName">If set to true, the specific tourplan name is searched for, otherwise part of tourplan name is searched for</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorTourplanEntityRepository.RegisterInseminatorTourplanEntity(DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity)">
            <summary>
            Register an InseminatorTourplan in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity"/> to register.</param>
            <returns>The id of the newly registered <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorTourplanEntityRepository.UpdateInseminatorTourplanEntity(DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity)">
            <summary>
            Updates an InseminatorTourplan in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity"/> to update.</param>
            <returns>The id of the newly updated <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorTourplanEntityRepository.DeleteInseminatorTourplanEntity(DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity)">
            <summary>
            Deletes the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The entity to delete from the database.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorTourplanEntityRepository.UpdateInseminatorTourplanInfoEntity(System.Int64,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime})">
            <summary>
            Updates the basic information about the tourplan: name, description and districtnumber
            </summary>
            <param name="inseminatorTourplanId">The database id of the tourplan to update info on </param>
            <param name="name">The updated name</param>
            <param name="description">The updated description</param>
            <param name="districtNumber">The updated districtnumber</param>
            <param name="lastUpdate">Last Update</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorTourplanEntityRepository.AppendNumbers(System.Text.StringBuilder,Oracle.DataAccess.Client.OracleCommand,System.Collections.ObjectModel.Collection{System.Int64})">
            <summary>
            Runs through a collection of districnumbers and appends these to a stringbuilder
            </summary>
            <param name="commandBuilder">The stringbuilder to append to</param>
            <param name="command">The oraclecommand to add parameters to</param>
            <param name="numberCollection">The collection of district numbers to append</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorTourplanEntityRepository.AppendNumbers(System.Text.StringBuilder,Oracle.DataAccess.Client.OracleCommand,System.Collections.ObjectModel.Collection{System.Int64},System.Boolean)">
            <summary>
            Runs through a collection of districnumbers and appends these to a stringbuilder
            </summary>
            <param name="commandBuilder">The stringbuilder to append to</param>
            <param name="command">The oraclecommand to add parameters to</param>
            <param name="numberCollection">The collection of district numbers to append</param>
            <param name="addParameters">A boolean specifying if parameters are to be added to the <paramref name="command"/>.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorTourplanEntityRepository.FindInseminatorRoundsByTourplanId(System.Int64)">
            <summary>
            Finds all InseminatorRoundEntity in the database that matches the specified <paramref name="inseminatorTourplanId"/>
            </summary>
            <param name="inseminatorTourplanId">The id of the Inseminator tourplan to search by</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorRoundEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorTourplanEntityRepository.ConstructInseminatorTourplanDistrictResult(System.Data.IDataReader)">
            <summary>
            Construct an instance of <see cref="T:DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorTourplanEntityRepository.InseminatorTourplanDistrictResult"/>
            </summary>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorTourplanEntityRepository.SelectInseminatorTourplanEntitiesByDistrictNumbers(System.Collections.ObjectModel.Collection{System.Int64},System.Collections.Generic.List{DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorTourplanEntityRepository.InseminatorTourplanDistrictResult})">
            <summary>
            Given a list of <see cref="T:DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorTourplanEntityRepository.InseminatorTourplanDistrictResult"/> this methods returns the a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminatorTourplanEntity"/>, where
            each of these has herds assosiated with all of the specified district numbers.
            </summary>
            <param name="districtNumbers">A collection of district numbers that the result must match.</param>
            <param name="inseminatorTourplanResultList">A collection of <see cref="T:DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorTourplanEntityRepository.InseminatorTourplanDistrictResult"/> that must be matched against the <paramref name="districtNumbers"/>.</param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.InseminatorTourplanEntityRepository.InseminatorTourplanEntityRepository.InseminatorTourplanDistrictResult">
            <summary>
            Definition of a tour plan result. To be used for internal data manipulation.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.InternalAnimalIdentifierEntityRepository.InternalAnimalIdentifierEntityFactory">
            <summary>
            Factory responsible for creating instances of the InternalAnimalIdentifierEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InternalAnimalIdentifierEntityRepository.InternalAnimalIdentifierEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.InternalAnimalIdentifierEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.InternalAnimalIdentifierEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.InternalAnimalIdentifierEntityRepository.InternalAnimalIdentifierEntityRepository">
            <summary>
            Repository responsible for handling InternalAnimalIdentifierEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InternalAnimalIdentifierEntityRepository.InternalAnimalIdentifierEntityRepository.GetInternalAnimalIdentifierEntityById(System.Int64)">
            <summary>
            Gets a single <see href="InternalAnimalIdentifierEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.InternalAnimalIdentifierEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InternalAnimalIdentifierEntityRepository.InternalAnimalIdentifierEntityRepository.FindInternalAnimalIdentifierEntitiesByAnimalNumber(System.Int64,System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.InternalAnimalIdentifierTypeEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Finds all InternalAnimalIdentifierEntity in the database that matches the specified criteria.
            </summary>
            <param name="animalNumber"></param>
            <param name="herdNumber"></param>
            <param name="animalType"></param>
            <param name="identifierType"></param>
            <param name="validFrom"></param>
            <param name="validTo"></param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.InternalAnimalIdentifierEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InternalAnimalIdentifierEntityRepository.InternalAnimalIdentifierEntityRepository.FindInternalAnimalIdentifierEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.InternalAnimalIdentifierTypeEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Finds all InternalAnimalIdentifierEntity in the database that matches the specified criteria.
            </summary>
            <param name="herdNumber"></param>
            <param name="animalType"></param>
            <param name="identifierType"></param>
            <param name="validFrom"></param>
            <param name="validTo"></param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.InternalAnimalIdentifierEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InternalAnimalIdentifierEntityRepository.InternalAnimalIdentifierEntityRepository.RegisterInternalAnimalIdentifierEntity(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Int64,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.InternalAnimalIdentifierTypeEntity)">
            <summary>
            Registers an InternalAnimalIdentifierEntity in the database.
            </summary>
            <param name="herdNumber">The number of the herd to which the animal belongs to.</param>
            <param name="animalType">The type of animal.</param>
            <param name="animalNumber">The number of the animal the internal animal identifier relates to.</param>
            <param name="dateFrom">The start date of the identifiers valid period.</param>
            <param name="dateTo">The start date of the identifiers valid period.</param>
            <param name="identifier">The actual identifier value.</param>
            <param name="identifierType">The type of identifier.</param>
            <returns>The id of the newly registered <see cref="T:DLBR.DCF.KDB.BusinessEntities.InternalAnimalIdentifierEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InternalAnimalIdentifierEntityRepository.InternalAnimalIdentifierEntityRepository.UpdateInternalAnimalIdentifierEntity(DLBR.DCF.KDB.BusinessEntities.InternalAnimalIdentifierEntity)">
            <summary>
            Updates the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.InternalAnimalIdentifierEntity"/> to insert.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InternalAnimalIdentifierEntityRepository.InternalAnimalIdentifierEntityRepository.DeleteInternalAnimalIdentifierEntity(DLBR.DCF.KDB.BusinessEntities.InternalAnimalIdentifierEntity)">
            <summary>
            Deletes the specified InternalAnimalIdentifierEntity in the database.
            </summary>
            <param name="entity">The entity to delete from the database.</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.KeyFigureEntityRepository.KeyFigureEntityFactory">
            <summary>
            Factory responsible for creating instances of the KeyFigureEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.KeyFigureEntityRepository.KeyFigureEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.KeyFigureEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.KeyFigureEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.KeyFigureEntityRepository.KeyFigureEntityRepository">
            <summary>
            Repository responsible for handling KeyFigureEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.KeyFigureEntityRepository.KeyFigureEntityRepository.FindKeyFigureEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.DateTime,System.DateTime,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.KeyFigureTypeEntity})">
            <summary>
            Finds all KeyFigureEntities in the database that matches the specified parameters.
            </summary>
            <param name="herdNumber">The herd number to get the entities for.</param>
            <param name="animalType">Type of animal in the specified <paramref name="herdNumber"/></param>
            <param name="fromDate"> Start date of period that key figures lies within. </param>
            <param name="toDate"> End date of periode that key figures lies within.</param>
            <param name="keyFigureTypes">Types of key figures to return.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.KeyFigureEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.ManagementUnitEntityRepository.ManagementUnitEntityFactory">
            <summary>
            Factory responsible for creating instances of the ManagementUnitEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ManagementUnitEntityRepository.ManagementUnitEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.ManagementUnitEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.ManagementUnitEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.MatingSchemeEntityRepository.MatingSchemeEntityFactory">
            <summary>
            Factory responsible for creating instances of the MatingSchemeEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.MatingSchemeEntityRepository.MatingSchemeEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.MatingSchemeEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.MatingSchemeEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.MatingSchemeEntityRepository.MatingSchemeEntityRepository">
            <summary>
            Repository responsible for handling MatingSchemeEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.MatingSchemeEntityRepository.MatingSchemeEntityRepository.FindMatingSchemeEntitiesByAnimalNumber(System.Int64,System.Int64,System.Nullable{System.Int32})">
            <summary>
            Finds all <see href="MatingSchemeEntity"/> from the database, using the specified <paramref name="herdNumber"/> and <paramref name="animalNumber"/>.
            </summary>
            <param name="herdNumber">Herd number of the entity to get from the database.</param>
            <param name="animalNumber">Animal number of the entity to get from the database.</param>
            <param name="requestedCount">If set only specified number of MatingSchemeEntities is returned in decending order of SelectionNumber.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.MatingSchemeEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.MatingSchemeEntityRepository.MatingSchemeEntityRepository.FindMatingSchemeEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.Int32})">
            <summary>
            Finds all MatingSchemeEntities in the database that matches the specified <paramref name="herdNumber"/>
            </summary>
            <param name="herdNumber">Herd number of the entity to get from the database.</param>
            <param name="animalType">Type of animal to use when finding entities.</param>
            <param name="requestedCount">If set only specified number of MatingSchemeEntities per animal is returned in decending order of SelectionNumber.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.MatingSchemeEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.MedicationEntityRepository.MedicationEntityFactory">
            <summary>
            Factory responsible for creating instances of the MedicationEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.MedicationEntityRepository.MedicationEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.MedicationEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.MedicationEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.MedicationEntityRepository.MedicationEntityRepository">
            <summary>
            Repository responsible for handling MedicationEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.MedicationEntityRepository.MedicationEntityRepository.GetMedicationEntityById(System.Int64,System.Boolean)">
            <summary>
            Finds all MedicationEntity in the database that matches the specified parameters.
            </summary>
            <param name="entityId">Id to use when finding entities.</param>
            <param name="isAnimalMedication">Whether the MedicationEntity is a animal or herd medication. True = animal, false = herd.</param>
            <returns> A <see cref="T:DLBR.DCF.KDB.BusinessEntities.MedicationEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.MedicationEntityRepository.MedicationEntityRepository.FindMedicationEntitiesById(System.Int64,System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity)">
            <summary>
            Finds all MedicationEntity in the database that matches the specified parameters.
            </summary>
            <param name="entityId">Id to use when finding entities.</param>
            <param name="herdNumber">Herd number to use when finding entities.</param>
            <param name="animalType">The type of animal to use when finding entities.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.MedicationEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.MedicationEntityRepository.MedicationEntityRepository.FindMedicationEntitiesByAnimalNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.AdvisorEntity,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{System.Int32})">
            <summary>
            Finds all MedicationEntity in the database that matches the specified parameters.
            </summary>
            <param name="animalNumber">AnimalNumber to use when finding entities.</param>
            <param name="advisor">The advisor responsible for the Medication recording. If set only Medications with specified value is returned. If null, all Medications matching the other criteria´s are returned.</param>
            <param name="diseaseTypeCode"> The code of the DiseaseType. If set only Medications with specified value is returned. If null, all Medications matching the other criteria´s are returned.</param>
            <param name="fromDate">Start date of period that Medications lies within.</param>
            <param name="toDate">End date of period that Medications lies within.</param>
            <param name="drugId">The id of the drug. If set only Medications where specified drug is used is returned. if null all Medications matching the other criteria´s are returned.</param>
            <param name="requestedCount">If set only specified number of Medications is returned in decending order.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.MedicationEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.MedicationEntityRepository.MedicationEntityRepository.FindMedicationEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.AdvisorEntity,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Boolean)">
             <summary>
             Finds all MedicationEntity in the database that matches the specified parameters.
             </summary>
            <param name="herdNumber">HerdNumber to use when finding entities.</param>
            <param name="animalType">Type of animal to use when finding entities.</param>
            <param name="advisor">The advisor responsible for the Medication recording. If set only Medications with specified value is returned. If null, all Medications matching the other criteria´s are returned.</param>
            <param name="diseaseTypeCode"> The code of the DiseaseType. If set only Medications with specified value is returned. If null, all Medications matching the other criteria´s are returned.</param>
            <param name="fromDate">Start date of period that Medications lies within.</param>
            <param name="toDate">End date of period that Medications lies within.</param>
            <param name="drugId">The id of the drug. If set only Medications where specified drug is used is returned. if null all Medications matching the other criteria´s are returned.</param>
            <param name="requestedCount">If set only specified number of Medications is returned in decending order.</param>
            <param name="lastUpdate">If set only medicationes newer than LastUpdate</param>
            <param name="activeOSR"></param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.MedicationEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.MedicationEntityRepository.MedicationEntityRepository.RegisterMedicationEntity(DLBR.DCF.KDB.BusinessEntities.AnimalHealthEntity,DLBR.DCF.KDB.BusinessEntities.AnimalGroupHealthEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.DrugUsageEntity,System.Int32,System.Decimal,DLBR.DCF.KDB.BusinessEntities.Classifications.DrugUnitEntity,System.Nullable{System.Int32},DLBR.DCF.KDB.BusinessEntities.Classifications.PrescriptionGroupEntity,System.Nullable{System.Decimal},DLBR.DCF.KDB.BusinessEntities.Classifications.MeatRetentionUnitEntity,System.Nullable{System.Decimal},DLBR.DCF.KDB.BusinessEntities.Classifications.MilkRetentionUnitEntity)">
            <summary>
            Register a Medication in the database.
            If AnimalHealth is not null and AnimalGroupHealth is null the medication relates to an animal. Vice versa the medication is considered as a medication on herd level.
             </summary>
            <param name="animalHealth"> A <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalHealthEntity"/> describing the animal and illness the medication is related to. If null then "animalGroupHealth must be set".</param>
            <param name="animalGroupHealth"> A <see cref="T:DLBR.DCF.KDB.BusinessEntities.AnimalGroupHealthEntity"/> describing the illness and possibly the animal group the medication is related to. If null then "animalHealth" emust be set.</param>
            <param name="drugUsage">The type of usage.</param>
            <param name="drugProductNumber">The product number of the drug.</param>
            <param name="dosage">The amount of the drug the medication covers.</param>
            <param name="drugUnit">The unit the dosage is in.</param>
            <param name="drugDispensing">Number of days the medication covers.</param>
            <param name="prescriptionGroup">The type of prescription group.</param>
            <param name="meatRetention">The value for retaining the meat.</param>
            <param name="meatRetentionUnit">The unit of the meat retention value.</param>
            <param name="milkRetention">The value for retaining milk.</param>
            <param name="milkRetentionUnit">The unit of the milk retention value.</param>
             <returns>The id of the newly registered <see cref="T:DLBR.DCF.KDB.BusinessEntities.MedicationEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.MedicationEntityRepository.MedicationEntityRepository.UpdateMedicationEntity(DLBR.DCF.KDB.BusinessEntities.MedicationEntity)">
            <summary>
            Updates the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.MedicationEntity"/> to update.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.MedicationEntityRepository.MedicationEntityRepository.DeleteMedicationEntity(DLBR.DCF.KDB.BusinessEntities.MedicationEntity)">
            <summary>
            Deletes the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity"> The <see cref="T:DLBR.DCF.KDB.BusinessEntities.MedicationEntity"/> to delete from the database.</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.MilkDeliveryEntityRepository.MilkDeliveryEntityFactory">
            <summary>
            Factory responsible for creating instances of the MilkDeliveryEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.MilkDeliveryEntityRepository.MilkDeliveryEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.MilkDeliveryEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.MilkDeliveryEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.MilkDeliveryEntityRepository.MilkDeliveryEntityRepository">
            <summary>
            Repository responsible for handling MilkDeliveryEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.MilkDeliveryEntityRepository.MilkDeliveryEntityRepository.FindMilkDeliveryEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.DateTime,System.DateTime)">
            <summary>
            Finds all MilkDeliveringEntities in the database that matches the specified parameters.
            </summary>
            <param name="herdNumber"> Herd number to use when finding entities.</param>
            <param name="animalType">Type of animal to use when finding entities.</param>
            <param name="fromDate">Start date of period that MilkDeliveries lies within.</param>
            <param name="toDate">End date of period that MilkDeliveries lies within.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.MilkRecordingEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.MilkQuotaEntityRepository.MilkQuotaEntityFactory">
            <summary>
            Factory responsible for creating instances of the MilkQuotaEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.MilkQuotaEntityRepository.MilkQuotaEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.MilkQuotaEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.MilkQuotaEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.MilkQuotaEntityRepository.MilkQuotaEntityRepository">
            <summary>
            Repository responsible for handling MilkQuotaEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.MilkQuotaEntityRepository.MilkQuotaEntityRepository.FindMilkQuotaEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.DateTime,System.DateTime,System.Nullable{System.Int32})">
            <summary>
            Finds MilkQuotaEntities in the database that matches the specified <paramref name="herdNumber"/>
            </summary>
            <param name="herdNumber">The herd number to get the entity for.</param>
            <param name="animalType">Type of animal in the specified <paramref name="herdNumber"/></param>
            <param name="fromDate">Start date of period that MilkQuota information lies within.</param>
            <param name="toDate">End date of period that MilkQuota information lies within.</param>
            <param name="requestedCount">If set, only specified number of MilkQuota information is returned in decending order.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.MilkQuotaEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.MilkRecordingEntityRepository.MilkRecordingEntityFactory">
            <summary>
            Factory responsible for creating instances of the MilkRecordingEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.MilkRecordingEntityRepository.MilkRecordingEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.MilkRecordingEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.MilkRecordingEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.MilkRecordingEntityRepository.MilkRecordingEntityRepository">
            <summary>
            Repository responsible for handling MilkRecordingEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.MilkRecordingEntityRepository.MilkRecordingEntityRepository.FindMilkRecordingEntitiesByAnimalNumber(System.Int64,System.Nullable{System.Int32})">
            <summary>
            Finds all MilkRecordingEntities in the database that matches the specified <paramref name="animalNumber"/>
            </summary>
            <param name="animalNumber"> Animal number to use when finding entities.</param>
            <param name="requestedCount">If set only specified number of MilkRecordings is returned in decending order.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.MilkRecordingEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.MilkRecordingEntityRepository.MilkRecordingEntityRepository.FindMilkRecordingEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all MilkRecordingEntities in the database that matches the specified <paramref name="herdNumber"/>
            </summary>
            <param name="herdNumber"> Animal number to use when finding entities.</param>
            <param name="animalType">Type of animal to use when finding entities.</param>
            <param name="fromDate">Start date of period that MilkRecordings lies within.</param>
            <param name="toDate">End date of period that MilkRecordings lies within.</param>
            <param name="requestedCount">If set only specified number of MilkRecordings is returned in decending order.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.MilkRecordingEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.NaturalServiceEntityRepository.NaturalServiceEntityFactory">
            <summary>
            Factory responsible for creating instances of the NaturalServiceEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.NaturalServiceEntityRepository.NaturalServiceEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.NaturalServiceEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.NaturalServiceEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.NaturalServiceEntityRepository.NaturalServiceEntityRepository">
            <summary>
            Repository responsible for handling NaturalServiceEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.NaturalServiceEntityRepository.NaturalServiceEntityRepository.RegisterNaturalServiceEntity(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Register a Natural Service in the database.
            </summary>
            <param name="herdNumber">Herdnumber </param>
            <param name="animalType">The type of animal, eg. cattle</param>
            <param name="animalNumber">Animal number of animal retrieving the Natural Service</param>
            <param name="bullNumber">Bull number of bull delivering the service</param>
            <param name="bullHerdBookNumber">Herdbook number of bull delivering the Natural Service</param>
            <param name="startDate">Start date of the Natural Service</param>
            <param name="endDate">End date of the Natural Service</param>
            <returns>The id of the newly registered <see cref="T:DLBR.DCF.KDB.BusinessEntities.NaturalServiceEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.NaturalServiceEntityRepository.NaturalServiceEntityRepository.DeleteNaturalServiceEntity(DLBR.DCF.KDB.BusinessEntities.NaturalServiceEntity)">
            <summary>
            Deletes the specified <see cref="T:DLBR.DCF.KDB.BusinessEntities.NaturalServiceEntity"/> in the database
            </summary>
            <param name="entity">The entity to delete.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.NaturalServiceEntityRepository.NaturalServiceEntityRepository.UpdateNaturalServiceEntity(DLBR.DCF.KDB.BusinessEntities.NaturalServiceEntity)">
            <summary>
            Updates the specified <see cref="T:DLBR.DCF.KDB.BusinessEntities.NaturalServiceEntity"/> in the database.
            </summary>
            <param name="entity">The entity to update.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.NaturalServiceEntityRepository.NaturalServiceEntityRepository.GetNaturalServiceEntityById(System.Int64)">
            <summary>
            Gets a single <see href="NaturalServiceEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.NaturalServiceEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.NaturalServiceEntityRepository.NaturalServiceEntityRepository.FindNaturalServiceEntitiesByAnimalNumber(System.Int64,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Finds all NaturalService Entities in the database that matches the specified <paramref name="animalNumber"/>
            </summary>
            <param name="animalNumber">AnimalNumber of the entity to get from the database.</param>
            <param name="requestedCount">If set, only the specified number of NaturalService's are returned in decending order.</param>
            <param name="dateFrom"></param>
            <param name="dateTo"></param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.NaturalServiceEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.NaturalServiceEntityRepository.NaturalServiceEntityRepository.FindNaturalServiceEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all NaturalService Entities in the database that matches the specified <paramref name="herdNumber"/> ,
            </summary>
            <param name="herdNumber">HerdNumber of the entity to get from the database.</param>
            <param name="animalType">&gt;The type of animal, eg. cattle</param>
            <param name="fromDate">Start date of period that the Natural Services lies within.</param>
            <param name="toDate">End date of period that the Natural Services lies within.</param>
            <param name="requestedCount">If set, only the specified number of NaturalService's are returned in decending order.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.NaturalServiceEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.PostingEntityRepository.PostingEntityFactory">
            <summary>
            Factory responsible for creating instances of the PostingEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.PostingEntityRepository.PostingEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.PostingEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.PostingEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.PostingEntityRepository.PostingEntityRepository">
            <summary>
            Repository responsible for handling PostingEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.PostingEntityRepository.PostingEntityRepository.GetPostingEntityById(System.Int64)">
            <summary>
            Gets a single <see href="PostingEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.PostingEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.PostingEntityRepository.PostingEntityRepository.FindPostingEntitiesByAnimalNumber(System.Int64,System.Nullable{System.Int32})">
            <summary>
            Finds all PostingEntity in the database that matches the specified <paramref name="animalNumber"/>
            </summary>
            <param name="animalNumber">AnimalNumber to use when finding entities.</param>
            <param name="requestedCount">If set only specified number of Postings is returned in decending order.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.PostingEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.PostingEntityRepository.PostingEntityRepository.FindPostingEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
             <summary>
             Finds all PostingEntity in the database that matches the specified parameters.
             </summary>
            <param name="herdNumber">HerdNumber to use when finding entities.</param>
             <param name="animalType">Type of animal to use when finding entities.</param>
             <param name="fromDate">Start date of period that Postings lies within.</param>
             <param name="toDate">End date of period that Postings lies within.</param>
             <param name="requestedCount">If set only specified number of Postings is returned in decending order.</param>
             <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.PostingEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.PostingEntityRepository.PostingEntityRepository.RegisterPostingEntity(System.Int64,System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.PostingTypeEntity,System.DateTime)">
            <summary>
            Register the specified Posting into the database.
            </summary>
            <param name="herdNumber">Herd Number Owner</param>
            <param name="herdNumberPosting">Herd Number Posting</param>
            <param name="animalType">Animal Type of HerdNumber and HerdNumberPosting</param>
            <param name="animalNumber">Animal Number</param>
            <param name="postingType">PostingType <see href="PostingTypeEntity"/></param>
            <param name="date">Last Changed Date</param>
            <returns>Id of Posting <see href="PostingEntity"/></returns>
            <returns>The id of the newly inserted <see cref="T:DLBR.DCF.KDB.BusinessEntities.PostingEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.PostingEntityRepository.PostingEntityRepository.UpdatePostingEntity(DLBR.DCF.KDB.BusinessEntities.PostingEntity)">
            <summary>
            Updates the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.PostingEntity"/> to update.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.PostingEntityRepository.PostingEntityRepository.DeletePostingEntity(DLBR.DCF.KDB.BusinessEntities.PostingEntity)">
            <summary>
            Deletes the specified PostingEntity identified by <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">Id of the entity to delete from the database.</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.PracticeEntityRepository.PracticeEntityFactory">
            <summary>
            Factory responsible for creating instances of the PracticeEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.PracticeEntityRepository.PracticeEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.PracticeEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.PracticeEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.PracticeEntityRepository.PracticeEntityRepository">
            <summary>
            Repository responsible for handling PracticeEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.PracticeEntityRepository.PracticeEntityRepository.GetHerdPractice(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity)">
            <summary>
            Gets the prefered vetenarian practice of the herd.
            </summary>
            <param name="herdNumber">The herd number</param>
            <param name="animalType">The animal type, making the herd number unique.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.PracticeEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.PregnancyCheckEntityRepository.PregnancyCheckEntityFactory">
            <summary>
            Factory responsible for creating instances of the PregnancyCheckEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.PregnancyCheckEntityRepository.PregnancyCheckEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.PregnancyCheckEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.PregnancyCheckEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.PregnancyCheckEntityRepository.PregnancyCheckEntityRepository">
            <summary>
            Repository responsible for handling PregnancyCheckEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.PregnancyCheckEntityRepository.PregnancyCheckEntityRepository.GetPregnancyCheckEntityById(System.Int64)">
            <summary>
            Gets a single <see href="PregnancyCheckEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.PregnancyCheckEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.PregnancyCheckEntityRepository.PregnancyCheckEntityRepository.FindPregnancyCheckEntitiesByAnimalNumber(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Finds all PregnancyCheckEntity in the database that matches the specified parameters.
            </summary>
            <param name="animalNumber">AnimalNumber to use when finding entities.</param>
            <param name="inseminationTreatmentCode">If set only pregnancy checks with specified value is returned. If null, all pregnancy checks are returned for the specified <paramref name="animalNumber"/></param>
            <param name="requestedCount">If set only specified number of pregnancy checks is returned in decending order.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.PregnancyCheckEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.PregnancyCheckEntityRepository.PregnancyCheckEntityRepository.FindPregnancyCheckEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Finds all PregnancyCheckEntity in the database that matches the specified parameters.
            </summary>
            <param name="herdNumber">HerdNumber to use when finding entities.</param>
            <param name="animalType">Type of animal to use when finding entities.</param>
            <param name="fromDate">Start date of period that pregnancy checks lies within.</param>
            <param name="toDate">End date of period that pregnancy checks lies within.</param>
            <param name="isPregnant">If set only pregnancy checks positive pregnancy is returned. If null, all pregnancy checks are returned for the specified <paramref name="herdNumber"/></param>
            <param name="requestedCount">If set only specified number of pregnancy checks is returned in decending order.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.PregnancyCheckEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.PregnancyCheckEntityRepository.PregnancyCheckEntityRepository.RegisterPregnancyCheckEntity(System.Int64,System.Int64,System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.DateTime,System.Int32)">
            <summary>
            Register a new <see cref="T:DLBR.DCF.KDB.BusinessEntities.PregnancyCheckEntity"/> in the database.
            </summary>
            <param name="animalNumber">The animal for which the pregnancy check was carried out for.</param>
            <param name="herdNumber">Number of the herd to which the animal belongs to.</param>
            <param name="herdId">Id of the herd to which the animal belongs to.</param>
            <param name="animalType">The type of animal.</param>
            <param name="date">The date of the pregnancy check.</param>
            <param name="inseminationTreatmentCode">The result of the pregnancy check in form of a InseminationTreatmentCode.</param>
            <returns>The id of the newly inserted <see cref="T:DLBR.DCF.KDB.BusinessEntities.PregnancyCheckEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.PregnancyCheckEntityRepository.PregnancyCheckEntityRepository.UpdatePregnancyCheckEntity(DLBR.DCF.KDB.BusinessEntities.PregnancyCheckEntity)">
            <summary>
            Updates the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.PregnancyCheckEntity"/> to update.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.PregnancyCheckEntityRepository.PregnancyCheckEntityRepository.DeletePregnancyCheckEntity(DLBR.DCF.KDB.BusinessEntities.PregnancyCheckEntity)">
            <summary>
            Deletes the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.PregnancyCheckEntity"/> to delete.</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.ReproductionStatusEntityRepository.ReproductionStatusEntityFactory">
            <summary>
            Factory responsible for creating instances of the ReproductionStatusEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ReproductionStatusEntityRepository.ReproductionStatusEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.ReproductionStatusEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.ReproductionStatusEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.ReproductionStatusEntityRepository.ReproductionStatusEntityRepository">
            <summary>
            Repository responsible for handling ReproductionStatusEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ReproductionStatusEntityRepository.ReproductionStatusEntityRepository.GetReproductionStatusEntityByAnimalNumber(System.Int64,System.Nullable{System.DateTime})">
            <summary>
            Gets a single <see href="ReproductionStatusEntity"/> from the database, using the specified <paramref name="animalNumber"/>.
            </summary>
            <param name="animalNumber"> animalNumber of the entity to get from the database.</param>
            <param name="date">The date to use to get the entity from the database. If set the ReproductionStatus of the animal that relates to the date i returned, if not set the actual ReproductionStatus of the animal is returned.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.ReproductionStatusEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.ReproductionStatusEntityRepository.ReproductionStatusEntityRepository.FindReproductionStatusEntitiesByHerdNumber(System.Int64,System.Int32,System.Nullable{System.DateTime})">
            <summary>
            Finds all ReproductionStatusEntity in the database that matches the specified <paramref name="herdNumber"/> and <paramref name="animalType"/>
            </summary>
            <param name="herdNumber"> herdNumber to use when finding entities.</param>
            <param name="animalType"> animalType code to use when finding entities.</param>
            <param name="date">The date to use to get entities from the database. If set the ReproductionStatus of each animal that relates to the date i returned, if not set the actual ReproductionStatus of each animal is returned.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.ReproductionStatusEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.SemenInventoryEntityRepository.SemenInventoryEntityFactory">
            <summary>
            Factory responsible for creating instances of the SemenInventoryEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.SemenInventoryEntityRepository.SemenInventoryEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.SemenStockEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.SemenStockEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.SemenInventoryEntityRepository.SemenInventoryEntityRepository">
            <summary>
            Repository responsible for handling SemenInventoryEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.SemenInventoryEntityRepository.SemenInventoryEntityRepository.RegisterSemenStockEntity(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationProductEntity,System.Int64,System.Nullable{System.DateTime},System.Nullable{System.Int64},DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            Register a SemenStock in the database.
            </summary>
            <param name="herdBookNumber">The herdbook number of the animal</param>
            <param name="inseminationProduct">The product type. Eg. conventional</param>
            <param name="bucketNumber">The number of the bucket</param>
            <param name="dateOfPortionDelivery">The date of portion delivery</param>
            <param name="reservedForHerdNumber">If the portion is reserved for a specific herdnumber</param>
            <param name="animalType">Type of animal to use when registering the entity with a ReservedForHerdNumber set.</param>
            <param name="spentPortions">Spent semen portions</param>
            <param name="wastedPortions">Wasted semen portions</param>
            <param name="correctedPortions">Corrected semen portions</param>
            <param name="transferredPortions">Transferred semen portions</param>
            <param name="price">Price</param>
            <returns>The id of the newly registered <see cref="T:DLBR.DCF.KDB.BusinessEntities.SemenStockEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.SemenInventoryEntityRepository.SemenInventoryEntityRepository.UpdateSemenStockEntity(DLBR.DCF.KDB.BusinessEntities.SemenStockEntity)">
            <summary>
            Updates the specified Semen stock entity in the database.
            </summary>
            <param name="entity">The Semen stock entity to update</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.SemenInventoryEntityRepository.SemenInventoryEntityRepository.FindSemenStocksByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationProductEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            Finds all SemenStock Entities in the database that matches the specified <paramref name="herdNumber"/> ,
            <paramref name="animalType"/>
            </summary>
            <param name="herdNumber">HerdNumber of the entity to get from the database.</param>
            <param name="animalType">AnimalType of the entity to get from the database.</param>
            <param name="inseminationProduct">Optional. Specific product type to get from the database </param>
            <param name="fromDate">Start date of period that Semen stocks lies within.</param>
            <param name="toDate">End date of period that Semen stocks lies within.</param>
            <param name="requestedCount">If set only specified number of Semen stocks is returned in decending order.</param>
            <param name="isStocked">If true only Semen stocks where ActualPortionQuantity is greater than 0 are returned. If false all Semen stocks reqardless of value of ActualPortionQuantity are returned.</param>
            <param name="isTransfer"></param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.SemenStockEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.SemenInventoryEntityRepository.SemenInventoryEntityRepository.FindSemenStocksByInseminatorNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationProductEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            Finds all SemenStock Entities in the database that matches the specified <paramref name="inseminatorNumber"/> 
            </summary>
            <param name="inseminatorNumber">Inseminator number of the entity to get from the database.</param>
            <param name="inseminationProduct">Optional. Specific product type to get from the database </param>
            <param name="fromDate">Start date of period that Semen stocks lies within.</param>
            <param name="toDate">End date of period that Semen stocks lies within.</param>
            <param name="requestedCount">If set only specified number of Semen stocks is returned in decending order.</param>
            <param name="isStocked">If true only Semen stocks where ActualPortionQuantity is greater than 0 are returned. If false all Semen stocks reqardless of value of ActualPortionQuantity are returned.</param>
            <param name="isTransfer"></param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.SemenStockEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.SemenInventoryEntityRepository.SemenInventoryEntityRepository.FindSemenStocksByHerdBookNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationProductEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            Finds all SemenStock Entities in the database that matches the specified <paramref name="herdBookNumber"/> 
            </summary>
            <param name="herdBookNumber">HerdBooknumber of the entity to get from the database.</param>
            <param name="inseminationProduct">Optional. Specific product type to get from the database </param>
            <param name="fromDate">Start date of period that Semen stocks lies within.</param>
            <param name="toDate">End date of period that Semen stocks lies within.</param>
            <param name="requestedCount">If set only specified number of Semen stocks is returned in decending order.</param>
            <param name="isStocked">If true only Semen stocks where ActualPortionQuantity is greater than 0 are returned. If false all Semen stocks reqardless of value of ActualPortionQuantity are returned.</param>
            <param name="isTransfer"></param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.SemenStockEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.SemenInventoryEntityRepository.SemenInventoryEntityRepository.GetSemenStockEntityById(System.Int64,System.Boolean)">
            <summary>
            Gets a single <see href="SemenStockEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <param name="isTransfer"></param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.SemenStockEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.SireEntityRepository.SireEntityFactory">
            <summary>
            Factory responsible for creating instances of the SemenInventoryEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.SireEntityRepository.SireEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.SireEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.SireEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.SireEntityRepository.SireEntityRepository">
            <summary>
            Repository responsible for handling SireEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.SireEntityRepository.SireEntityRepository.GetSireEntityByHerdBookNumber(System.Int64)">
            <summary>
            Finds the sire entity in the database that matches the specified <paramref name="herdBookNumber"/>.
            </summary>
            <param name="herdBookNumber">HerdBookNumber of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.SireEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.SireEntityRepository.SireEntityRepository.FindSireEntitiesByName(System.String,System.Nullable{System.Boolean})">
            <summary>
            Finds all sire entities in the database that matches the specified <paramref name="sireName"/>.
            </summary>
            <param name="sireName">The name, possible partial, of the sires to find.</param>
            <param name="stationBull">Flag, indicating if the bull's wanted is station bulls or not. If null is provided, both station bulls and 'not station bulls' is returned</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.SireEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.SubscriberContactInfoEntityRepository.SubscriberContactInfoEntityFactory">
            <summary>
            Factory responsible for creating instances of the SubscriberContactInfoEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.SubscriberContactInfoEntityRepository.SubscriberContactInfoEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.SubscriberContactInfoEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.SubscriberContactInfoEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.SubscriberContactInfoEntityRepository.SubscriberContactInfoEntityRepository">
            <summary>
            Repository responsible for handling SubscriberContactInfoEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.SubscriberContactInfoEntityRepository.SubscriberContactInfoEntityRepository.FindSubscriberContactInfoEntity(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Finds all SubscriberContactInfoEntity in the database that matches the specified <paramref name="Cprno"/> and <paramref name="Cvrno"/>
            </summary>
            <param name="Cprno">Nullable cprno to get contact list from the database.</param>
            <param name="Cvrno">Nullable cvrno to get contact list from the database.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.SubscriberContactInfoEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.SubscriberInvoiceEntityRepository.SubscriberInvoiceEntityFactory">
            <summary>
            Factory responsible for creating instances of the SubscriberInvoiceListEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.SubscriberInvoiceEntityRepository.SubscriberInvoiceEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.SubscriberInvoiceEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.SubscriberInvoiceEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.SubscriberInvoiceEntityRepository.SubscriberInvoiceEntityRepository">
            <summary>
            Repository responsible for handling SubscriberInvoiceListEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.SubscriberInvoiceEntityRepository.SubscriberInvoiceEntityRepository.FindSubscriberInvoiceListEntity_RYK(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Finds all SubscriberInvoiceListEntity in the database that matches the specified <paramref name="Cprno"/> and <paramref name="Cvrno"/>
            </summary>
            <param name="Cprno">Nullable cprno to get subscriber invoice list from the database.</param>
            <param name="Cvrno">Nullable cvrno to get subscriber invoice list from the database.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.SubscriberInvoiceEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.SubscriberInvoiceEntityRepository.SubscriberInvoiceEntityRepository.FindSubscriberInvoiceListEntity(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Finds all SubscriberInvoiceListEntity in the database that matches the specified <paramref name="Cprno"/> and <paramref name="Cvrno"/>
            </summary>
            <param name="Cprno">Nullable cprno to get subscriber invoice list from the database.</param>
            <param name="Cvrno">Nullable cvrno to get subscriber invoice list from the database.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.SubscriberInvoiceEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.SubscriberInvoiceEntityRepository.SubscriberInvoiceEntityRepository.UpdateSubscriberInvoiceEntity(DLBR.DCF.KDB.BusinessEntities.SubscriberInvoiceEntity,System.String)">
            <summary>
            Updates a subscriber add/delete subsribes on a herd
            </summary>
            <param name="subscriber">Subscriber information to update</param>
            <param name="systemIdent">System ident</param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.SubscriberInvoiceVFLEntityRepository.SubscriberInvoiceVFLEntityFactory">
            <summary>
            Factory responsible for creating instances of the SubscriberInvoiceVFLEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.SubscriberInvoiceVFLEntityRepository.SubscriberInvoiceVFLEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.SubscriberInvoiceVFLEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.SubscriberInvoiceVFLEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.SubscriberInvoiceVFLEntityRepository.SubscriberInvoiceVFLEntityRepository">
            <summary>
            Repository responsible for handling SubscriberInvoiceListEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.SubscriberInvoiceVFLEntityRepository.SubscriberInvoiceVFLEntityRepository.FindSubscriberInvoiceListVFLEntity(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Finds all SubscriberInvoiceVFLEntity in the database that matches the specified <paramref name="Cprno"/> and <paramref name="Cvrno"/>
            </summary>
            <param name="Cprno">Nullable cprno to get subscriber invoice list from the database.</param>
            <param name="Cvrno">Nullable cvrno to get subscriber invoice list from the database.</param>
            <returns>A list of <see cref="T:DLBR.DCF.KDB.BusinessEntities.SubscriberInvoiceVFLEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.TargetEntityRepository.TargetEntityFactory">
            <summary>
            Factory responsible for creating instances of the TargetEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.TargetEntityRepository.TargetEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.TargetEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.TargetEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.TargetEntityRepository.TargetEntityRepository">
            <summary>
            Repository responsible for handling TargetEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.TargetEntityRepository.TargetEntityRepository.FindTargetEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.TargetTypeEntity})">
            <summary>
            Finds all TargetEntities in the database that matches the specified parameters.
            If no herd specific target exist for specified herd and targets, then default targets are returned.
            </summary>
            <param name="herdNumber">The herd number to get the entities for.</param>
            <param name="animalType">Type of animal in the specified <paramref name="herdNumber"/></param>
            <param name="targetTypes">Types of key figures to return.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.TargetEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERUDLEVERING.HND_LAGERUDLEVERING">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_LAGERUDLEVERING.HND_LAGERUDLEVERING.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERUDLEVERING.HND_LAGERUDLEVERING.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERUDLEVERING.HND_LAGERUDLEVERING.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_LAGERUDLEVERING.HND_LAGERUDLEVERING.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERUDLEVERING.HND_LAGERUDLEVERING.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERUDLEVERING.HND_LAGERUDLEVERING.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERUDLEVERING.HND_LAGERUDLEVERING.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERUDLEVERING.HND_LAGERUDLEVERING.Parameters.pdato">
            <summary>
            Input. Gets or sets the pdato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERUDLEVERING.HND_LAGERUDLEVERING.Parameters.pudleveret">
            <summary>
            Input. Gets or sets the pudleveret parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERUDLEVERING.HND_LAGERUDLEVERING.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERUDLEVERING.HND_LAGERUDLEVERING.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERUDLEVERING.HND_LAGERUDLEVERING.Parameters.pproduktkode">
            <summary>
            Input. Gets or sets the pproduktkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERUDLEVERING.HND_LAGERUDLEVERING.Parameters.pstbnr">
            <summary>
            Input. Gets or sets the pstbnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERUDLEVERING.HND_LAGERUDLEVERING.Parameters.plagerspnr">
            <summary>
            Input. Gets or sets the plagerspnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERUDLEVERING.HND_LAGERUDLEVERING.Parameters.ppris">
            <summary>
            Input. Gets or sets the ppris parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERUDLEVERING.HND_LAGERUDLEVERING.Parameters.pfragt">
            <summary>
            Input. Gets or sets the pfragt parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERUDLEVERING.HND_LAGERUDLEVERING.Parameters.psalg">
            <summary>
            Input. Gets or sets the psalg parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERUDLEVERING.HND_LAGERUDLEVERING.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSKOERSEL.HND_INSANTALSAEDAFHENTOGAFLEV">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_INSKOERSEL.HND_INSANTALSAEDAFHENTOGAFLEV
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSKOERSEL.HND_INSANTALSAEDAFHENTOGAFLEV.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSKOERSEL.HND_INSANTALSAEDAFHENTOGAFLEV.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_INSKOERSEL.HND_INSANTALSAEDAFHENTOGAFLEV.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSKOERSEL.HND_INSANTALSAEDAFHENTOGAFLEV.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSKOERSEL.HND_INSANTALSAEDAFHENTOGAFLEV.Parameters.pid">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSKOERSEL.HND_INSANTALSAEDAFHENTOGAFLEV.Parameters.pinsnummer">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSKOERSEL.HND_INSANTALSAEDAFHENTOGAFLEV.Parameters.pdato">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSKOERSEL.HND_INSANTALSAEDAFHENTOGAFLEV.Parameters.pantalsaedafhentogaflev">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSKOERSEL.HND_INSANTALSAEDAFHENTOGAFLEV.Parameters.phndtype">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSKOERSEL.HND_INSANTALSAEDAFHENTOGAFLEV.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSKOERSEL.HND_INSHJEMMETID">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_INSKOERSEL.HND_INSHJEMMETID
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSKOERSEL.HND_INSHJEMMETID.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSKOERSEL.HND_INSHJEMMETID.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_INSKOERSEL.HND_INSHJEMMETID.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSKOERSEL.HND_INSHJEMMETID.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSKOERSEL.HND_INSHJEMMETID.Parameters.pid">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSKOERSEL.HND_INSHJEMMETID.Parameters.pinsnummer">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSKOERSEL.HND_INSHJEMMETID.Parameters.pdato">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSKOERSEL.HND_INSHJEMMETID.Parameters.phjemmetid">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSKOERSEL.HND_INSHJEMMETID.Parameters.phndtype">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSKOERSEL.HND_INSHJEMMETID.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Interfaces.ITargetInformationEntityRepository">
            <summary>
            Interface for TargetInformationEntity
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.ITargetInformationEntityRepository.FindTargetInformation(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Method for finding existing Target Information for a given management unit and module.
            </summary>
            <param name="managementUnitId">The id of the management unit</param>
            <param name="moduleId">The id of the module</param>
            <returns>Collection of entitites found</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.ITargetInformationEntityRepository.InsertTargetInformations(System.Int64,System.Collections.Generic.ICollection{DLBR.DCF.KDB.BusinessEntities.KpiService.TargetInformationEntity})">
            <summary>
            Method for inserting target information entities.
            </summary>
            <param name="managementUnitId">The id of the management unit</param>
            <param name="informationEntities">Collection of entitites to insert</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.ITargetInformationEntityRepository.DeleteTargetInformations(System.Collections.Generic.ICollection{DLBR.DCF.KDB.BusinessEntities.KpiService.TargetInformationEntity})">
            <summary>
            This method deletes a number of target information entities.
            </summary>
            <param name="informationEntities">The entities to be deleted.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.ITargetInformationEntityRepository.UpdateTargetInformations(System.Int64,System.Collections.Generic.ICollection{DLBR.DCF.KDB.BusinessEntities.KpiService.TargetInformationEntity})">
            <summary>
            Method for updating a collection of target information entities.
            </summary>
            <param name="managementUnitId"></param>
            <param name="informationEntities"></param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Repositories.DescentEntityRepository.DescentEntityRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.DescentEntityRepository.DescentEntityRepository.FindDescentInformationByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="herdNumber"></param>
            <param name="animalType"></param>
            <param name="levels"></param>
            <param name="maxRows"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.DescentEntityRepository.DescentEntityRepository.FindDescentInformationByAnimalNumber(System.Int64,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="animalNumber"></param>
            <param name="levels"></param>
            <param name="maxRows"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.TargetInformationEntityRepository.TargetInformationEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.KpiService.TargetInformationEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.KpiService.TargetInformationEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Repositories.TargetInformationEntityRepository.TargetInformationEntityRepository">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.TargetInformationEntityRepository.TargetInformationEntityRepository.FindTargetInformation(System.Int64,System.Nullable{System.Int64})">
            <summary>
            </summary>
            <param name="managementUnitId"></param>
            <param name="moduleId"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.TargetInformationEntityRepository.TargetInformationEntityRepository.InsertTargetInformations(System.Int64,System.Collections.Generic.ICollection{DLBR.DCF.KDB.BusinessEntities.KpiService.TargetInformationEntity})">
            <summary>
            </summary>
            <param name="managementUnitId"></param>
            <param name="informationEntities"></param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.TargetInformationEntityRepository.TargetInformationEntityRepository.UpdateTargetInformations(System.Int64,System.Collections.Generic.ICollection{DLBR.DCF.KDB.BusinessEntities.KpiService.TargetInformationEntity})">
            <summary>
            </summary>
            <param name="managementUnitId"></param>
            <param name="informationEntities"></param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.TargetInformationEntityRepository.TargetInformationEntityRepository.DeleteTargetInformations(System.Collections.Generic.ICollection{DLBR.DCF.KDB.BusinessEntities.KpiService.TargetInformationEntity})">
            <summary>
            </summary>
            <param name="informationEntities"></param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.VetSampleTypeResultEntityRepository.VetSampleTypeResultEntityFactory">
            <summary>
            Factory responsible for creating instances of the VetSampleTypeResultEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.VetSampleTypeResultEntityRepository.VetSampleTypeResultEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.VetSampleTypeResultEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.VetSampleTypeResultEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.VetSampleTypeResultEntityRepository.VetSampleTypeResultEntityRepository">
            <summary>
            Repository responsible for handling VetSampleTypeResultEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.VetSampleTypeResultEntityRepository.VetSampleTypeResultEntityRepository.GetVetSampleTypeResultEntityByVetSampleType(DLBR.DCF.KDB.BusinessEntities.Classifications.VetSampleTypeEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Decimal)">
            <summary>
            Gets a single <see href="VetSampleTypeResultEntity"/> from the database.
            </summary>
            <param name="vetSampleTypeEntity">vetSampleType</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.VetSampleTypeResultEntity"/> business entity.</returns>
            <param name="levelFromDate">can be null</param>
            <param name="levelToDate">DatoTo. Can be null = gets the actual aktive status</param>
            <param name="chrNumber">Chr number</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.VetSampleTypeResultEntityRepository.VetSampleTypeResultEntityRepository.FindVetSampleTypeResultEntitiesByCHRNumbers(System.Collections.ObjectModel.Collection{System.Int64},System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.VetSampleTypeEntity},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Finds all VetSampleTypeResultEntities in the database that matches the specified parameters
            </summary>
            <param name="chrNumbers">CHR numbers to find Vet Samples by</param>
            <param name="vetSampleTypes">The Vet Sample Type to get results by</param>
            <param name="fromDate">Start date of period that Vet Samples lies within.</param>
            <param name="toDate">End date of period that Vet Samples lies within.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.VetSampleTypeResultEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.VetSampleTypeResultEntityRepository.VetSampleTypeResultEntityRepository.AppendNumber(System.Text.StringBuilder,System.Int64,System.Int32)">
            <summary>
            Append comma seperated Numbers to StringBuilder
            </summary>
            <param name="commandBuilder">The StringBuilder to append to</param>
            <param name="number">The number to append</param>
            <param name="numberIndex">The index of the number. If first number, comma is not set</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.VetSampleTypeResultEntityRepository.VetSampleTypeResultEntityRepository.AppendCHRNumbers(System.Text.StringBuilder,System.Collections.ObjectModel.Collection{System.Int64})">
            <summary>
            Append CHR numbers to StringBuilder
            </summary>
            <param name="commandBuilder">The StringBuilder to append to</param>
            <param name="chrNumbers">The CHR Numbers to append</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.VetSampleTypeResultEntityRepository.VetSampleTypeResultEntityRepository.AppendVetSampleTypeCodes(System.Text.StringBuilder,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.BusinessEntities.Classifications.VetSampleTypeEntity})">
            <summary>
            Append Vet Sample Type Codes to StringBuilder
            </summary>
            <param name="commandBuilder">The StrnfBuilder to append to</param>
            <param name="vetSampleTypes">The Vet Sample Types to append codes from</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNBEHANDLING.HND_SUNBEHANDLING">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_SUNBEHANDLING.HND_SUNBEHANDLING.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNBEHANDLING.HND_SUNBEHANDLING.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNBEHANDLING.HND_SUNBEHANDLING.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_SUNBEHANDLING.HND_SUNBEHANDLING.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNBEHANDLING.HND_SUNBEHANDLING.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNBEHANDLING.HND_SUNBEHANDLING.Parameters.pid">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNBEHANDLING.HND_SUNBEHANDLING.Parameters.pmaengde">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNBEHANDLING.HND_SUNBEHANDLING.Parameters.penhed">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNBEHANDLING.HND_SUNBEHANDLING.Parameters.pmedicindyrflag">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNBEHANDLING.HND_SUNBEHANDLING.Parameters.phndtype">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNBEHANDLING.HND_SUNBEHANDLING.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_ANTALDYR.BER_ANTALDYR">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_ANTALDYR.BER_ANTALDYR.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_ANTALDYR.BER_ANTALDYR.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_ANTALDYR.BER_ANTALDYR.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_ANTALDYR.BER_ANTALDYR.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_ANTALDYR.BER_ANTALDYR.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_ANTALDYR.BER_ANTALDYR.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_ANTALDYR.BER_ANTALDYR.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_ANTALDYR.BER_ANTALDYR.Parameters.pstartdato">
            <summary>
            Input. Gets or sets the pstartdato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_ANTALDYR.BER_ANTALDYR.Parameters.pslutdato">
            <summary>
            Input. Gets or sets the pslutdato parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_BESBEMAERKNING.HND_BESBEMAERKNING">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_BESBEMAERKNING.HND_BESBEMAERKNING.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_BESBEMAERKNING.HND_BESBEMAERKNING.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_BESBEMAERKNING.HND_BESBEMAERKNING.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_BESBEMAERKNING.HND_BESBEMAERKNING.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_BESBEMAERKNING.HND_BESBEMAERKNING.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_BESBEMAERKNING.HND_BESBEMAERKNING.Parameters.pbemtypekode">
            <summary>
            Input. Gets or sets the pbemtypekode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_BESBEMAERKNING.HND_BESBEMAERKNING.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_BESBEMAERKNING.HND_BESBEMAERKNING.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_BESBEMAERKNING.HND_BESBEMAERKNING.Parameters.pbemaerkning">
            <summary>
            Input. Gets or sets the pbemaerkning parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_BESBEMAERKNING.HND_BESBEMAERKNING.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CPR">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CPR.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CPR.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CPR.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CPR.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CPR.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CPR.Parameters.pcprnr">
            <summary>
            Input. Gets or sets the pcprnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CPR.Parameters.pnavn">
            <summary>
            Input. Gets or sets the pnavn parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CPR.Parameters.pco_navn">
            <summary>
            Input. Gets or sets the pco_navn parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CPR.Parameters.pdato_adr_beskyt">
            <summary>
            Input. Gets or sets the pdato_adr_beskyt parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CPR.Parameters.pdato_ajour">
            <summary>
            Input. Gets or sets the pdato_ajour parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CPR.Parameters.pvejnavn">
            <summary>
            Input. Gets or sets the pvejnavn parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CPR.Parameters.phusnr">
            <summary>
            Input. Gets or sets the phusnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CPR.Parameters.phusbogstav">
            <summary>
            Input. Gets or sets the phusbogstav parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CPR.Parameters.petage">
            <summary>
            Input. Gets or sets the petage parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CPR.Parameters.psidedoer">
            <summary>
            Input. Gets or sets the psidedoer parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CPR.Parameters.pbynavn">
            <summary>
            Input. Gets or sets the pbynavn parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CPR.Parameters.ppostnr">
            <summary>
            Input. Gets or sets the ppostnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CPR.Parameters.ppostdistrikt">
            <summary>
            Input. Gets or sets the ppostdistrikt parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CPR.Parameters.pdato_ophoer">
            <summary>
            Input. Gets or sets the pdato_ophoer parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.Parameters.pcvrnr">
            <summary>
            Input. Gets or sets the pcvrnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.Parameters.pnavn1">
            <summary>
            Input. Gets or sets the pnavn1 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.Parameters.pnavn2">
            <summary>
            Input. Gets or sets the pnavn2 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.Parameters.pnavn3">
            <summary>
            Input. Gets or sets the pnavn3 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.Parameters.pco_navn">
            <summary>
            Input. Gets or sets the pco_navn parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.Parameters.ppostboks">
            <summary>
            Input. Gets or sets the ppostboks parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.Parameters.ptelefonnr">
            <summary>
            Input. Gets or sets the ptelefonnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.Parameters.ptelefax">
            <summary>
            Input. Gets or sets the ptelefax parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.Parameters.pemail">
            <summary>
            Input. Gets or sets the pemail parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.Parameters.pdato_ajour">
            <summary>
            Input. Gets or sets the pdato_ajour parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.Parameters.pvejnavn">
            <summary>
            Input. Gets or sets the pvejnavn parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.Parameters.phusnr">
            <summary>
            Input. Gets or sets the phusnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.Parameters.phusbogstav">
            <summary>
            Input. Gets or sets the phusbogstav parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.Parameters.petage">
            <summary>
            Input. Gets or sets the petage parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.Parameters.psidedoer">
            <summary>
            Input. Gets or sets the psidedoer parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.Parameters.pbynavn">
            <summary>
            Input. Gets or sets the pbynavn parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.Parameters.ppostnr">
            <summary>
            Input. Gets or sets the ppostnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.Parameters.ppostdistrikt">
            <summary>
            Input. Gets or sets the ppostdistrikt parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_CVRCPRADRESSER.HND_RET_CVR.Parameters.pdato_ophoer">
            <summary>
            Input. Gets or sets the pdato_ophoer parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_degrundoplysningsvaerdi">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_DEGRUNDOPLYSNINGSVAERDI.HND_DEGRUNDOPLYSNINGSVAERDI.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_degrundoplysningsvaerdi.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_degrundoplysningsvaerdi.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_DEGRUNDOPLYSNINGSVAERDI.HND_DEGRUNDOPLYSNINGSVAERDI.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_degrundoplysningsvaerdi.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_degrundoplysningsvaerdi.Parameters.pid">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_degrundoplysningsvaerdi.Parameters.pdegrundid">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_degrundoplysningsvaerdi.Parameters.pdriftsenhid">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_degrundoplysningsvaerdi.Parameters.pdatofra">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_degrundoplysningsvaerdi.Parameters.pdatotil">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_degrundoplysningsvaerdi.Parameters.pvaerdi">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_degrundoplysningsvaerdi.Parameters.phndtype">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_degrundoplysningsvaerdi.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_DRIFTSENHED">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_DRIFTSENHED.HND_DRIFTSENHED.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_DRIFTSENHED.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_DRIFTSENHED.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_DRIFTSENHED.HND_DRIFTSENHED.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_DRIFTSENHED.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_DRIFTSENHED.Parameters.panvendtflag">
            <summary>
            Input. Gets or sets the panvendtflag parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_DRIFTSENHED.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_DRIFTSENHED.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_DRIFTSENHED.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_EFTERKRAV.HND_EFK">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_EFTERKRAV.HND_EFK.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_EFTERKRAV.HND_EFK.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_EFTERKRAV.HND_EFK.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_EFTERKRAV.HND_EFK.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_EFTERKRAV.HND_EFK.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_EFTERKRAV.HND_EFK.Parameters.pejdnr">
            <summary>
            Input. Gets or sets the pejdnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_EFTERKRAV.HND_EFK.Parameters.pefterkravdato">
            <summary>
            Input. Gets or sets the pefterkravdato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_EFTERKRAV.HND_EFK.Parameters.pefterkravflag">
            <summary>
            Input. Gets or sets the pefterkravflag parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_EFTERKRAV.HND_EFK.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_EFTERKRAV.HND_EFK.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_EFTERKRAV.HND_EFK.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FAKTURABESKEDVALG.HND_FAKTURABESKEDVALG">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_FAKTURABESKEDVALG.HND_FAKTURABESKEDVALG.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FAKTURABESKEDVALG.HND_FAKTURABESKEDVALG.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FAKTURABESKEDVALG.HND_FAKTURABESKEDVALG.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_FAKTURABESKEDVALG.HND_FAKTURABESKEDVALG.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FAKTURABESKEDVALG.HND_FAKTURABESKEDVALG.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FAKTURABESKEDVALG.HND_FAKTURABESKEDVALG.Parameters.pnavn">
            <summary>
            Input. Gets or sets the pnavn parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FAKTURABESKEDVALG.HND_FAKTURABESKEDVALG.Parameters.pemail">
            <summary>
            Input. Gets or sets the pemail parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FAKTURABESKEDVALG.HND_FAKTURABESKEDVALG.Parameters.pmobil">
            <summary>
            Input. Gets or sets the pmobil parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FAKTURABESKEDVALG.HND_FAKTURABESKEDVALG.Parameters.pfakpost">
            <summary>
            Input. Gets or sets the pfakpost parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FAKTURABESKEDVALG.HND_FAKTURABESKEDVALG.Parameters.pbeskserv">
            <summary>
            Input. Gets or sets the pbeskserv parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FAKTURABESKEDVALG.HND_FAKTURABESKEDVALG.Parameters.pbesid">
            <summary>
            Input. Gets or sets the pbesid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FAKTURABESKEDVALG.HND_FAKTURABESKEDVALG.Parameters.psystemident">
            <summary>
            Input. Gets or sets the pemail parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FLOKFLYT.HND_FLOKFLYT">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_FLOKFLYT.HND_FLOKFLYT.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FLOKFLYT.HND_FLOKFLYT.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FLOKFLYT.HND_FLOKFLYT.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_FLOKFLYT.HND_FLOKFLYT.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FLOKFLYT.HND_FLOKFLYT.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FLOKFLYT.HND_FLOKFLYT.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FLOKFLYT.HND_FLOKFLYT.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FLOKFLYT.HND_FLOKFLYT.Parameters.pdato">
            <summary>
            Input. Gets or sets the pdato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FLOKFLYT.HND_FLOKFLYT.Parameters.pflokfkid">
            <summary>
            Input. Gets or sets the pflokfkid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FLOKFLYT.HND_FLOKFLYT.Parameters.pantal">
            <summary>
            Input. Gets or sets the pantal parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FLOKFLYT.HND_FLOKFLYT.Parameters.pbesnrtilfra">
            <summary>
            Input. Gets or sets the pbesnrtilfra parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FLOKFLYT.HND_FLOKFLYT.Parameters.pnatkode">
            <summary>
            Input. Gets or sets the pnatkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FLOKFLYT.HND_FLOKFLYT.Parameters.pomsaetid">
            <summary>
            Input. Gets or sets the pomsaetid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FLOKFLYT.HND_FLOKFLYT.Parameters.pbilnr">
            <summary>
            Input. Gets or sets the pbilnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FLOKFLYT.HND_FLOKFLYT.Parameters.pnatidbil">
            <summary>
            Input. Gets or sets the pnatidbil parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FLOKFLYT.HND_FLOKFLYT.Parameters.ptranspautnr">
            <summary>
            Input. Gets or sets the ptranspautnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FLOKFLYT.HND_FLOKFLYT.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FLOKFLYT.HND_FLOKFLYT.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_FLOKFLYT.HND_FLOKFLYT.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSHAENDUDTRAEK.HND_INSHAENDTRAEK">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_INSHAENDUDTRAEK.HND_INSHAENDTRAEK.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSHAENDUDTRAEK.HND_INSHAENDTRAEK.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSHAENDUDTRAEK.HND_INSHAENDTRAEK.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_INSHAENDUDTRAEK.HND_INSHAENDTRAEK.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSHAENDUDTRAEK.HND_INSHAENDTRAEK.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSHAENDUDTRAEK.HND_INSHAENDTRAEK.Parameters.pcvrnr">
            <summary>
            Input. Gets or sets the pcvrnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSHAENDUDTRAEK.HND_INSHAENDTRAEK.Parameters.pcprnr">
            <summary>
            Input. Gets or sets the pcprnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSHAENDUDTRAEK.HND_INSHAENDTRAEK.Parameters.pbesid">
            <summary>
            Input. Gets or sets the pbesid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSTIMEREGISTRERING.HND_INSTIMEREGISTRERING">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_INSTIMEREGISTRERING.HND_INSTIMEREGISTRERING.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSTIMEREGISTRERING.HND_INSTIMEREGISTRERING.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSTIMEREGISTRERING.HND_INSTIMEREGISTRERING.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_INSTIMEREGISTRERING.HND_INSTIMEREGISTRERING.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSTIMEREGISTRERING.HND_INSTIMEREGISTRERING.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSTIMEREGISTRERING.HND_INSTIMEREGISTRERING.Parameters.pinseminoernr">
            <summary>
            Input. Gets or sets the pinseminoernr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSTIMEREGISTRERING.HND_INSTIMEREGISTRERING.Parameters.pinseminoernrafl">
            <summary>
            Input. Gets or sets the pinseminoernrafl parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSTIMEREGISTRERING.HND_INSTIMEREGISTRERING.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSTIMEREGISTRERING.HND_INSTIMEREGISTRERING.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSTIMEREGISTRERING.HND_INSTIMEREGISTRERING.Parameters.pstarttid">
            <summary>
            Input. Gets or sets the pstarttid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSTIMEREGISTRERING.HND_INSTIMEREGISTRERING.Parameters.psluttid">
            <summary>
            Input. Gets or sets the psluttid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSTIMEREGISTRERING.HND_INSTIMEREGISTRERING.Parameters.pminutter">
            <summary>
            Input. Gets or sets the pminutter parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSTIMEREGISTRERING.HND_INSTIMEREGISTRERING.Parameters.pkode">
            <summary>
            Input. Gets or sets the pkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSTIMEREGISTRERING.HND_INSTIMEREGISTRERING.Parameters.pbemaerkninger">
            <summary>
            Input. Gets or sets the pbemaerkninger parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSTIMEREGISTRERING.HND_INSTIMEREGISTRERING.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSTIMEREGISTRERING.HND_INSTIMEREGISTRERING.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSTIMEREGISTRERING.HND_INSTIMEREGISTRERING.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSTIMEREGISTRERING.HND_INSTIMEREGISTRERING.Parameters.pparent_id">
            <summary>
            InputOutput. Gets or sets the pparent_id parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INTERNEIDENTER.DELETE_INTIDENT">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_INTERNEIDENTER.DELETE_INTIDENT.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INTERNEIDENTER.DELETE_INTIDENT.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INTERNEIDENTER.DELETE_INTIDENT.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_INTERNEIDENTER.DELETE_INTIDENT.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INTERNEIDENTER.DELETE_INTIDENT.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INTERNEIDENTER.DELETE_INTIDENT.Parameters.pid">
            <summary>
            Input. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INTERNEIDENTER.DELETE_INTIDENT.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INTERNEIDENTER.DELETE_INTIDENT.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INTERNEIDENTER.DELETE_INTIDENT.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INTERNEIDENTER.HND_INTERNID">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_INTERNEIDENTER.HND_INTERNID.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INTERNEIDENTER.HND_INTERNID.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INTERNEIDENTER.HND_INTERNID.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_INTERNEIDENTER.HND_INTERNID.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INTERNEIDENTER.HND_INTERNID.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INTERNEIDENTER.HND_INTERNID.Parameters.pckrdyrnr">
            <summary>
            Input. Gets or sets the pckrdyrnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INTERNEIDENTER.HND_INTERNID.Parameters.pidtypekode">
            <summary>
            Input. Gets or sets the pidtypekode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INTERNEIDENTER.HND_INTERNID.Parameters.pidentnr">
            <summary>
            Input. Gets or sets the pidentnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INTERNEIDENTER.HND_INTERNID.Parameters.pdatofra">
            <summary>
            Input. Gets or sets the pdatofra parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INTERNEIDENTER.HND_INTERNID.Parameters.pdatotil">
            <summary>
            Input. Gets or sets the pdatotil parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INTERNEIDENTER.HND_INTERNID.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INTERNEIDENTER.HND_INTERNID.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INTERNEIDENTER.HND_INTERNID.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INTERNEIDENTER.HND_INTERNID.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INTERNEIDENTER.HND_INTERNID.Parameters.pinternidid">
            <summary>
            InputOutput. Gets or sets the pinternidid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_IPDYR.BER_INDAVLAFKOM">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_IPDYR.BER_INDAVLAFKOM.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_IPDYR.BER_INDAVLAFKOM.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_IPDYR.BER_INDAVLAFKOM.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_IPDYR.BER_INDAVLAFKOM.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_IPDYR.BER_INDAVLAFKOM.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_IPDYR.BER_INDAVLAFKOM.Parameters.pstbnr">
            <summary>
            Input. Gets or sets the pstbnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_IPDYR.BER_INDAVLAFKOM.Parameters.pckrdyrnrmor">
            <summary>
            Input. Gets or sets the pckrdyrnrmor parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_IPDYR.BER_INDAVLAFKOM.Parameters.pdyreart">
            <summary>
            InputOutput. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_IPDYR.BER_INDAVLAFKOM.Parameters.pbesnr">
            <summary>
            InputOutput. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_IPDYR.BER_INDAVLAFKOM.Parameters.pindavlsmax">
            <summary>
            Output. Gets or sets the pindavlsmax parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_IPDYR.BER_INDAVLAFKOM.Parameters.parvdeftekst">
            <summary>
            Output. Gets or sets the parvdeftekst parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_IPDYR.BER_INDAVLAFKOM.Parameters.pindavlsgrad">
            <summary>
            Output. Gets or sets the pindavlsgrad parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Parameters.pbesid">
            <summary>
            Input. Gets or sets the pbesid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Parameters.pnavnkort">
            <summary>
            Input. Gets or sets the pnavnkort parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Parameters.pnavnlang">
            <summary>
            Input. Gets or sets the pnavnlang parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Parameters.ppris">
            <summary>
            Input. Gets or sets the ppris parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Parameters.pvaegt">
            <summary>
            Input. Gets or sets the pvaegt parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Parameters.pfoedtilstkode">
            <summary>
            Input. Gets or sets the pfoedtilstkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Parameters.pfoedstrkode">
            <summary>
            Input. Gets or sets the pfoedstrkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Parameters.pforloebskode">
            <summary>
            Input. Gets or sets the pforloebskode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Parameters.pkaelvningsnr">
            <summary>
            Input. Gets or sets the pkaelvningsnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Parameters.pkoenkode">
            <summary>
            Input. Gets or sets the pkoenkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Parameters.pkalvlbnr">
            <summary>
            Input. Gets or sets the pkalvlbnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Parameters.pkaelvedato">
            <summary>
            Input. Gets or sets the pkaelvedato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Parameters.pidtypekode">
            <summary>
            Input. Gets or sets the pidtypekode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Parameters.pidentnr">
            <summary>
            Input. Gets or sets the pidentnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Parameters.pdyridkalv">
            <summary>
            Input. Gets or sets the pdyridkalv parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Parameters.pckrdyrnr">
            <summary>
            Input. Gets or sets the pckrdyrnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_OPRET_KAELV.Parameters.pid">
            <summary>
            Output. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERSPANDTYR.HND_LAGERSPTYR">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_LAGERSPANDTYR.HND_LAGERSPTYR.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERSPANDTYR.HND_LAGERSPTYR.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERSPANDTYR.HND_LAGERSPTYR.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_LAGERSPANDTYR.HND_LAGERSPTYR.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERSPANDTYR.HND_LAGERSPTYR.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERSPANDTYR.HND_LAGERSPTYR.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERSPANDTYR.HND_LAGERSPTYR.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERSPANDTYR.HND_LAGERSPTYR.Parameters.pdato">
            <summary>
            Input. Gets or sets the pdato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERSPANDTYR.HND_LAGERSPTYR.Parameters.poverfoert">
            <summary>
            Input. Gets or sets the poverfoert parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERSPANDTYR.HND_LAGERSPTYR.Parameters.pspild">
            <summary>
            Input. Gets or sets the pspild parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERSPANDTYR.HND_LAGERSPTYR.Parameters.prettet">
            <summary>
            Input. Gets or sets the prettet parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERSPANDTYR.HND_LAGERSPTYR.Parameters.pforbrugt">
            <summary>
            Input. Gets or sets the pforbrugt parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERSPANDTYR.HND_LAGERSPTYR.Parameters.pudleveret">
            <summary>
            Input. Gets or sets the pudleveret parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERSPANDTYR.HND_LAGERSPTYR.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERSPANDTYR.HND_LAGERSPTYR.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERSPANDTYR.HND_LAGERSPTYR.Parameters.pproduktkode">
            <summary>
            Input. Gets or sets the pproduktkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERSPANDTYR.HND_LAGERSPTYR.Parameters.pstbnr">
            <summary>
            Input. Gets or sets the pstbnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERSPANDTYR.HND_LAGERSPTYR.Parameters.plagerspnr">
            <summary>
            Input. Gets or sets the plagerspnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERSPANDTYR.HND_LAGERSPTYR.Parameters.ppris">
            <summary>
            InputOutput. Gets or sets the ppris parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LAGERSPANDTYR.HND_LAGERSPTYR.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LOEBNING.HND_LOEBNING">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_LOEBNING.HND_LOEBNING.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LOEBNING.HND_LOEBNING.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LOEBNING.HND_LOEBNING.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_LOEBNING.HND_LOEBNING.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LOEBNING.HND_LOEBNING.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LOEBNING.HND_LOEBNING.Parameters.pid">
            <summary>
            Input. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LOEBNING.HND_LOEBNING.Parameters.pckrdyrnr">
            <summary>
            Input. Gets or sets the pckrdyrnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LOEBNING.HND_LOEBNING.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LOEBNING.HND_LOEBNING.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LOEBNING.HND_LOEBNING.Parameters.pstbnr">
            <summary>
            Input. Gets or sets the pstbnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LOEBNING.HND_LOEBNING.Parameters.pckrdyrnrtyr">
            <summary>
            Input. Gets or sets the pckrdyrnrtyr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LOEBNING.HND_LOEBNING.Parameters.pstartdato">
            <summary>
            Input. Gets or sets the pstartdato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LOEBNING.HND_LOEBNING.Parameters.pslutdato">
            <summary>
            Input. Gets or sets the pslutdato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LOEBNING.HND_LOEBNING.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_LOEBNING.HND_LOEBNING.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEDIVERSEBESTILLING.HND_MAERKEDIVBEST">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_MAERKEDIVERSEBESTILLING.HND_MAERKEDIVBEST.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEDIVERSEBESTILLING.HND_MAERKEDIVBEST.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEDIVERSEBESTILLING.HND_MAERKEDIVBEST.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_MAERKEDIVERSEBESTILLING.HND_MAERKEDIVBEST.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEDIVERSEBESTILLING.HND_MAERKEDIVBEST.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEDIVERSEBESTILLING.HND_MAERKEDIVBEST.Parameters.pejdnr">
            <summary>
            Input. Gets or sets the pejdnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEDIVERSEBESTILLING.HND_MAERKEDIVBEST.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEDIVERSEBESTILLING.HND_MAERKEDIVBEST.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEDIVERSEBESTILLING.HND_MAERKEDIVBEST.Parameters.pmdivkodeid">
            <summary>
            Input. Gets or sets the pmdivkodeid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEDIVERSEBESTILLING.HND_MAERKEDIVBEST.Parameters.pmfabrikid">
            <summary>
            Input. Gets or sets the pmfabrikid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEDIVERSEBESTILLING.HND_MAERKEDIVBEST.Parameters.pantal">
            <summary>
            Input. Gets or sets the pantal parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEDIVERSEBESTILLING.HND_MAERKEDIVBEST.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEDIVERSEBESTILLING.HND_MAERKEDIVBEST.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEDIVERSEBESTILLING.HND_MAERKEDIVBEST.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEFRITEKST.HND_MAERKEFRITEKST">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_MAERKEFRITEKST.HND_MAERKEFRITEKST.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEFRITEKST.HND_MAERKEFRITEKST.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEFRITEKST.HND_MAERKEFRITEKST.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_MAERKEFRITEKST.HND_MAERKEFRITEKST.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEFRITEKST.HND_MAERKEFRITEKST.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEFRITEKST.HND_MAERKEFRITEKST.Parameters.pejdnr">
            <summary>
            Input. Gets or sets the pejdnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEFRITEKST.HND_MAERKEFRITEKST.Parameters.pmftkodeid">
            <summary>
            Input. Gets or sets the pmftkodeid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEFRITEKST.HND_MAERKEFRITEKST.Parameters.pmserieid">
            <summary>
            Input. Gets or sets the pmserieid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEFRITEKST.HND_MAERKEFRITEKST.Parameters.pmrkid">
            <summary>
            Input. Gets or sets the pmrkid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEFRITEKST.HND_MAERKEFRITEKST.Parameters.pmssuplid">
            <summary>
            Input. Gets or sets the pmssuplid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEFRITEKST.HND_MAERKEFRITEKST.Parameters.plinienr">
            <summary>
            Input. Gets or sets the plinienr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEFRITEKST.HND_MAERKEFRITEKST.Parameters.plinietekst">
            <summary>
            Input. Gets or sets the plinietekst parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEFRITEKST.HND_MAERKEFRITEKST.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEFRITEKST.HND_MAERKEFRITEKST.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKEFRITEKST.HND_MAERKEFRITEKST.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_MAERKER.HND_MAERKER.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_MAERKER.HND_MAERKER.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Parameters.pejdnr">
            <summary>
            Input. Gets or sets the pejdnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Parameters.pmkhelid">
            <summary>
            Input. Gets or sets the pmkhelid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Parameters.pmaerkenr">
            <summary>
            Input. Gets or sets the pmaerkenr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Parameters.pbrugsnr">
            <summary>
            Input. Gets or sets the pbrugsnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Parameters.phastemaerkeflag">
            <summary>
            Input. Gets or sets the phastemaerkeflag parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Parameters.padvflag1">
            <summary>
            InputOutput. Gets or sets the padvflag1 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Parameters.padvflag2">
            <summary>
            InputOutput. Gets or sets the padvflag2 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Parameters.padvflag3">
            <summary>
            InputOutput. Gets or sets the padvflag3 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Parameters.padvflag4">
            <summary>
            InputOutput. Gets or sets the padvflag4 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Parameters.padvflag5">
            <summary>
            InputOutput. Gets or sets the padvflag5 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Parameters.padvflag6">
            <summary>
            InputOutput. Gets or sets the padvflag6 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Parameters.padvflag7">
            <summary>
            InputOutput. Gets or sets the padvflag7 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Parameters.padvflag8">
            <summary>
            InputOutput. Gets or sets the padvflag8 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Parameters.padvflag9">
            <summary>
            InputOutput. Gets or sets the padvflag9 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKER.HND_MAERKER.Parameters.padvflag10">
            <summary>
            InputOutput. Gets or sets the padvflag10 parameter.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIESUPPLERING.HND_MAERKESUPL.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIESUPPLERING.HND_MAERKESUPL.Parameters)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_MAERKESERIESUPPLERING.HND_MAERKESUPL.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIESUPPLERING.HND_MAERKESUPL.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIESUPPLERING.HND_MAERKESUPL.Parameters.pejdnr">
            <summary>
            Input. Gets or sets the pejdnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIESUPPLERING.HND_MAERKESUPL.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIESUPPLERING.HND_MAERKESUPL.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIESUPPLERING.HND_MAERKESUPL.Parameters.pmkhelid">
            <summary>
            Input. Gets or sets the pmkhelid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIESUPPLERING.HND_MAERKESUPL.Parameters.pnumfra">
            <summary>
            Input. Gets or sets the Pnumfra parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIESUPPLERING.HND_MAERKESUPL.Parameters.pantal">
            <summary>
            Input. Gets or sets the Pantal parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIESUPPLERING.HND_MAERKESUPL.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIESUPPLERING.HND_MAERKESUPL.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIESUPPLERING.HND_MAERKESUPL.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIE.HND_MAERKESERIE">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_MAERKESERIE.HND_MAERKESERIE.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIE.HND_MAERKESERIE.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIE.HND_MAERKESERIE.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_MAERKESERIE.HND_MAERKESERIE.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIE.HND_MAERKESERIE.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIE.HND_MAERKESERIE.Parameters.pejdnr">
            <summary>
            Input. Gets or sets the pejdnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIE.HND_MAERKESERIE.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIE.HND_MAERKESERIE.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIE.HND_MAERKESERIE.Parameters.pmkserieid">
            <summary>
            Input. Gets or sets the pmkserieid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIE.HND_MAERKESERIE.Parameters.pantal">
            <summary>
            Input. Gets or sets the pantal parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIE.HND_MAERKESERIE.Parameters.pbrugsnrfra">
            <summary>
            Input. Gets or sets the pbrugsnrfra parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIE.HND_MAERKESERIE.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIE.HND_MAERKESERIE.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MAERKESERIE.HND_MAERKESERIE.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_MASSEINS.HND_MASSEINS.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_MASSEINS.HND_MASSEINS.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pckrdyrnr">
            <summary>
            Input. Gets or sets the pckrdyrnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pdato">
            <summary>
            Input. Gets or sets the pdato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pinsnr">
            <summary>
            Input. Gets or sets the pinsnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pstbnr">
            <summary>
            Input. Gets or sets the pstbnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pbemaerk1">
            <summary>
            Input. Gets or sets the pbemaerk1 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pbemaerk2">
            <summary>
            Input. Gets or sets the pbemaerk2 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pinseminoernr">
            <summary>
            Input. Gets or sets the pinseminoernr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pkredsnr">
            <summary>
            Input. Gets or sets the pkredsnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pspandnr">
            <summary>
            Input. Gets or sets the pspandnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pantal">
            <summary>
            Input. Gets or sets the pantal parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pjournalnr">
            <summary>
            Input. Gets or sets the pjournalnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pejak">
            <summary>
            Input. Gets or sets the pejak parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pstartkoertekm">
            <summary>
            Input. Gets or sets the pstartkoertekm parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pslutkoertekm">
            <summary>
            Input. Gets or sets the pslutkoertekm parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pstartandenkm">
            <summary>
            Input. Gets or sets the pstartandenkm parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pslutandenkm">
            <summary>
            Input. Gets or sets the pslutandenkm parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pbesoegstid">
            <summary>
            Input. Gets or sets the pbesoegstid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pinsfskode">
            <summary>
            Input. Gets or sets the pinsfskode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pproduktkode">
            <summary>
            Input. Gets or sets the pproduktkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_MASSEINS.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.psvaerhedsgrad">
            <summary>
            Input. Gets or sets the psvaerhedsgrad parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.plokalitet">
            <summary>
            Input. Gets or sets the plokalitet parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.pbehmetode">
            <summary>
            Input. Gets or sets the pbehmetode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.pgraduering">
            <summary>
            Input. Gets or sets the pgraduering parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.ptbfenhedmaelk">
            <summary>
            Input. Gets or sets the ptbfenhedmaelk parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.ptilbageholdelsemaelk">
            <summary>
            Input. Gets or sets the ptilbageholdelsemaelk parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.ptbfenhedkoed">
            <summary>
            Input. Gets or sets the ptbfenhedkoed parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.ptilbageholdelsekoed">
            <summary>
            Input. Gets or sets the ptilbageholdelsekoed parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.penhed">
            <summary>
            Input. Gets or sets the penhed parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.pmaengde">
            <summary>
            Input. Gets or sets the pmaengde parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.pregdato">
            <summary>
            Input. Gets or sets the pregdato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.pnordiskevarenr">
            <summary>
            Input. Gets or sets the pnordiskevarenr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.pantal">
            <summary>
            Input. Gets or sets the pantal parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.pdyregruppe">
            <summary>
            Input. Gets or sets the pdyregruppe parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.pudleveret">
            <summary>
            Input. Gets or sets the pudleveret parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.pmedicinanvkode">
            <summary>
            Input. Gets or sets the pmedicinanvkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.pordinatgrp">
            <summary>
            Input. Gets or sets the pordinatgrp parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.plksygkode">
            <summary>
            Input. Gets or sets the plksygkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.pdlsygdomskode">
            <summary>
            Input. Gets or sets the pdlsygdomskode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.pbehandlerkode">
            <summary>
            Input. Gets or sets the pbehandlerkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.pbehandlerlbnr">
            <summary>
            Input. Gets or sets the pbehandlerlbnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.pbehandlernr">
            <summary>
            Input. Gets or sets the pbehandlernr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINBESAETNING.HND_MEDICINBES.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR.Parameters.psunhedid">
            <summary>
            Input. Gets or sets the psunhedid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR.Parameters.pckrdyrnr">
            <summary>
            Input. Gets or sets the pckrdyrnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR.Parameters.pordinatgrp">
            <summary>
            Input. Gets or sets the pordinatgrp parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR.Parameters.ptbfenhedmaelk">
            <summary>
            Input. Gets or sets the ptbfenhedmaelk parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR.Parameters.ptilbageholdelsemaelk">
            <summary>
            Input. Gets or sets the ptilbageholdelsemaelk parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR.Parameters.ptbfenhedkoed">
            <summary>
            Input. Gets or sets the ptbfenhedkoed parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR.Parameters.ptilbageholdelsekoed">
            <summary>
            Input. Gets or sets the ptilbageholdelsekoed parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR.Parameters.penhed">
            <summary>
            Input. Gets or sets the penhed parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR.Parameters.pmaengde">
            <summary>
            Input. Gets or sets the pmaengde parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR.Parameters.pnordiskevarenr">
            <summary>
            Input. Gets or sets the pnordiskevarenr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR.Parameters.pudleveret">
            <summary>
            Input. Gets or sets the pudleveret parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR.Parameters.pmedicinanvkode">
            <summary>
            Input. Gets or sets the pmedicinanvkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MEDICINDYR.HND_MEDICINDYR.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.panimalid">
            <summary>
            Input. Gets or sets the panimalid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pherdid">
            <summary>
            Input. Gets or sets the pherdid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.panimaltype">
            <summary>
            Input. Gets or sets the panimaltype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pclassificationdate">
            <summary>
            Input. Gets or sets the pclassificationdate parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pclassificationtime">
            <summary>
            Input. Gets or sets the pclassificationtime parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pstature">
            <summary>
            Input. Gets or sets the pstature parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pbodydepth">
            <summary>
            Input. Gets or sets the pbodydepth parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pchestwidth">
            <summary>
            Input. Gets or sets the pchestwidth parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pangularity">
            <summary>
            Input. Gets or sets the pangularity parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.ptopline">
            <summary>
            Input. Gets or sets the ptopline parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.prumpwidth">
            <summary>
            Input. Gets or sets the prumpwidth parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.prumpangle">
            <summary>
            Input. Gets or sets the prumpangle parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pbodydeviation1">
            <summary>
            Input. Gets or sets the pbodydeviation1 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pbodydeviation2">
            <summary>
            Input. Gets or sets the pbodydeviation2 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pstatureestimated">
            <summary>
            Input. Gets or sets the pstatureestimated parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.prearlegsset">
            <summary>
            Input. Gets or sets the prearlegsset parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.prearlegsrearview">
            <summary>
            Input. Gets or sets the prearlegsrearview parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.phockquality">
            <summary>
            Input. Gets or sets the phockquality parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pbonestructure">
            <summary>
            Input. Gets or sets the pbonestructure parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pfootangle">
            <summary>
            Input. Gets or sets the pfootangle parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.plegdeviation1">
            <summary>
            Input. Gets or sets the plegdeviation1 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.plegdeviation2">
            <summary>
            Input. Gets or sets the plegdeviation2 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.ppastern">
            <summary>
            Input. Gets or sets the ppastern parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pforeudderattach">
            <summary>
            Input. Gets or sets the pforeudderattach parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.prearudderwidth">
            <summary>
            Input. Gets or sets the prearudderwidth parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.prearudderheight">
            <summary>
            Input. Gets or sets the prearudderheight parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pcentralligament">
            <summary>
            Input. Gets or sets the pcentralligament parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pudderdepth">
            <summary>
            Input. Gets or sets the pudderdepth parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pudderbalance">
            <summary>
            Input. Gets or sets the pudderbalance parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pteatlength">
            <summary>
            Input. Gets or sets the pteatlength parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pteatthickness">
            <summary>
            Input. Gets or sets the pteatthickness parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pfrontteatposition">
            <summary>
            Input. Gets or sets the pfrontteatposition parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.prearteatposition">
            <summary>
            Input. Gets or sets the prearteatposition parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pudderdeviation1">
            <summary>
            Input. Gets or sets the pudderdeviation1 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pudderdeviation2">
            <summary>
            Input. Gets or sets the pudderdeviation2 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.ptimefrommilking">
            <summary>
            Input. Gets or sets the ptimefrommilking parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pmilkingspeed">
            <summary>
            Input. Gets or sets the pmilkingspeed parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.ptemperament">
            <summary>
            Input. Gets or sets the ptemperament parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pbodyconditionscore">
            <summary>
            Input. Gets or sets the pbodyconditionscore parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.plocomotion">
            <summary>
            Input. Gets or sets the plocomotion parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pdkclassificationtype">
            <summary>
            Input. Gets or sets the pdkclassificationtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pficlassificationtype">
            <summary>
            Input. Gets or sets the pficlassificationtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pseclassificationtype">
            <summary>
            Input. Gets or sets the pseclassificationtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pleakage">
            <summary>
            Input. Gets or sets the pleakage parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pchestcircumference">
            <summary>
            Input. Gets or sets the pchestcircumference parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pcoatcolour">
            <summary>
            Input. Gets or sets the pcoatcolour parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pextrateats">
            <summary>
            Input. Gets or sets the pextrateats parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.phorns">
            <summary>
            Input. Gets or sets the phorns parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pequallyemptyingudder">
            <summary>
            Input. Gets or sets the pequallyemptyingudder parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pphoto">
            <summary>
            Input. Gets or sets the pphoto parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pcalvingdifficulty">
            <summary>
            Input. Gets or sets the pcalvingdifficulty parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pcolorandmarking">
            <summary>
            Input. Gets or sets the pcolorandmarking parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pbodyscore">
            <summary>
            Input. Gets or sets the pbodyscore parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.plegscore">
            <summary>
            Input. Gets or sets the plegscore parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pudderscore">
            <summary>
            Input. Gets or sets the pudderscore parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.ptotalscore">
            <summary>
            Input. Gets or sets the ptotalscore parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.psyncstatus">
            <summary>
            Input. Gets or sets the psyncstatus parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.plackofmilkletdow">
            <summary>
            Input. Gets or sets the plackofmilkletdow parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pblockedupteatcanal">
            <summary>
            Input. Gets or sets the pblockedupteatcanal parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.punevendrainingofmammary">
            <summary>
            Input. Gets or sets the punevendrainingofmammary parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pblindteatswithteatcanal">
            <summary>
            Input. Gets or sets the pblindteatswithteatcanal parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pblindteatswithoutteatcanal">
            <summary>
            Input. Gets or sets the pblindteatswithoutteatcanal parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_NORDICCLASSIFICATION.HND_NORDICCLASSIFICATION.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters.pformat">
            <summary>
            Input. Gets or sets the pformat parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters.pudskrevetflag">
            <summary>
            Input. Gets or sets the pudskrevetflag parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters.psenesteudskriftsdato">
            <summary>
            Input. Gets or sets the psenesteudskriftsdato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters.pfaktureringsflag">
            <summary>
            Input. Gets or sets the pfaktureringsflag parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters.poensketudskriftsdato">
            <summary>
            Input. Gets or sets the poensketudskriftsdato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters.pudlobsdato">
            <summary>
            Input. Gets or sets the pudlobsdato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters.ppakkenr">
            <summary>
            Input. Gets or sets the ppakkenr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters.pklartiludskrift">
            <summary>
            Input. Gets or sets the pklartiludskrift parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters.prapportid">
            <summary>
            Input. Gets or sets the prapportid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters.pvejlederid">
            <summary>
            Input. Gets or sets the pvejlederid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters.prekvirentid">
            <summary>
            Input. Gets or sets the prekvirentid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters.pomraadeflag">
            <summary>
            Input. Gets or sets the pomraadeflag parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters.pomrbehandlerid">
            <summary>
            Input. Gets or sets the pomrbehandlerid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters.pfrektypkode">
            <summary>
            Input. Gets or sets the pfrektypkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters.pdatofra">
            <summary>
            Input. Gets or sets pdatofra
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters.pdatotil">
            <summary>
            Input. Gets or sets pdatotil
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_RAPPORTBESTILLING.HND_RAPBESTILBES_DCF.Parameters.pckrdyrnr">
            <summary>
            Input. Gets or sets pckrdyrnr
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SSP_FAKTURERING_MMUNIT.SSP_FAKTURERING">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_SSP_FAKTURERING_MMUNIT.SSP_FAKTURERING.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SSP_FAKTURERING_MMUNIT.SSP_FAKTURERING.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SSP_FAKTURERING_MMUNIT.SSP_FAKTURERING.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_SSP_FAKTURERING_MMUNIT.SSP_FAKTURERING.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SSP_FAKTURERING_MMUNIT.SSP_FAKTURERING.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SSP_FAKTURERING_MMUNIT.SSP_FAKTURERING.Parameters.managementunitid">
            <summary>
            Input. Gets or sets the managementunitid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_SUNBEHANDLINGSREG.HND_SUNBEHANDLINGSREG.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_SUNBEHANDLINGSREG.HND_SUNBEHANDLINGSREG.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters.pid">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters.BesNr">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters.DyreArt">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters.SunbesdiagId">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters.CkrDyrNr">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters.Dato">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters.AfslutbehandlingFlag">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters.SundIbId">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters.Vaegt">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters.Autobehflag">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters.phndtype">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters.PADVFLAG1">
            <summary>
            Input. Gets or sets 
            Sættes, hvis der er registreret symptomer i tilknytning til behandlingen.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters.PADVFLAG2">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters.PADVFLAG3">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters.PADVFLAG4">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters.PADVFLAG5">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters.PADVFLAG6">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters.PADVFLAG7">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters.PADVFLAG8">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters.PADVFLAG9">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_DRIFTSENHED.HND_SUNBEHANDLINGSREG.Parameters.PADVFLAG10">
            <summary>
            Input. Gets or sets 
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNDHED.HND_SUNDHED">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_SUNDHED.HND_SUNDHED.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNDHED.HND_SUNDHED.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNDHED.HND_SUNDHED.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_SUNDHED.HND_SUNDHED.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNDHED.HND_SUNDHED.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNDHED.HND_SUNDHED.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNDHED.HND_SUNDHED.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNDHED.HND_SUNDHED.Parameters.pckrdyrnr">
            <summary>
            Input. Gets or sets the pckrdyrnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNDHED.HND_SUNDHED.Parameters.plksygdomskode">
            <summary>
            Input. Gets or sets the plksygdomskode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNDHED.HND_SUNDHED.Parameters.pdlsygdomskode">
            <summary>
            Input. Gets or sets the pdlsygdomskode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNDHED.HND_SUNDHED.Parameters.pdato">
            <summary>
            Input. Gets or sets the pdato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNDHED.HND_SUNDHED.Parameters.pgenbehandlingsflag">
            <summary>
            Input. Gets or sets the pgenbehandlingsflag parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNDHED.HND_SUNDHED.Parameters.pbehandlernr">
            <summary>
            Input. Gets or sets the pbehandlernr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNDHED.HND_SUNDHED.Parameters.pbehandlerlbnr">
            <summary>
            Input. Gets or sets the pbehandlerlbnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNDHED.HND_SUNDHED.Parameters.pbehandlerkode">
            <summary>
            Input. Gets or sets the pbehandlerkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNDHED.HND_SUNDHED.Parameters.pgraduering">
            <summary>
            Input. Gets or sets the pgraduering parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNDHED.HND_SUNDHED.Parameters.pbehmetode">
            <summary>
            Input. Gets or sets the pbehmetode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNDHED.HND_SUNDHED.Parameters.plokalitet">
            <summary>
            Input. Gets or sets the plokalitet parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNDHED.HND_SUNDHED.Parameters.psvaerhedsgrad">
            <summary>
            Input. Gets or sets the psvaerhedsgrad parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNDHED.HND_SUNDHED.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNDHED.HND_SUNDHED.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNDHED.HND_SUNDHED.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNDHED.HND_SUNDHED.Parameters.pfejlkode">
            <summary>
            InputOutput. Gets or sets the pfejlkode parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNKLINREG.HND_SUNKLINREG">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_SUNKLINREG.HND_SUNKLINREG.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNKLINREG.HND_SUNKLINREG.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNKLINREG.HND_SUNKLINREG.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_SUNKLINREG.HND_SUNKLINREG.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNKLINREG.HND_SUNKLINREG.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNKLINREG.HND_SUNKLINREG.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNKLINREG.HND_SUNKLINREG.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNKLINREG.HND_SUNKLINREG.Parameters.pckrdyrnr">
            <summary>
            Input. Gets or sets the pckrdyrnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNKLINREG.HND_SUNKLINREG.Parameters.psunkparamkode">
            <summary>
            Input. Gets or sets the psunkparamkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNKLINREG.HND_SUNKLINREG.Parameters.pdato">
            <summary>
            Input. Gets or sets the pdato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNKLINREG.HND_SUNKLINREG.Parameters.pvaerdinum">
            <summary>
            Input. Gets or sets the pvaerdinum parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNKLINREG.HND_SUNKLINREG.Parameters.pvaerdistreng">
            <summary>
            Input. Gets or sets the pvaerdistreng parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNKLINREG.HND_SUNKLINREG.Parameters.pbehandlerkode">
            <summary>
            Input. Gets or sets the pbehandlerkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNKLINREG.HND_SUNKLINREG.Parameters.pbehandlernr">
            <summary>
            Input. Gets or sets the pbehandlernr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNKLINREG.HND_SUNKLINREG.Parameters.pbehandlerlbnr">
            <summary>
            Input. Gets or sets the pbehandlerlbnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNKLINREG.HND_SUNKLINREG.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNKLINREG.HND_SUNKLINREG.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_SUNKLINREG.HND_SUNKLINREG.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING.Parameters.pturplid">
            <summary>
            Input. Gets or sets the pturplid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING.Parameters.praekkefolge">
            <summary>
            Input. Gets or sets the praekkefolge parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING.Parameters.padvflag1">
            <summary>
            InputOutput. Gets or sets the padvflag1 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING.Parameters.padvflag2">
            <summary>
            InputOutput. Gets or sets the padvflag2 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING.Parameters.padvflag3">
            <summary>
            InputOutput. Gets or sets the padvflag3 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING.Parameters.padvflag4">
            <summary>
            InputOutput. Gets or sets the padvflag4 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING.Parameters.padvflag5">
            <summary>
            InputOutput. Gets or sets the padvflag5 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING.Parameters.padvflag6">
            <summary>
            InputOutput. Gets or sets the padvflag6 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING.Parameters.padvflag7">
            <summary>
            InputOutput. Gets or sets the padvflag7 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING.Parameters.padvflag8">
            <summary>
            InputOutput. Gets or sets the padvflag8 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING.Parameters.padvflag9">
            <summary>
            InputOutput. Gets or sets the padvflag9 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLANBESAETNING.HND_TURPLANBESAETNING.Parameters.padvflag10">
            <summary>
            InputOutput. Gets or sets the padvflag10 parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLAN.HND_TURPLAN">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_TURPLAN.HND_TURPLAN.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLAN.HND_TURPLAN.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLAN.HND_TURPLAN.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_TURPLAN.HND_TURPLAN.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLAN.HND_TURPLAN.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLAN.HND_TURPLAN.Parameters.pnavn">
            <summary>
            Input. Gets or sets the pnavn parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLAN.HND_TURPLAN.Parameters.pkredsnummer">
            <summary>
            Input. Gets or sets the pkredsnummer parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLAN.HND_TURPLAN.Parameters.pbeskrivelse">
            <summary>
            Input. Gets or sets the pbeskrivelse parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLAN.HND_TURPLAN.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLAN.HND_TURPLAN.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLAN.HND_TURPLAN.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLAN.HND_TURPLAN.Parameters.padvflag1">
            <summary>
            InputOutput. Gets or sets the padvflag1 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLAN.HND_TURPLAN.Parameters.padvflag2">
            <summary>
            InputOutput. Gets or sets the padvflag2 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLAN.HND_TURPLAN.Parameters.padvflag3">
            <summary>
            InputOutput. Gets or sets the padvflag3 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLAN.HND_TURPLAN.Parameters.padvflag4">
            <summary>
            InputOutput. Gets or sets the padvflag4 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLAN.HND_TURPLAN.Parameters.padvflag5">
            <summary>
            InputOutput. Gets or sets the padvflag5 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLAN.HND_TURPLAN.Parameters.padvflag6">
            <summary>
            InputOutput. Gets or sets the padvflag6 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLAN.HND_TURPLAN.Parameters.padvflag7">
            <summary>
            InputOutput. Gets or sets the padvflag7 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLAN.HND_TURPLAN.Parameters.padvflag8">
            <summary>
            InputOutput. Gets or sets the padvflag8 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLAN.HND_TURPLAN.Parameters.padvflag9">
            <summary>
            InputOutput. Gets or sets the padvflag9 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_TURPLAN.HND_TURPLAN.Parameters.padvflag10">
            <summary>
            InputOutput. Gets or sets the padvflag10 parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSAETNING.HENTNYID">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_UDSAETNING.HENTNYID.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSAETNING.HENTNYID.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSAETNING.HENTNYID.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_UDSAETNING.HENTNYID.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSAETNING.HENTNYID.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSAETNING.HENTNYID.Parameters.pid">
            <summary>
            Output. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSAETNING.HND_UDSAETNING_PDA">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_UDSAETNING.HND_UDSAETNING_PDA.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSAETNING.HND_UDSAETNING_PDA.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSAETNING.HND_UDSAETNING_PDA.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_UDSAETNING.HND_UDSAETNING_PDA.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSAETNING.HND_UDSAETNING_PDA.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSAETNING.HND_UDSAETNING_PDA.Parameters.pudsaetid">
            <summary>
            Input. Gets or sets the pudsaetid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSAETNING.HND_UDSAETNING_PDA.Parameters.pdyrid">
            <summary>
            Input. Gets or sets the pdyrid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSAETNING.HND_UDSAETNING_PDA.Parameters.pckrdyrnr">
            <summary>
            Input. Gets or sets the pckrdyrnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSAETNING.HND_UDSAETNING_PDA.Parameters.pdato">
            <summary>
            Input. Gets or sets the pdato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSAETNING.HND_UDSAETNING_PDA.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSAETNING.HND_UDSAETNING_PDA.Parameters.pudsaetkode">
            <summary>
            Input. Gets or sets the pudsaetkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSAETNING.HND_UDSAETNING_PDA.Parameters.paarsag1">
            <summary>
            Input. Gets or sets the paarsag1 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSAETNING.HND_UDSAETNING_PDA.Parameters.paarsag2">
            <summary>
            Input. Gets or sets the paarsag2 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSAETNING.HND_UDSAETNING_PDA.Parameters.pbesid">
            <summary>
            Input. Gets or sets the pbesid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSAETNING.HND_UDSAETNING_PDA.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSTATIONERINGER.HND_UDSTATR">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_UDSTATIONERINGER.HND_UDSTATR.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSTATIONERINGER.HND_UDSTATR.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSTATIONERINGER.HND_UDSTATR.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_UDSTATIONERINGER.HND_UDSTATR.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSTATIONERINGER.HND_UDSTATR.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSTATIONERINGER.HND_UDSTATR.Parameters.pckrdyrnr">
            <summary>
            Input. Gets or sets the pckrdyrnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSTATIONERINGER.HND_UDSTATR.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSTATIONERINGER.HND_UDSTATR.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSTATIONERINGER.HND_UDSTATR.Parameters.pbesnrfra">
            <summary>
            Input. Gets or sets the pbesnrfra parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSTATIONERINGER.HND_UDSTATR.Parameters.pdato">
            <summary>
            Input. Gets or sets the pdato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSTATIONERINGER.HND_UDSTATR.Parameters.pudstatkode">
            <summary>
            Input. Gets or sets the pudstatkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSTATIONERINGER.HND_UDSTATR.Parameters.pbesnrtil">
            <summary>
            Input. Gets or sets the pbesnrtil parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSTATIONERINGER.HND_UDSTATR.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSTATIONERINGER.HND_UDSTATR.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_UDSTATIONERINGER.HND_UDSTATR.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_VAEGTOPL.HND_VEJNING_PDA">
            <summary>
            Wrapper class for the stored procedure H6601.K_VAEGTOPL.HND_VEJNING_PDA.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_VAEGTOPL.HND_VEJNING_PDA.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_VAEGTOPL.HND_VEJNING_PDA.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_VAEGTOPL.HND_VEJNING_PDA.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_VAEGTOPL.HND_VEJNING_PDA.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_VAEGTOPL.HND_VEJNING_PDA.Parameters.pvgtoplid">
            <summary>
            Input. Gets or sets the pvgtoplid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_VAEGTOPL.HND_VEJNING_PDA.Parameters.pckrdyrnr">
            <summary>
            Input. Gets or sets the pckrdyrnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_VAEGTOPL.HND_VEJNING_PDA.Parameters.pvejedato">
            <summary>
            Input. Gets or sets the pvejedato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_VAEGTOPL.HND_VEJNING_PDA.Parameters.pvejemetkode">
            <summary>
            Input. Gets or sets the pvejemetkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_VAEGTOPL.HND_VEJNING_PDA.Parameters.pvejetypekode">
            <summary>
            Input. Gets or sets the pvejetypekode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_VAEGTOPL.HND_VEJNING_PDA.Parameters.pvaegt">
            <summary>
            Input. Gets or sets the pvaegt parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_VAEGTOPL.HND_VEJNING_PDA.Parameters.ppris">
            <summary>
            Input. Gets or sets the ppris parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_VAEGTOPL.HND_VEJNING_PDA.Parameters.pbrystomf">
            <summary>
            Input. Gets or sets the pbrystomf parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_VAEGTOPL.HND_VEJNING_PDA.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_VAEGTOPL.HND_VEJNING_PDA.Parameters.pbesid">
            <summary>
            Input. Gets or sets the pbesid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_VAEGTOPL.HND_VEJNING_PDA.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_VAEGTOPL.HENTNYID">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_VAEGTOPL.HENTNYID.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_VAEGTOPL.HENTNYID.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_VAEGTOPL.HENTNYID.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_VAEGTOPL.HENTNYID.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_VAEGTOPL.HENTNYID.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_VAEGTOPL.HENTNYID.Parameters.pid">
            <summary>
            Output. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Interfaces.ICDbManagementRepository">
            <summary>
            Interface to repository responsible for handling various database management tasks.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.ICDbManagementRepository.GetSystemDateTime">
            <summary>
            Gets the current datetime on the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.ICDbManagementRepository.ValidateDCFCredentials(System.String,System.String)">
            <summary>
            Validates specified <paramref name="userName"/> and p<paramref name="password"/> against the central database.
            The validation is performed by trying tio create a connection to the database using the specified credentials. 
            </summary>
            <param name="userName">The user name of the user in the central database.</param>
            <param name="password">The password of the user in the central database.</param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Interfaces.IHerdOwnerUserEntityRepository">
            <summary>
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.IHerdOwnerUserEntityRepository.GetHerdOwnersUsername(System.Int32,System.Int32)">
            <summary>
            Method to read the owner user of the specified herd.
            </summary>
            <param name="herdNumber"></param>
            <param name="animalType"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.IHerdOwnerUserEntityRepository.GetUsername(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Method to read the user with the specified cvr / cpr ids.
            </summary>
            <param name="cvrId"></param>
            <param name="cprId"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Interfaces.INordicClassificationRepository">
            <summary>
            Interface to repository responsible for handling Nordic Classifiaction related entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.INordicClassificationRepository.FindAnimalsForClassificationByAreaCode(System.Int32)">
            <summary>
            Finds all animals for classification in the database that matches the specified <paramref name="areaCode"/>.
            </summary>
            <param name="areaCode">A complex code identifying the geografical area the animals are located in, and the sire they are decendants from.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.DataEntities.NordicClassificationBasicDataEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.INordicClassificationRepository.FindAnimalsForClassificationByHerdNumber(System.Collections.Generic.List{System.Int64})">
            <summary>
            Finds all animals for classification in the database that matches the specified list of <paramref name="herdNumbers"/>.
            </summary>
            <param name="herdNumbers">A list of numbers identifying the herds to retrieve animals for.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.DataEntities.NordicClassificationBasicDataEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Interfaces.INordicClassificationRepository.InsertNordicClassificationEntity(DLBR.DCF.KDB.BusinessEntities.RegistrationEntities.NordicClassificationRegistrationEntity)">
            <summary>
            Inserts the specified <paramref name="entity"/> into the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.RegistrationEntities.NordicClassificationRegistrationEntity"/> to insert.</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IReportFileEntityRepository">
            <summary>
            Interface to repository handling report files.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IReportFileEntityRepository.FindReportFileDefinitionEntities(DLBR.DCF.KDB.BusinessEntities.Classifications.HerdTypeEntity,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity)">
            <summary>
            Finds all available <see cref="T:DLBR.DCF.KDB.DataEntities.ReportFileDefinitionEntity"/> in the central database that matches specified parameters. 
            </summary>
            <param name="herdType">The type of herd to find report file definitions for.</param>
            <param name="animalType">The type of animal to find report file definitions for.</param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IReportFileEntityRepository.GenerateReportFileEntity(DLBR.DCF.KDB.DataEntities.ReportFileDefinitionEntity,System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64})">
            <summary>
            Order a report file. The report file is created asyncronously, so this method returns after the report file has been ordered. Use <see cref="M:DLBR.DCF.KDB.DataAccess.IReportFileEntityRepository.GetReportFileEntity(System.Int64,System.String)"/> to get the report file
            after is has been generated.
            </summary>
            <param name="reportFileDefinition">Create a report file order for the report file defined in the report file definition </param>
            <param name="herdNumber">The herd number to order the report file for.</param>
            <param name="animalTypeEntity">the animal type of the herd to order the report file for.</param>
            <param name="fromDate"></param>
            <param name="toDate"></param>
            <param name="animalNumber"></param>
            <returns>A reportFileOrderId</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IReportFileEntityRepository.GetReportFileStatusEntity(System.Int64)">
            <summary>
            Gets the status of the report file after it has been requested via the <see cref="M:DLBR.DCF.KDB.DataAccess.IReportFileEntityRepository.GenerateReportFileEntity(DLBR.DCF.KDB.DataEntities.ReportFileDefinitionEntity,System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64})"/>.
            </summary>
            <param name="reportFileOrderId">Id of the report file order.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.DataEntities.ReportFileStatusEntity"/> containing information of status.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IReportFileEntityRepository.GetReportFileEntity(System.Int64,System.String)">
            <summary>
            Gets the report file after is has been created.
            </summary>
            <param name="reportFileOrderId">Id of the report report order.</param>
            <param name="userName">User name of the user that should be used to connect to the database to get the report file. 
            Relevant to set, if a system user are required to establish the connection, e.g. implementation of an asp.net handler.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.DataEntities.ReportFileEntity"/> containing the file collected.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IWorklistEntityRepository">
            <summary>
            Interface to repository responsible for handling reports.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IWorklistEntityRepository.GetAnimalDataByDistrictNumber(System.Int32,System.Nullable{System.Int32},DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalStatusEntity)">
            <summary>
            Finds all AnimalDataByDistrictNumber in the database that matches the specified <paramref name="districtNumber"/>
            </summary>
            <param name="districtNumber">number use when finding entities.</param>
            <param name="age">Ages in dayes.</param>
            <param name="animalStatusCode">AnimalStaus eg. a cow or a bull</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.DataEntities.ReportDataEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IWorklistEntityRepository.GetBullData">
            <summary>
            Gets all Bulls avalible
            </summary>
            <returns>A <see cref="T:DLBR.DCF.KDB.DataEntities.ReportDataEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IWorklistEntityRepository.GetHerdRecordData(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Finds HerdRecords. The parameters provided, determine what is returned.
            If <paramref name="districtNumber"/> is provided, all records for that district is returned. 
            If a herd number is provided aswell, it will be ignored!
            If <paramref name="herdNumber"/> is provided, all records whit that herd is returned. 
            If no parameter is provided, all records is returned.
            </summary>
            <param name="districtNumber">The district number.</param>
            <param name="herdNumber">Herd number</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.DataEntities.ReportDataEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IWorklistEntityRepository.GetGHIData(System.Int64,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Finds GHI (Gødnings- og Husdyrindberetning) data for the danish Ministry of Food, Agriculture and Fisheries
            </summary>
            <param name="herdNumber">HerdNumber of the data to get from the database.</param>
            <param name="animalTypeCode">AnimalType Code of the data to get from the database.</param>
            <param name="fromDate">Start date of period that the GHI data lies within.</param>
            <param name="toDate">End date of period that the GHI data lies within.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.DataEntities.ReportDataEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IWorklistEntityRepository.GetReproductionObservationListByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Finds a reproduction observation list (reprodagsliste) for specified <paramref name="herdNumber"/>
            </summary>
            <param name="herdNumber">Number of the herd to get the list for.</param>
            <param name="animalType">Type of animals to get the list for.</param>
            <param name="listTypeHeifer">Whether the list should include heifers.</param>
            <param name="listTypeCow">Whether the list should include cows.</param>
            <param name="listGroupPregnancyCheck">Whether the list should include the list group "Pregnancy check"</param>
            <param name="listGroupHeatObservation">Whether the list should include the list group "Heat observation"</param>
            <param name="listGroupPreExamination">Whether the list should include the list group "Pre examination"</param>
            <param name="listGroupDryOff">Whether the list should include the list group "Dry off"</param>
            <param name="listGroupPrepareForCalving">Whether the list should include the list group "Prepare for calving"</param>
            <param name="listGroupPrepareHeifers">Whether the list should include the list group "Prepare heifers"</param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IWorklistEntityRepository.GetReproductionPreObservationListByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity)">
            <summary>
            Finds a reproduction pre observation list (PregnancyCheck, PreExamination) for specified <paramref name="herdNumber"/>
            </summary>
            <param name="herdNumber">Number of the herd to get the list for.</param>
            <param name="animalType">Type of animals to get the list for.</param>
            <returns>A list with groups PregnancyCheck and PreExamination</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.CDbManagementRepository.CDbManagementRepository.ValidateDCFCredentials(System.String,System.String)">
            <summary>
            Validates a set of central database credentials by trying to open a connection on the database.
            If connection is opened then the credentials are considered to be valid.
            Otherwise an exception is thrown from the database, and the credentials are considered to be invalid.
            </summary>
            <param name="userName"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.HerdOwnerUserEntityRepository.HerdOwnerUserEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.HerdOwnerUserEntity"/> from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.GeneratedCode.BusinessEntities.HerdOwnerUserEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Repositories.HerdOwnerUserEntityRepository.HerdOwnerUserEntityRepository">
            <summary>
            Repository for entity class HerdOwnerUserEntity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.HerdOwnerUserEntityRepository.HerdOwnerUserEntityRepository.GetHerdOwnersUsername(System.Int32,System.Int32)">
            <summary>
            </summary>
            <param name="herdNumber"></param>
            <param name="animalType"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.HerdOwnerUserEntityRepository.HerdOwnerUserEntityRepository.GetUsername(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            </summary>
            <param name="cvrId"></param>
            <param name="cprId"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Repositories.NordicClassificationRepository.AnimalClassificationBasicDataEntityFactory">
            <summary>
            Factory responsible for creating instances of the AnimalClassificationBasicData entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.NordicClassificationRepository.AnimalClassificationBasicDataEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.DataEntities.AnimalClassificationBasicDataEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.DataEntities.AnimalClassificationBasicDataEntity"/> entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Repositories.NordicClassificationRepository.NordicClassificationBasicDataEntityFactory">
            <summary>
            Factory responsible for creating instances of the NordicClassificationBasicData entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.NordicClassificationRepository.NordicClassificationBasicDataEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.DataEntities.NordicClassificationBasicDataEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.DataEntities.NordicClassificationBasicDataEntity"/> entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Repositories.NordicClassificationRepository.NordicClassificationRepository">
            <summary>
            Repository responsible for handling entities related to Nordic Classification.
            Only animals of AnimalType "Cattle" e.g. Code 12 is relevant in this context.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ReportDataEntityRepository.ReportStatusEntityFactory.ConstructReportStatusEntity(System.Data.IDataReader)">
            <summary>
            Constructs a ReportStatusEntity by reading values from a dataReader
            </summary>
            <param name="dataReader">the datareader</param>
            <returns>null if the datareader contains no data, otherwise the created ReportStatusEntity</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Repositories.ReportFileEntityRepository.ReportFileDefinitionEntityFactory">
            <summary>
            Factory responsible for creating instances of the ReportFileDefinitionEntity data entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ReportFileEntityRepository.ReportFileDefinitionEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.DataEntities.ReportFileDefinitionEntity"/> data entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.DataEntities.ReportFileEntity"/> data entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Repositories.ReportFileEntityRepository.ReportFileStatusEntityFactory">
            <summary>
            Factory responsible for creating instances of the ReportFileEntity data entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ReportFileEntityRepository.ReportFileStatusEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.DataAccess.Repositories.ReportFileEntityRepository.ReportFileStatusEntityFactory"/> data entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.DataEntities.ReportFileEntity"/> data entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Repositories.ReportFileEntityRepository.ReportFileEntityFactory">
            <summary>
            Factory responsible for creating instances of the ReportFileEntity data entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ReportFileEntityRepository.ReportFileEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.DataEntities.ReportFileEntity"/> data entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:Oracle.DataAccess.Client.OracleDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.DataEntities.ReportFileEntity"/> data entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Repositories.VetSampleHealthRepository.VetSampleHealthAnimalRepository">
            <summary>
            Repository responsible for handling VetSampleHealthAnimalEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.VetSampleHealthRepository.VetSampleHealthAnimalRepository.GetAnimalHealthEntityById(System.Int64)">
            <summary>
            Gets a single <see href="VetSampleHealthAnimalEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.VetSampleHealthAnimalEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.VetSampleHealthRepository.VetSampleHealthAnimalRepository.FindAnimalHealthEntitiesByAnimalNumber(System.Int64,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Finds all VetSampleHealthAnimalEntity in the database that matches the specified parameters.
            </summary>
            <param name="animalNumber"> AnimalNumber to use when finding entities.</param>
            <param name="vetSampleCode"></param>
            <param name="fromDate">Start date of period that AnimalHealths lies within.</param>
            <param name="toDate">End date of period that AnimalHealths lies within.</param>
            <param name="requestedCount">If set only specified number of AnimalHealths is returned in decending order.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.VetSampleHealthAnimalEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.VetSampleHealthRepository.VetSampleHealthAnimalRepository.FindAnimalHealthEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
             <summary>
             Finds all VetSampleHealthAnimalEntity in the database that matches the specified parameters.
             </summary>
            <param name="herdNumber">HerdNumber to use when finding entities.</param>
            <param name="animalType"></param>
            <param name="vetSampleCode"></param>
            <param name="fromDate">Start date of period that AnimalHealths lies within.</param>
            <param name="toDate">End date of period that AnimalHealths lies within.</param>
            <param name="requestedCount">If set only specified number of AnimalHealths is returned in decending order.</param>
            <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.VetSampleHealthAnimalEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Repositories.VetSampleHealthRepository.VetSampleHealthRepository">
            <summary>
            Repository responsible for handling VetSampleHealthEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.VetSampleHealthRepository.VetSampleHealthRepository.FindHerdHealthEntitiesByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
             <summary>
             Finds all VetSampleHealthEntity in the database that matches the specified parameters.
             </summary>
            <param name="herdNumber">HerdNumber to use when finding entities.</param>
             <param name="animalType">Type of animal to use when finding entities.</param>
             <param name="pcrSampleCode">PCR sample code. 13 or 14. If null, all HerdHealths matching the other criteria´s are returned.</param>
             <param name="fromDate">Start date of period that HerdHealths lies within.</param>
             <param name="toDate">End date of period that HerdHealths lies within.</param>
             <param name="requestedCount">If set only specified number of HerdHealths is returned in decending order.</param>
             <returns>A collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.VetSampleHealthEntity"/></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Repositories.WorklistEntityRepository.WorklistEntityRepository">
            <summary>
            Repository responsible for handling WorklistEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.WorklistEntityRepository.WorklistEntityRepository.GetAnimalDataByDistrictNumber(System.Int32,System.Nullable{System.Int32},DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalStatusEntity)">
            <summary>
            Finds all AnimalDataByDistrictNumber in the database that matches the specified <paramref name="districtNumber"/>
            </summary>
            <param name="districtNumber">Number use when finding entities.</param>
            <param name="age">Age in days</param>
            <param name="animalStatusCode">The status. eg. cow or bull</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.DataEntities.ReportDataEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.WorklistEntityRepository.WorklistEntityRepository.GetBullData">
            <summary>
            Gets all Bulls avalible
            </summary>
            <returns>A <see cref="T:DLBR.DCF.KDB.DataEntities.ReportDataEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.WorklistEntityRepository.WorklistEntityRepository.GetHerdRecordData(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Finds HerdRecords. The parameters provided, determine what is returned.
            If <paramref name="districtNumber"/> is provided, all records for that district is returned. 
            If a hedr number is provided aswell, it will be ignored!
            If <paramref name="herdNumber"/> is provided, all records whit that herd is returned. 
            If no parameter is provided, all records is returned.
            </summary>
            <param name="districtNumber">The district number.</param>
            <param name="herdNumber">Herd number</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.DataEntities.ReportDataEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.WorklistEntityRepository.WorklistEntityRepository.GetGHIData(System.Int64,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Gets GHI (Gødnings- og Husdyrindberetning) data for the danish Ministry of Food, Agriculture and Fisheries
            </summary>
            <param name="herdNumber">HerdNumber of the data to get from the database.</param>
            <param name="animalTypeCode">AnimalType Code of the data to get from the database.</param>
            <param name="fromDate">Start date of period that the GHI data lies within.</param>
            <param name="toDate">End date of period that the GHI data lies within.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.DataEntities.ReportDataEntity"/></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.WorklistEntityRepository.WorklistEntityRepository.GetReproductionObservationListByHerdNumber(System.Int64,DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Finds a reproduction observation list (reprodagsliste) for specified <paramref name="herdNumber"/>
            </summary>
            <param name="herdNumber">Number of the herd to get the list for.</param>
            <param name="animalType">Type of animals to get the list for.</param>
            <param name="listTypeHeifer">Whether the list should include heifers.</param>
            <param name="listTypeCow">Whether the list should include cows.</param>
            <param name="listGroupPregnancyCheck">Whether the list should include the list group "Pregnancy check"</param>
            <param name="listGroupHeatObservation">Whether the list should include the list group "Heat observation"</param>
            <param name="listGroupPreExamination">Whether the list should include the list group "Pre examination"</param>
            <param name="listGroupDryOff">Whether the list should include the list group "Dry off"</param>
            <param name="listGroupPrepareForCalving">Whether the list should include the list group "Prepare for calving"</param>
            <param name="listGroupPrepareHeifers">Whether the list should include the list group "Prepare heifers"</param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.WorklistEntityRepository.WorklistEntityRepository.GetReproObsListStatement(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Build statement to select data to reproduction observation list depending on specified list groups.
            The list group "PregnancyCheck" is always included even if it is not specified in the parameters. 
            There is no performance overhead in doing so, and at the same time it keeps this method more simple.
            </summary>
            <param name="isListTypeCow"></param>
            <param name="listGroupHeatObservation"></param>
            <param name="listGroupPreExamination"></param>
            <param name="listGroupDryOff"></param>
            <param name="listGroupPrepareForCalving"></param>
            <param name="listGroupPrepareHeifers"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.WorklistEntityRepository.WorklistEntityRepository.GenerateGHIData(System.Int64,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Used by GetGHIData method.
            Generates GHI data for later retrieval. The generated GHI data returns as separated periods in
            the view used by GetGHIData method.
            </summary>
            <param name="herdNumber">HerdNumber to generate GHI data by</param>
            <param name="animalTypeCode">Animaltype code to generate GHI data by</param>
            <param name="fromDate">Start date of range to generate GHI data within</param>
            <param name="toDate">End date of range to generate GHI data within</param>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_GOLDNINGER.HENTNYID">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_GOLDNINGER.HENTNYID.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_GOLDNINGER.HENTNYID.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_GOLDNINGER.HENTNYID.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_GOLDNINGER.HENTNYID.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_GOLDNINGER.HENTNYID.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_GOLDNINGER.HENTNYID.Parameters.pid">
            <summary>
            Output. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_GOLDNINGER.HND_GOLDNING">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_GOLDNINGER.HND_GOLDNING.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_GOLDNINGER.HND_GOLDNING.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_GOLDNINGER.HND_GOLDNING.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_GOLDNINGER.HND_GOLDNING.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_GOLDNINGER.HND_GOLDNING.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_GOLDNINGER.HND_GOLDNING.Parameters.pgoldningid">
            <summary>
            Input. Gets or sets the pgoldningid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_GOLDNINGER.HND_GOLDNING.Parameters.pdyrid">
            <summary>
            Input. Gets or sets the pdyrid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_GOLDNINGER.HND_GOLDNING.Parameters.pgoldningsdato">
            <summary>
            Input. Gets or sets the pgoldningsdato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_GOLDNINGER.HND_GOLDNING.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_GOLDNINGER.HND_GOLDNING.Parameters.pbesid">
            <summary>
            Input. Gets or sets the pbesid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_GOLDNINGER.HND_GOLDNING.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSBEHANDLING.HND_DRUS">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_INSBEHANDLING.HND_DRUS.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSBEHANDLING.HND_DRUS.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSBEHANDLING.HND_DRUS.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_INSBEHANDLING.HND_DRUS.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSBEHANDLING.HND_DRUS.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSBEHANDLING.HND_DRUS.Parameters.pckrdyr">
            <summary>
            Input. Gets or sets the pckrdyr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSBEHANDLING.HND_DRUS.Parameters.pidentnr">
            <summary>
            Input. Gets or sets the pidentnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSBEHANDLING.HND_DRUS.Parameters.pidtypekode">
            <summary>
            Input. Gets or sets the pidtypekode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSBEHANDLING.HND_DRUS.Parameters.phdato">
            <summary>
            Input. Gets or sets the phdato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSBEHANDLING.HND_DRUS.Parameters.pbem1">
            <summary>
            Input. Gets or sets the pbem1 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSBEHANDLING.HND_DRUS.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSBEHANDLING.HND_DRUS.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSBEHANDLING.HND_DRUS.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSBEHANDLING.HND_DRUS.Parameters.pbesid">
            <summary>
            Input. Gets or sets the pbesid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSBEHANDLING.HND_DRUS.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSBEHANDLING.HND_DRUS.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSEMINERING.DELETE_INSEMINERING_INSBES">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_INSEMINERING.DELETE_INSEMINERING_INSBES.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSEMINERING.DELETE_INSEMINERING_INSBES.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSEMINERING.DELETE_INSEMINERING_INSBES.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_INSEMINERING.DELETE_INSEMINERING_INSBES.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSEMINERING.DELETE_INSEMINERING_INSBES.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSEMINERING.DELETE_INSEMINERING_INSBES.Parameters.pbesid">
            <summary>
            Input. Gets or sets the pbesid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSEMINERING.DELETE_INSEMINERING_INSBES.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSEMINERING.DELETE_INSEMINERING_INSBES.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSEMINERING.HND_INSBES_PDA">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_INSEMINERING.HND_INSBES_PDA.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSEMINERING.HND_INSBES_PDA.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSEMINERING.HND_INSBES_PDA.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_INSEMINERING.HND_INSBES_PDA.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSEMINERING.HND_INSBES_PDA.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSEMINERING.HND_INSBES_PDA.Parameters.pckrdyrnr">
            <summary>
            Input. Gets or sets the pckrdyrnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSEMINERING.HND_INSBES_PDA.Parameters.pbesid">
            <summary>
            Input. Gets or sets the pbesid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSEMINERING.HND_INSBES_PDA.Parameters.pdato">
            <summary>
            Input. Gets or sets the pdato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSEMINERING.HND_INSBES_PDA.Parameters.pinsnr">
            <summary>
            Input. Gets or sets the pinsnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSEMINERING.HND_INSBES_PDA.Parameters.pstbnr">
            <summary>
            Input. Gets or sets the pstbnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSEMINERING.HND_INSBES_PDA.Parameters.pckrdyrnrtyr">
            <summary>
            Input. Gets or sets the pckrdyrnrtyr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSEMINERING.HND_INSBES_PDA.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSEMINERING.HND_INSBES_PDA.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSEMINERING.HND_INSBES_PDA.Parameters.pprodkdid">
            <summary>
            Input. Gets or sets the pprodkdid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_INSEMINERING.HND_INSBES_PDA.Parameters.pid">
            <summary>
            InputOutput. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.Parameters.pid">
            <summary>
            Input. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.Parameters.pbesnr">
            <summary>
            Input. Gets or sets the pbesnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.Parameters.pckrdyrnr">
            <summary>
            Input. Gets or sets the pckrdyrnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.Parameters.pkaelvedato">
            <summary>
            Input. Gets or sets the pkaelvedato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.Parameters.pckrdyrnrkalv">
            <summary>
            Input. Gets or sets the pckrdyrnrkalv parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.Parameters.pdyridkalv">
            <summary>
            Input. Gets or sets the pdyridkalv parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.Parameters.pkoenkode">
            <summary>
            Input. Gets or sets the pkoenkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.Parameters.pkaelvningsnr">
            <summary>
            Input. Gets or sets the pkaelvningsnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.Parameters.pforloeb">
            <summary>
            Input. Gets or sets the pforloeb parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.Parameters.pfoedstrkode">
            <summary>
            Input. Gets or sets the pfoedstrkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.Parameters.ptilstkode">
            <summary>
            Input. Gets or sets the ptilstkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.Parameters.pvaegt">
            <summary>
            Input. Gets or sets the pvaegt parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.Parameters.ppris">
            <summary>
            Input. Gets or sets the ppris parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.Parameters.pnavn">
            <summary>
            Input. Gets or sets the pnavn parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.Parameters.pnavnkort">
            <summary>
            Input. Gets or sets the pnavnkort parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.Parameters.pbesid">
            <summary>
            Input. Gets or sets the pbesid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.Parameters.padvtvillingflag">
            <summary>
            InputOutput. Gets or sets the padvtvillingflag parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_RET.Parameters.padvsletflag">
            <summary>
            InputOutput. Gets or sets the padvsletflag parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_SLET">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_KAELVNINGER.HND_KAELV_SLET.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_SLET.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_SLET.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_KAELVNINGER.HND_KAELV_SLET.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_SLET.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_SLET.Parameters.pkaelvid">
            <summary>
            Input. Gets or sets the pkaelvid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_SLET.Parameters.pkalvid">
            <summary>
            Input. Gets or sets the pkalvid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_SLET.Parameters.pbesid">
            <summary>
            Input. Gets or sets the pbesid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_KAELVNINGER.HND_KAELV_SLET.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_INDLAESINSRAEKKE">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_MASSEINS.HND_INDLAESINSRAEKKE.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_INDLAESINSRAEKKE.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_INDLAESINSRAEKKE.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_MASSEINS.HND_INDLAESINSRAEKKE.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_INDLAESINSRAEKKE.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_INDLAESINSRAEKKE.Parameters.pid">
            <summary>
            Input. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_MASSEINS.HND_INDLAESINSRAEKKE.Parameters.pbehandlerid">
            <summary>
            Input. Gets or sets the pbehandlerid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.DELETE_OMSAETNING">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_OMSAETNING.DELETE_OMSAETNING.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.DELETE_OMSAETNING.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.DELETE_OMSAETNING.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_OMSAETNING.DELETE_OMSAETNING.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.DELETE_OMSAETNING.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.DELETE_OMSAETNING.Parameters.pid">
            <summary>
            Input. Gets or sets the pid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.DELETE_OMSAETNING.Parameters.pbesid">
            <summary>
            Input. Gets or sets the pbesid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.DELETE_OMSAETNING.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.DELETE_OMSAETNING.Parameters.padvflag1">
            <summary>
            InputOutput. Gets or sets the padvflag1 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.DELETE_OMSAETNING.Parameters.padvflag2">
            <summary>
            InputOutput. Gets or sets the padvflag2 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.DELETE_OMSAETNING.Parameters.padvflag3">
            <summary>
            InputOutput. Gets or sets the padvflag3 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.DELETE_OMSAETNING.Parameters.padvflag4">
            <summary>
            InputOutput. Gets or sets the padvflag4 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.DELETE_OMSAETNING.Parameters.padvflag5">
            <summary>
            InputOutput. Gets or sets the padvflag5 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.DELETE_OMSAETNING.Parameters.padvflag6">
            <summary>
            InputOutput. Gets or sets the padvflag6 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.DELETE_OMSAETNING.Parameters.padvflag7">
            <summary>
            InputOutput. Gets or sets the padvflag7 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.DELETE_OMSAETNING.Parameters.padvflag8">
            <summary>
            InputOutput. Gets or sets the padvflag8 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.DELETE_OMSAETNING.Parameters.padvflag9">
            <summary>
            InputOutput. Gets or sets the padvflag9 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.DELETE_OMSAETNING.Parameters.padvflag10">
            <summary>
            InputOutput. Gets or sets the padvflag10 parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_OMSAETNING.HND_AFGANG.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_OMSAETNING.HND_AFGANG.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.pckrdyrnr">
            <summary>
            Input. Gets or sets the pckrdyrnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.pbesnrgl">
            <summary>
            Input. Gets or sets the pbesnrgl parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.pinternidnr">
            <summary>
            Input. Gets or sets the pinternidnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.pinternidtyp">
            <summary>
            Input. Gets or sets the pinternidtyp parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.pafgdato">
            <summary>
            Input. Gets or sets the pafgdato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.pomsaetkode">
            <summary>
            Input. Gets or sets the pomsaetkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.paarskode1">
            <summary>
            Input. Gets or sets the paarskode1 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.paarskode2">
            <summary>
            Input. Gets or sets the paarskode2 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.pbesnrny">
            <summary>
            Input. Gets or sets the pbesnrny parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.pnatkode">
            <summary>
            Input. Gets or sets the pnatkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.pvejemkode">
            <summary>
            Input. Gets or sets the pvejemkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.pvejetkode">
            <summary>
            Input. Gets or sets the pvejetkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.pvaegt">
            <summary>
            Input. Gets or sets the pvaegt parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.ppris">
            <summary>
            Input. Gets or sets the ppris parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.pbrystomf">
            <summary>
            Input. Gets or sets the pbrystomf parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.pbesid">
            <summary>
            Input. Gets or sets the pbesid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.pbilnr">
            <summary>
            Input. Gets or sets the pbilnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.pbilnation">
            <summary>
            Input. Gets or sets the pbilnation parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.ptranspautnr">
            <summary>
            Input. Gets or sets the ptranspautnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.pomsid">
            <summary>
            InputOutput. Gets or sets the pomsid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.padvflag1">
            <summary>
            InputOutput. Gets or sets the padvflag1 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.padvflag2">
            <summary>
            InputOutput. Gets or sets the padvflag2 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.padvflag3">
            <summary>
            InputOutput. Gets or sets the padvflag3 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.padvflag4">
            <summary>
            InputOutput. Gets or sets the padvflag4 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.padvflag5">
            <summary>
            InputOutput. Gets or sets the padvflag5 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.padvflag6">
            <summary>
            InputOutput. Gets or sets the padvflag6 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.padvflag7">
            <summary>
            InputOutput. Gets or sets the padvflag7 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.padvflag8">
            <summary>
            InputOutput. Gets or sets the padvflag8 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.padvflag9">
            <summary>
            InputOutput. Gets or sets the padvflag9 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_AFGANG.Parameters.padvflag10">
            <summary>
            InputOutput. Gets or sets the padvflag10 parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_OMSAETNING.HND_INDGANG.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_OMSAETNING.HND_INDGANG.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.pckrdyrnr">
            <summary>
            Input. Gets or sets the pckrdyrnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.pbesnrny">
            <summary>
            Input. Gets or sets the pbesnrny parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.pdyreart">
            <summary>
            Input. Gets or sets the pdyreart parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.pindgangsdato">
            <summary>
            Input. Gets or sets the pindgangsdato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.pvejedato">
            <summary>
            Input. Gets or sets the pvejedato parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.pvejemkode">
            <summary>
            Input. Gets or sets the pvejemkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.pvejetkode">
            <summary>
            Input. Gets or sets the pvejetkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.pvaegt">
            <summary>
            Input. Gets or sets the pvaegt parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.ppris">
            <summary>
            Input. Gets or sets the ppris parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.pbrystomfang">
            <summary>
            Input. Gets or sets the pbrystomfang parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.pbesnrgl">
            <summary>
            Input. Gets or sets the pbesnrgl parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.pnatkode">
            <summary>
            Input. Gets or sets the pnatkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.pinternidentnr">
            <summary>
            Input. Gets or sets the pinternidentnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.pinternidtype">
            <summary>
            Input. Gets or sets the pinternidtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.phndtype">
            <summary>
            Input. Gets or sets the phndtype parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.pomsaetkode">
            <summary>
            Input. Gets or sets the pomsaetkode parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.pbesid">
            <summary>
            Input. Gets or sets the pbesid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.pbilnr">
            <summary>
            Input. Gets or sets the pbilnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.pbilnation">
            <summary>
            Input. Gets or sets the pbilnation parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.ptranspautnr">
            <summary>
            Input. Gets or sets the ptranspautnr parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.pidoms">
            <summary>
            InputOutput. Gets or sets the pidoms parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.padvflag1">
            <summary>
            InputOutput. Gets or sets the padvflag1 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.padvflag2">
            <summary>
            InputOutput. Gets or sets the padvflag2 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.padvflag3">
            <summary>
            InputOutput. Gets or sets the padvflag3 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.padvflag4">
            <summary>
            InputOutput. Gets or sets the padvflag4 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.padvflag5">
            <summary>
            InputOutput. Gets or sets the padvflag5 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.padvflag6">
            <summary>
            InputOutput. Gets or sets the padvflag6 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.padvflag7">
            <summary>
            InputOutput. Gets or sets the padvflag7 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.padvflag8">
            <summary>
            InputOutput. Gets or sets the padvflag8 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.padvflag9">
            <summary>
            InputOutput. Gets or sets the padvflag9 parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_OMSAETNING.HND_INDGANG.Parameters.padvflag10">
            <summary>
            InputOutput. Gets or sets the padvflag10 parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_PDAUDTRAEK.BATCH_DAN_PDA_UDTRAEK">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_PDAUDTRAEK.BATCH_DAN_PDA_UDTRAEK.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_PDAUDTRAEK.BATCH_DAN_PDA_UDTRAEK.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_PDAUDTRAEK.BATCH_DAN_PDA_UDTRAEK.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_PDAUDTRAEK.BATCH_DAN_PDA_UDTRAEK.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_PDAUDTRAEK.BATCH_DAN_PDA_UDTRAEK.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_PDAUDTRAEK.BATCH_DAN_PDA_UDTRAEK.Parameters.pversid">
            <summary>
            Input. Gets or sets the pversid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_PDAUDTRAEK.BATCH_DAN_PDA_UDTRAEK.Parameters.pbesid">
            <summary>
            Input. Gets or sets the pbesid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_PDAUDTRAEK.BATCH_DAN_PDA_UDTRAEK.Parameters.pbehandlerid">
            <summary>
            Input. Gets or sets the pbehandlerid parameter.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.DCF_SERVICES.K_PDAUDTRAEK.BATCH_DAN_PDA_UDTRAEK.Parameters.pindlaestid">
            <summary>
            Input. Gets or sets the pindlaestid parameter.
            </summary>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IClassificationRepository">
            <summary>
            Interface to repository responsible for handling various classifications.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetAdvisorTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AdvisorTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AdvisorTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetAnimalColorCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalColorEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalColorEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetAnimalOriginCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalOriginEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalOriginEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetAnimalRaceCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalRaceEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalRaceEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetAnimalSizeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalSizeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalSizeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetAnimalStatusCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalStatusEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalStatusEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetAnimalTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetCalvingOutcomeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.CalvingOutcomeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.CalvingOutcomeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetCalvingProgressCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.CalvingProgressEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.CalvingProgressEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetGenderCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.GenderEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.GenderEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetHerdTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.HerdTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.HerdTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetInseminationTreatmentCodeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationTreatmentCodeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationTreatmentCodeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetInseminationProductCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationProductEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationProductEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetNationalityCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.NationalityEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.NationalityEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetVetSampleTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.VetSampleTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.VetSampleTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetTwinCodeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.TwinCodeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.TwinCodeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetAnimalTransferTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTransferTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTransferTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetTransferCauseCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.TransferCauseEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.TransferCauseEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetWeighingTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.WeighingTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.WeighingTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetWeighingMethodCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.WeighingMethodEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.WeighingMethodEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetInsOwnerCategoryCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InsOwnerCategoryEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InsOwnerCategoryEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetMilkRecordingNoteCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.MilkRecordingNoteEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.MilkRecordingNoteEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetCullingTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.CullingTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.CullingTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetHerdRemarkTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.HerdRemarkTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.HerdRemarkTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetDiseaseTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetDiseaseSiteCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseSiteEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseSiteEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetDiseaseCharacteristicCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseCharacteristicEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseCharacteristicEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetDiseaseTreatmentMethodCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseTreatmentMethodEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseTreatmentMethodEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetDiseaseSeverityCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseSeverityEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseSeverityEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetClinicalParameterCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ClinicalParameterEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ClinicalParameterEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetInternalAnimalIdentifierTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InternalAnimalIdentifierTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InternalAnimalIdentifierTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetDrugCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DrugEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DrugEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetDrugUsageCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DrugUsageEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DrugUsageEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetDrugUnitCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DrugUnitEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DrugUnitEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetAnimalGroupCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalGroupEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalGroupEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetPrescriptionGroupCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.PrescriptionGroupEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.PrescriptionGroupEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetMeatRetentionUnitCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.MeatRetentionUnitEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.MeatRetentionUnitEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetMilkRetentionUnitCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.MilkRetentionUnitEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.MilkRetentionUnitEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetKeyFigureTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.KeyFigureTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.KeyFigureTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetTargetTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.TargetTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.TargetTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetEarmarkOptionalTextTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkOptionalTextTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkOptionalTextTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetEarmarkColorTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkColorTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkColorTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetEarmarkManufacturerTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language,System.Nullable{System.Int32})">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkManufacturerTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <param name="animalTypeCode"></param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkManufacturerTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetEarmarkArticleTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkArticleTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkArticleTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetAnimalEventLogTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalEventLogTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalEventLogTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetPostingTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.PostingTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.PostingTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetProductionTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ProductionTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ProductionTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetManagementUnitTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ManagementUnitTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ManagementUnitTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetInseminatorTimeRecordPartCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InseminatorTimeRecordPartEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InseminatorTimeRecordPartEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetInseminatorHomeTimeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            
            </summary>
            <param name="language"></param>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IClassificationRepository.GetVetSamplePCRTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            GetVetSamplePCRTypeCollection
            </summary>
            <param name="language"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IInseminationRouteEntityRepository">
            <summary>
            Interface to repository responsible for handling InseminationRouteEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminationRouteEntityRepository.GetInseminationRouteEntityById(System.Int64)">
            <summary>
            Gets a single <see href="InseminationRouteEntity"/> from the database, using the specified <paramref name="id"/>.
            </summary>
            <param name="id">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationRouteEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminationRouteEntityRepository.InsertInseminationRouteEntity(DLBR.DCF.KDB.BusinessEntities.InseminationRouteEntity)">
            <summary>
            Inserts the specified <paramref name="entity"/> into the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationRouteEntity"/> to insert.</param>
            <returns>The id of the newly inserted <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationRouteEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminationRouteEntityRepository.UpdateInseminationRouteEntity(DLBR.DCF.KDB.BusinessEntities.InseminationRouteEntity)">
            <summary>
            Updates the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationRouteEntity"/> to update.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminationRouteEntityRepository.DeleteInseminationRouteEntity(DLBR.DCF.KDB.BusinessEntities.InseminationRouteEntity)">
            <summary>
            Deletes the entity with the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationRouteEntity"/> to delete.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminationRouteEntityRepository.RegisterInseminationRoute(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Registeres the specified <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationRouteEntity"/>, ie. transfers the data to the central cattle database.
            </summary>
            <param name="Id">Id of the entity to register.</param>
            <param name="advisorId">Id of the advisor registering the data.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminationRouteEntityRepository.FindInseminationRouteEntities(System.Nullable{System.Int32},System.Nullable{System.Int32},DLBR.DCF.KDB.BusinessEntities.Classifications.InsOwnerCategoryEntity)">
            <summary>
            Gets a collection of <see href="InseminationRouteEntity"/> from the database using the specified parameters and the date of the entity being greather than the default date
            Default date is defined as todays date minus a year.
            </summary>
            <param name="inseminatorNumber">Inseminator number.</param>
            <param name="districtNumber">District Number.</param>
            <param name="insOwnerCategory">InsOwnerCategory.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationRouteEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IInseminationTreatmentEntityRepository">
            <summary>
            Interface to repository responsible for handling InseminationTreatmentEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminationTreatmentEntityRepository.GetInseminationTreatmentEntityById(System.Int64)">
            <summary>
            Gets a single <see href="InseminationTreatmentEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the database.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationTreatmentEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminationTreatmentEntityRepository.InsertInseminationTreatmentEntity(DLBR.DCF.KDB.BusinessEntities.InseminationTreatmentEntity)">
            <summary>
            Inserts the specified <paramref name="entity"/> into the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationTreatmentEntity"/> to insert.</param>
            <returns>The id of the newly inserted <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationTreatmentEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminationTreatmentEntityRepository.UpdateInseminationTreatmentEntity(DLBR.DCF.KDB.BusinessEntities.InseminationTreatmentEntity)">
            <summary>
            Updates the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationTreatmentEntity"/> to update.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminationTreatmentEntityRepository.DeleteInseminationTreatmentEntity(DLBR.DCF.KDB.BusinessEntities.InseminationTreatmentEntity)">
            <summary>
            Deletes the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationTreatmentEntity"/> to delete.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminationTreatmentEntityRepository.RegisterInseminationTreatment(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Registeres the specified <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationTreatmentEntity"/>, ie. transfers the data to the central cattle database.
            </summary>
            <param name="entityId">Id of the entity to register.</param>
            <param name="advisorId">Id of the advisor registering the data.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IInseminationTreatmentEntityRepository.FindInseminationTreatmentEntities(System.Nullable{System.Int32},System.Nullable{System.Int32},DLBR.DCF.KDB.BusinessEntities.Classifications.InsOwnerCategoryEntity)">
            <summary>
            Gets a collection of <see href="InseminationTreatmentEntity"/> from the database using the specified parameters and the date of the entity being greather than the default date
            Default date is defined as todays date minus a year.
            </summary>
            <param name="inseminatorNumber">Number of the inseminator. If null, it's not used in the SQL clause.</param>
            <param name="districtNumber">Number of the District. If null, it's not used in the SQL clause.</param>
            <param name="insOwnerCategory">Owner category. If null, it's not used in the SQL clause.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationTreatmentEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.InseminationRouteEntityRepository.InseminationRouteEntityFactory">
            <summary>
            Factory responsible for creating instances of the InseminationRouteEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminationRouteEntityRepository.InseminationRouteEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationRouteEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationRouteEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.InseminationRouteEntityRepository.InseminationRouteEntityRepository">
            <summary>
            Repository responsible for handling InseminationRouteEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminationRouteEntityRepository.InseminationRouteEntityRepository.GetInseminationRouteEntityById(System.Int64)">
            <summary>
            Gets a single <see href="InseminationRouteEntity"/> from the database, using the specified <paramref name="id"/>.
            </summary>
            <param name="id">Id of the entity to get from the data</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationRouteEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminationRouteEntityRepository.InseminationRouteEntityRepository.InsertInseminationRouteEntity(DLBR.DCF.KDB.BusinessEntities.InseminationRouteEntity)">
            <summary>
            Inserts the specified <paramref name="entity"/> into the data
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationRouteEntity"/> to insert.</param>
            <returns>The id of the newly inserted <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationRouteEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminationRouteEntityRepository.InseminationRouteEntityRepository.UpdateInseminationRouteEntity(DLBR.DCF.KDB.BusinessEntities.InseminationRouteEntity)">
            <summary>
            Updates the specified <paramref name="entity"/> in the data
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationRouteEntity"/> to insert.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminationRouteEntityRepository.InseminationRouteEntityRepository.DeleteInseminationRouteEntity(DLBR.DCF.KDB.BusinessEntities.InseminationRouteEntity)">
            <summary>
            Deletes the entity with the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationRouteEntity"/> to delete.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminationRouteEntityRepository.InseminationRouteEntityRepository.FindInseminationRouteEntities(System.Nullable{System.Int32},System.Nullable{System.Int32},DLBR.DCF.KDB.BusinessEntities.Classifications.InsOwnerCategoryEntity)">
            <summary>
            Gets a collection of <see href="InseminationRouteEntity"/> from the database using the specified parameters and the date of the entity being greather than the default date
            Default date is defined as todays date minus a year.
            </summary>
            <param name="inseminatorNumber">Inseminator number.</param>
            <param name="districtNumber">District Number.</param>
            <param name="insOwnerCategory">InsOwnerCategory.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationRouteEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.InseminationTreatmentEntityRepository.InseminationTreatmentEntityFactory">
            <summary>
            Factory responsible for creating instances of the InseminationTreatmentEntity business entity.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminationTreatmentEntityRepository.InseminationTreatmentEntityFactory.Construct(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationTreatmentEntity"/> business entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationTreatmentEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.InseminationTreatmentEntityRepository.InseminationTreatmentEntityRepository">
            <summary>
            Repository responsible for handling InseminationTreatmentEntity business entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminationTreatmentEntityRepository.InseminationTreatmentEntityRepository.GetInseminationTreatmentEntityById(System.Int64)">
            <summary>
            Gets a single <see href="InseminationTreatmentEntity"/> from the database, using the specified <paramref name="entityId"/>.
            </summary>
            <param name="entityId">Id of the entity to get from the data</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationTreatmentEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminationTreatmentEntityRepository.InseminationTreatmentEntityRepository.InsertInseminationTreatmentEntity(DLBR.DCF.KDB.BusinessEntities.InseminationTreatmentEntity)">
            <summary>
            Inserts the specified <paramref name="entity"/> into the data
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationTreatmentEntity"/> to insert.</param>
            <returns>The id of the newly inserted <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationTreatmentEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminationTreatmentEntityRepository.InseminationTreatmentEntityRepository.UpdateInseminationTreatmentEntity(DLBR.DCF.KDB.BusinessEntities.InseminationTreatmentEntity)">
            <summary>
            Updates the specified <paramref name="entity"/> in the data
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationTreatmentEntity"/> to insert.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminationTreatmentEntityRepository.InseminationTreatmentEntityRepository.DeleteInseminationTreatmentEntity(DLBR.DCF.KDB.BusinessEntities.InseminationTreatmentEntity)">
            <summary>
            Deletes the specified <paramref name="entity"/> in the database.
            </summary>
            <param name="entity">The <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationTreatmentEntity"/> to delete.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.InseminationTreatmentEntityRepository.InseminationTreatmentEntityRepository.FindInseminationTreatmentEntities(System.Nullable{System.Int32},System.Nullable{System.Int32},DLBR.DCF.KDB.BusinessEntities.Classifications.InsOwnerCategoryEntity)">
            <summary>
            Gets a collection of <see href="InseminationTreatmentEntity"/> from the database using the specified parameters and the date of the entity being greather than the default date
            Default date is defined as todays date minus a year.
            </summary>
            <param name="inseminatorNumber">Number of the inseminator. If null, it's not used in the SQL clause.</param>
            <param name="districtNumber">Number of the District. If null, it's not used in the SQL clause.</param>
            <param name="insOwnerCategory">Owner category. If null, it's not used in the SQL clause.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.BusinessEntities.InseminationTreatmentEntity"/> business entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.RepositoryFactory">
            <summary>
            Factory responsible for creating repository instances.
            </summary>
            <summary>
            Factory responsible for creating repository instances.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateInseminationRouteEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IInseminationRouteEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateInseminationTreatmentEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IInseminationTreatmentEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateCalvingEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.ICalvingEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateAdvisorEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IAdvisorEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateAnimalEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IAnimalEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateHerdEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IHerdEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateHerdAddressEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IHerdAddressEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateVetSampleTypeResultEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IVetSampleTypeResultEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateHerdHealthStatusEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IHerdHealthStatusEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateDryPeriodEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IDryPeriodEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateReproductionStatusEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IReproductionStatusEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateInseminationEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IInseminationEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreatePracticeEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IPracticeEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateAnimalTransferRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IAnimalTransferEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateKPOAnimalTransferRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IPregnancyCheckEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreatePregnancyCheckEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IPregnancyCheckEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateMilkRecordingEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IMilkRecordingEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateLactationRecordEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.ILactationRecordEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateAnimalWeightEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IAnimalWeightEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateCullingEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.ICullingEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateMatingSchemeEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IMatingSchemeEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateHerdRemarkEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IHerdRemarkEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateAnimalHealthEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IAnimalHealthEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateVetSampleHealthRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IVetSampleHealthRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateVetSampleHealthAnimalRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IAnimalHealthEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateCowmarketInformationRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.Interfaces.ICowmarketInformationRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateCowmarketHealthInformationRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.Interfaces.ICowmarketHealthInformationRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateCowmarketBaseInformationRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.Interfaces.ICowmarketBaseInformationRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateCowmarketTransferRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.Interfaces.ICowmarketTransferRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateClinicalRecordingEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IClinicalRecordingEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateInseminatorTourplanEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IInseminatorTourplanEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateInternalAnimalIdentifierEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IInternalAnimalIdentifierEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateSemenInventoryEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.ISemenInventoryEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateSemenDistrictInventoryEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.ISemenInventoryEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateMedicationEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IMedicationEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateMilkDeliveryEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IMilkDeliveryEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateMilkQuotaEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IMilkQuotaEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateKeyFigureEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IKeyFigureEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateTargetEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.ITargetEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateNaturalServiceEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.INaturalServiceEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateEarmarkOrderEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IEarmarkOrderEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateAnimalGroupTransferEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IAnimalGroupTransferEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateAnimalEventLogEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IAnimalEventLogEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateAgriBusinessEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IAgriBusinessEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreatePensionEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IPensionEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateOrganicEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IOrganicEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateManagementUnitEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IManagementUnitEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreatePostingEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IPostingEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateCvrInfoEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.ICvrInfoEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateCprInfoEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.ICprInfoEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateGeneticsEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IGeneticsEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateInseminatorTimeRecordEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IInseminatorTimeRecordEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateDiagnosisEntityRepository">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateDiagnosisTreatmentEntityRepository">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateTreatmentEntityRepository">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateTreatmentLineEntityRepository">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateHerdInfoEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IHerdInfoEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateHerdInfoVFLEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IHerdInfoVFLEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateInvoiceInfoEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IInvoiceInfoEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateSubscriberInvoiceEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.ISubscriberInvoiceEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateSubscriberInvoiceVFLEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.ISubscriberInvoiceVFLEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateSubscriberContactInfoEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.ISubscriberContactInfoEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateInvoicePDFEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IInvoicePDFEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateAppendixPDFEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IAppendixPDFEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateEventInfoEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IEventInfoEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateEventTimeLogEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IEventTimeLogEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateModuleEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.GeneratedCode.DataAccess.Interfaces.IModuleEntityRepository"/> interface.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateDescentEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.Interfaces.IDescentEntityRepository"/> interface.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateBenchmarkCriteriaEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.Interfaces.IBenchmarkCriteriaEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateClassificationRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IClassificationRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateReportDataRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IReportDataEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateWorklistRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IWorklistEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateCDbManagementRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.Interfaces.ICDbManagementRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateHerdOwnerUserEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.Interfaces.IHerdOwnerUserEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateSireEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.ISireEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateNordicClassificationRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.Interfaces.INordicClassificationRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateReportFileEntityRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IReportFileEntityRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateDMSLogRepository">
            <summary>
            Creates an instance of a repository that implements the <see cref="T:DLBR.DCF.KDB.DataAccess.IDMSLogRepository"/> interface.
            </summary>
            <returns>Returns a repository instance.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateReportingServicesRepository">
            <summary>
            Creates the reporting services repository.
            </summary>
            <returns>A repository instance</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateBasicInformationEntityRepository">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateBasicInformationValidationRepository">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateBasicInformationFeedingPrincipRepository">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateBasicMetadataUnitEntityRepository">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateAnimalNumberInfoEntityRepository">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateTargetInformationEntityRepository">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateTargetInformationCategoryRepository">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateHomeTimeEntityRepository">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.RepositoryFactory.CreateDeliveredSemenEntityRepository">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.IReportDataEntityRepository">
            <summary>
            Interface to repository responsible for handling reports.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IReportDataEntityRepository.GenerateReportData(System.Int64,System.Int64)">
            <summary>
            Order a report. The report is created asyncronously, so this method returns after the report has been ordered. Use <see cref="M:DLBR.DCF.KDB.DataAccess.IReportDataEntityRepository.GetReportData(System.Int64,System.Int64)"/> to get the report data
            after is has been generated.
            </summary>
            <param name="reportId">Id of the report to order.</param>
            <param name="herdId">Id of the herd from which data must be collected.</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IReportDataEntityRepository.GetReportData(System.Int64,System.Int64)">
            <summary>
            Gets the report data after is has been created.
            </summary>
            <param name="reportId">Id of the report that was ordered.</param>
            <param name="herdId">Id of the herd used to generate the report.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.DataEntities.ReportDataEntity"/> containing the data collected.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IReportDataEntityRepository.GetReportStatus(System.Int64,System.Int64)">
            <summary>
            Gets the status of the report data after is has been requested.
            </summary>
            <param name="reportId">Id of the report that was ordered.</param>
            <param name="herdId">Id of the herd used to generate the report.</param>
            <returns>A <see cref="T:DLBR.DCF.KDB.DataEntities.ReportStatusEntity"/> containing the status of the report.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.IReportDataEntityRepository.GetReportId(System.String,System.Int64)">
            <summary>
            Gets the id of a report from the name of the report.
            </summary>
            <param name="reportName">Name of the report.</param>
            <param name="advisorNumber">AdvisorNumber specifying the advisor that "owns" the report.</param>
            <returns>The id of the report. If the report is not found, this method returns null.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory">
            <summary>
            Factory responsible for creating instances of classification code entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructAdvisorTypeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AdvisorTypeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AdvisorTypeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructAnimalColorEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalColorEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalColorEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructAnimalOriginEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalOriginEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalOriginEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructAnimalTypeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructHerdTypeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.HerdTypeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.HerdTypeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructGenderEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.GenderEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.GenderEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructAnimalSizeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalSizeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalSizeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructCalvingOutcomeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.CalvingOutcomeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.CalvingOutcomeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructCalvingProgressEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.CalvingProgressEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.CalvingProgressEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructTwinCodeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.TwinCodeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.TwinCodeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructAnimalRaceEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalRaceEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalRaceEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructAnimalStatusEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalStatusEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalStatusEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructInseminationTreatmentCodeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationTreatmentCodeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationTreatmentCodeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructInseminationProductEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationProductEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationProductEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructNationalityEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.NationalityEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.NationalityEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructVetSampleTypeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.VetSampleTypeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.VetSampleTypeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructVetSamplePCRTypeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.VetSampleTypeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.VetSampleTypeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructAnimalTransferTypeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTransferTypeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTransferTypeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructTransferCauseEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.TransferCauseEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.TransferCauseEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructWeighingTypeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.WeighingTypeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.WeighingTypeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructWeighingMethodEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.WeighingMethodEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.WeighingMethodEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructInsOwnerCategoryEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InsOwnerCategoryEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InsOwnerCategoryEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructMilkRecordingNoteEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.MilkRecordingNoteEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.MilkRecordingNoteEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructCullingTypeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.CullingTypeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.CullingTypeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructHerdRemarkTypeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.HerdRemarkTypeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.HerdRemarkTypeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructDiseaseTypeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseTypeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseTypeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructDiseaseSiteEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseSiteEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseSiteEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructDiseaseCharacteristicEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseCharacteristicEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseCharacteristicEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructDiseaseTreatmentMethodEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseTreatmentMethodEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseTreatmentMethodEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructDiseaseSeverityEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseSeverityEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseSeverityEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructClinicalParameterEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ClinicalParameterEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ClinicalParameterEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructInternalAnimalIdentifierTypeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructInternalAnimalIdentifierTypeEntity(System.Data.IDataReader)"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructInternalAnimalIdentifierTypeEntity(System.Data.IDataReader)"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructDrugEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DrugEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DrugEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructDrugUsageEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DrugUsageEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DrugUsageEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructDrugUnitEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DrugUnitEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DrugUnitEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructAnimalGroupEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalGroupEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalGroupEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructPrescriptionGroupEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.PrescriptionGroupEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.PrescriptionGroupEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructMeatRetentionUnitEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.MeatRetentionUnitEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.MeatRetentionUnitEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructMilkRetentionUnitEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.MilkRetentionUnitEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.MilkRetentionUnitEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructKeyFigureTypeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.KeyFigureTypeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.KeyFigureTypeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructTargetTypeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.TargetTypeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.TargetTypeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructEarmarkOptionalTextTypeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkOptionalTextTypeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkOptionalTextTypeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructEarmarkColorTypeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkColorTypeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkColorTypeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructEarmarkManufacturerTypeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkManufacturerTypeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkManufacturerTypeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructEarmarkArticleTypeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkArticleTypeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkArticleTypeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructAnimalOccurrenceTypeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalEventLogTypeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalEventLogTypeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructPostingTypeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.PostingTypeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.PostingTypeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructProductionTypeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ProductionTypeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ProductionTypeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructManagementUnitTypeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ManagementUnitTypeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ManagementUnitTypeEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructInseminatorTimeRecordPartEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InseminatorTimeRecordPartEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InseminatorTimeRecordPartEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationEntityFactory.ConstructInseminatorHomeTimeEntity(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InseminatorHomeTimeEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InseminatorHomeTimeEntity"/> entity.</returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository">
            <summary>
            Repository responsible for handling classification code entities.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetAdvisorTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AdvisorTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AdvisorTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetAnimalColorCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalColorEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalColorEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetAnimalOriginCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalOriginEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalOriginEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetAnimalRaceCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalRaceEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalRaceEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetAnimalSizeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalSizeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalSizeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetAnimalStatusCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalStatusEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalStatusEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetAnimalTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetCalvingOutcomeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.CalvingOutcomeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.CalvingOutcomeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetCalvingProgressCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.CalvingProgressEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.CalvingProgressEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetGenderCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.GenderEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.GenderEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetHerdTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.HerdTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.HerdTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetInseminationTreatmentCodeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationTreatmentCodeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationTreatmentCodeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetInseminationProductCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationProductEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InseminationProductEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetNationalityCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.NationalityEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.NationalityEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetVetSampleTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.VetSampleTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.VetSampleTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetVetSamplePCRTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.VetSampleTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.VetSampleTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetTwinCodeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.TwinCodeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.TwinCodeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetAnimalTransferTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTransferTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalTransferTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetTransferCauseCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.TransferCauseEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.TransferCauseEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetWeighingTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.WeighingTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.WeighingTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetWeighingMethodCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.WeighingMethodEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.WeighingMethodEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetInsOwnerCategoryCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InsOwnerCategoryEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InsOwnerCategoryEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetMilkRecordingNoteCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.MilkRecordingNoteEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.MilkRecordingNoteEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetCullingTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.CullingTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.CullingTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetDiseaseTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetDiseaseSiteCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseSiteEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseSiteEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetDiseaseCharacteristicCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseCharacteristicEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseCharacteristicEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetDiseaseTreatmentMethodCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseTreatmentMethodEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseTreatmentMethodEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetDiseaseSeverityCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseSeverityEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DiseaseSeverityEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetClinicalParameterCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ClinicalParameterEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ClinicalParameterEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetInternalAnimalIdentifierTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InternalAnimalIdentifierTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InternalAnimalIdentifierTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetDrugCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DrugEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DrugEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetDrugUsageCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DrugUsageEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DrugUsageEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetDrugUnitCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DrugUnitEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.DrugUnitEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetAnimalGroupCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalGroupEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalGroupEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetPrescriptionGroupCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.PrescriptionGroupEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.PrescriptionGroupEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetMeatRetentionUnitCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.MeatRetentionUnitEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.MeatRetentionUnitEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetMilkRetentionUnitCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.MilkRetentionUnitEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The cultureInfo to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.MilkRetentionUnitEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetKeyFigureTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.KeyFigureTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.KeyFigureTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetTargetTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.TargetTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.TargetTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetEarmarkOptionalTextTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkOptionalTextTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkOptionalTextTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetEarmarkColorTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkColorTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkColorTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetEarmarkManufacturerTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language,System.Nullable{System.Int32})">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkManufacturerTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <param name="animalTypeCode"></param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkManufacturerTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetEarmarkArticleTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkArticleTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.EarmarkArticleTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetAnimalEventLogTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalEventLogTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.AnimalEventLogTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetPostingTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.PostingTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.PostingTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetProductionTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ProductionTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ProductionTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetManagementUnitTypeCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ManagementUnitTypeEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.ManagementUnitTypeEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ClassificationRepository.ClassificationRepository.GetInseminatorTimeRecordPartCollection(DLBR.DCF.KDB.BusinessEntities.Language)">
            <summary>
            Gets all <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InseminatorTimeRecordPartEntity"/> classification codes corresponding to the specified <paramref name="language"/>.
            </summary>
            <param name="language">The language to use for localization of the description of the codes.</param>
            <returns>Returns a collection of <see cref="T:DLBR.DCF.KDB.BusinessEntities.Classifications.InseminatorTimeRecordPartEntity"/>.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ReportDataEntityRepository.ReportDataEntityFactory.ConstructReportDataEntity(System.Data.IDataReader,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.DataEntities.ReportDataFieldDescriptionEntity})">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.DataEntities.ReportDataEntity"/> entity with data from the specified <paramref name="dataReader"/>.
            </summary>
            <param name="dataReader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the entity.</param>
            <param name="fieldDescriptionCollection">A collection of <see cref="T:DLBR.DCF.KDB.DataEntities.ReportDataFieldDescriptionEntity"/> describing the fields in the report.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.DataEntities.ReportDataEntity"/> entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ReportDataEntityRepository.ReportDataEntityFactory.ConstructReportDataEntityFromWorklist(System.Data.IDataReader)">
            <summary>
            Constructs a new instance of the <see cref="T:DLBR.DCF.KDB.DataEntities.ReportDataEntity"/> business entity with data from the specified <paramref name="reader"/>.
            </summary>
            <param name="reader">A <see cref="T:System.Data.IDataReader"/> containing the data needed to construct the business entity.</param>
            <returns>Returns a new instance of the <see cref="T:DLBR.DCF.KDB.DataEntities.ReportDataEntity"/> business entity.</returns>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ReportDataEntityRepository.ReportDataEntityFactory.GetFieldDescriptions(System.Data.IDataReader,System.Collections.ObjectModel.Collection{DLBR.DCF.KDB.DataEntities.ReportDataFieldDescriptionEntity})">
            <summary>
            Gets the name, type and position of the colums
            </summary>
            <param name="reader">Data Reader</param>
            <param name="fieldDescription">Object holding the field descriptions</param>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.Repositories.ReportDataEntityRepository.ReportDataEntityRepository.GetReportStatus(System.Int64,System.Int64)">
            <summary>
            Gets status of the latest requested report
            </summary>
            <param name="reportId"></param>
            <param name="herdId"></param>
            <returns></returns>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.KpiService.HND_demaalvaerdi">
            <summary>
            Wrapper class for the stored procedure DCF_SERVICES.K_DEMAALVAERDI.HND_DEMAALVAERDI.
            </summary>
        </member>
        <member name="M:DLBR.DCF.KDB.DataAccess.StoredProcedures.KpiService.HND_demaalvaerdi.Execute(Oracle.DataAccess.Client.OracleConnection,Oracle.DataAccess.Client.OracleTransaction,DLBR.DCF.KDB.DataAccess.StoredProcedures.KpiService.HND_demaalvaerdi.Parameters@)">
            <summary>
            Executes the stored procedure DCF_SERVICES.K_DEMAALVAERDI.HND_DEMAALVAERDI.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">An existing transaction to use when executing the stored procedure. If value is null a new transaction is used.</param>
            <param name="parameters">A <see href="Parameters"/> instance, containing the parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if value of <paramref name="connection"/> is null.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.ConnectionNotOpenException">Thrown if the connection is not open.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.TransactionNotValidException">Thrown if the transaction relates to another connection than specified.</exception>
            <exception cref="T:DLBR.DCF.Repository.Exceptions.RepositoryExecuteFailureException">Thrown if the call to the stored procedure fails.</exception>
        </member>
        <member name="T:DLBR.DCF.KDB.DataAccess.StoredProcedures.KpiService.HND_demaalvaerdi.Parameters">
            <summary>
            Class containing all parameters needed to execute the stored procedure.
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.KpiService.HND_demaalvaerdi.Parameters.pid">
            <summary>
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.KpiService.HND_demaalvaerdi.Parameters.pdentid">
            <summary>
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.KpiService.HND_demaalvaerdi.Parameters.pdriftsenhid">
            <summary>
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.KpiService.HND_demaalvaerdi.Parameters.pvaerdi">
            <summary>
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.KpiService.HND_demaalvaerdi.Parameters.palarmgraenseoevre">
            <summary>
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.KpiService.HND_demaalvaerdi.Parameters.palarmgraensenedre">
            <summary>
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.KpiService.HND_demaalvaerdi.Parameters.phndtype">
            <summary>
            </summary>
        </member>
        <member name="P:DLBR.DCF.KDB.DataAccess.StoredProcedures.KpiService.HND_demaalvaerdi.Parameters.pindlaestid">
            <summary>
            </summary>
        </member>
    </members>
</doc>
